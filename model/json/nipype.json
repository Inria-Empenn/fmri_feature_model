{
    "AFNI_Preprocessing": {
        "AlignEpiAnatPy": {
            "desc": "Align EPI to anatomical datasets or vice versa.",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "in_file": {
                        "desc": "EPI dataset to align",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "anat": {
                        "desc": "name of structural dataset",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "epi_base": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported"
                    },
                    "anat2epi": {
                        "desc": "align anatomical to EPI dataset (default)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "epi2anat": {
                        "desc": "align EPI to anatomical dataset",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "save_skullstrip": {
                        "desc": "save skull-stripped (not aligned)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "suffix": {
                        "desc": "append suffix to the original anat/epi dataset to usein the resulting dataset names (default is \"_al\")",
                        "mandatory": false,
                        "field": "",
                        "default_value": "_al",
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "epi_strip": {
                        "desc": "method to mask brain in EPI datashould be one of[3dSkullStrip]/3dAutomask/None)",
                        "mandatory": false,
                        "field": "",
                        "default_value": "3dSkullStrip",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "3dSkullStrip",
                                "3dAutomask",
                                "None"
                            ]
                        ]
                    },
                    "volreg": {
                        "desc": "do volume registration on EPI dataset before alignmentshould be 'on' or 'off', defaults to 'on'",
                        "mandatory": false,
                        "field": "",
                        "default_value": "on",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "on",
                                "off"
                            ]
                        ]
                    },
                    "tshift": {
                        "desc": "do time shifting of EPI dataset before alignmentshould be 'on' or 'off', defaults to 'on'",
                        "mandatory": false,
                        "field": "",
                        "default_value": "on",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "on",
                                "off"
                            ]
                        ]
                    },
                    "outputtype": {
                        "desc": "AFNI output filetype",
                        "mandatory": false,
                        "field": "",
                        "default_value": "AFNI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "AFNI",
                                "NIFTI_GZ"
                            ]
                        ]
                    },
                    "py27_path": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported"
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "anat_al_orig": {
                        "desc": "A version of the anatomy that is aligned to the EPI",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "epi_al_orig": {
                        "desc": "A version of the EPI dataset aligned to the anatomy",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "epi_tlrc_al": {
                        "desc": "A version of the EPI dataset aligned to a standard template",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "anat_al_mat": {
                        "desc": "matrix to align anatomy to the EPI",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "epi_al_mat": {
                        "desc": "matrix to align EPI to anatomy",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "epi_vr_al_mat": {
                        "desc": "matrix to volume register EPI",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "epi_reg_al_mat": {
                        "desc": "matrix to volume register and align epi to anatomy",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "epi_al_tlrc_mat": {
                        "desc": "matrix to volume register and align epito anatomy and put into standard space",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "epi_vr_motion": {
                        "desc": "motion parameters from EPI time-seriesregistration (tsh included in name if slicetiming correction is also included).",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "skullstrip": {
                        "desc": "skull-stripped (not aligned) volume",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "Allineate": {
            "desc": "Program to align one dataset (the 'source') to a base dataset",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "in_file": {
                        "desc": "input file to 3dAllineate",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "reference": {
                        "desc": "file to be used as reference, the first volume will be used if not given the reference will be the first volume of in_file.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_file": {
                        "desc": "output file from 3dAllineate",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [
                            "allcostx"
                        ],
                        "requires": []
                    },
                    "out_param_file": {
                        "desc": "Save the warp parameters in ASCII (.1D) format.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [
                            "in_param_file",
                            "allcostx"
                        ],
                        "requires": []
                    },
                    "in_param_file": {
                        "desc": "Read warp parameters from file and apply them to the source dataset, and produce a new dataset",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [
                            "out_param_file"
                        ],
                        "requires": []
                    },
                    "out_matrix": {
                        "desc": "Save the transformation matrix for each volume.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [
                            "in_matrix",
                            "allcostx"
                        ],
                        "requires": []
                    },
                    "in_matrix": {
                        "desc": "matrix to align input file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [
                            "out_matrix"
                        ],
                        "requires": []
                    },
                    "overwrite": {
                        "desc": "overwrite output file if it already exists",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "allcostx": {
                        "desc": "Compute and print ALL available cost functionals for the un-warped inputsAND THEN QUIT. If you use this option none of the other expected outputs will be produced",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [
                            "out_file",
                            "out_matrix",
                            "out_param_file",
                            "out_weight_file"
                        ],
                        "requires": []
                    },
                    "cost": {
                        "desc": "Defines the 'cost' function that defines the matching between the source and the base",
                        "mandatory": false,
                        "field": "",
                        "default_value": "leastsq",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "leastsq",
                                "ls",
                                "mutualinfo",
                                "mi",
                                "corratio_mul",
                                "crM",
                                "norm_mutualinfo",
                                "nmi",
                                "hellinger",
                                "hel",
                                "corratio_add",
                                "crA",
                                "corratio_uns",
                                "crU"
                            ]
                        ]
                    },
                    "interpolation": {
                        "desc": "Defines interpolation method to use during matching",
                        "mandatory": false,
                        "field": "",
                        "default_value": "nearestneighbour",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "nearestneighbour",
                                "linear",
                                "cubic",
                                "quintic"
                            ]
                        ]
                    },
                    "final_interpolation": {
                        "desc": "Defines interpolation method used to create the output dataset",
                        "mandatory": false,
                        "field": "",
                        "default_value": "nearestneighbour",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "nearestneighbour",
                                "linear",
                                "cubic",
                                "quintic",
                                "wsinc5"
                            ]
                        ]
                    },
                    "nmatch": {
                        "desc": "Use at most n scattered points to match the datasets.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "no_pad": {
                        "desc": "Do not use zero-padding on the base image.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "zclip": {
                        "desc": "Replace negative values in the input datasets (source & base) with zero.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "convergence": {
                        "desc": "Convergence test in millimeters (default 0.05mm).",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "usetemp": {
                        "desc": "temporary file use",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "check": {
                        "desc": "After cost functional optimization is done, start at the final parameters and RE-optimize using this new cost functions. If the results are too different, a warning message will be printed. However, the final parameters from the original optimization will be used to create the output dataset.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "one_pass": {
                        "desc": "Use only the refining pass -- do not try a coarse resolution pass first.  Useful if you know that only small amounts of image alignment are needed.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "two_pass": {
                        "desc": "Use a two pass alignment strategy for all volumes, searching for a large rotation+shift and then refining the alignment.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "two_blur": {
                        "desc": "Set the blurring radius for the first pass in mm.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "two_first": {
                        "desc": "Use -twopass on the first image to be registered, and then on all subsequent images from the source dataset, use results from the first image's coarse pass to start the fine pass.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "two_best": {
                        "desc": "In the coarse pass, use the best 'bb' set of initialpoints to search for the starting point for the finepass.  If bb==0, then no search is made for the beststarting point, and the identity transformation isused as the starting point.  [Default=5; min=0 max=11]",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "fine_blur": {
                        "desc": "Set the blurring radius to use in the fine resolution pass to 'x' mm.  A small amount (1-2 mm?) of blurring at the fine step may help with convergence, if there is some problem, especially if the base volume is very noisy. [Default == 0 mm = no blurring at the final alignment pass]",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "center_of_mass": {
                        "desc": "Use the center-of-mass calculation to bracket the shifts.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "autoweight": {
                        "desc": "Compute a weight function using the 3dAutomask algorithm plus some blurring of the base image.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "automask": {
                        "desc": "Compute a mask function, set a value for dilation or 0.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "autobox": {
                        "desc": "Expand the -automask function to enclose a rectangular box that holds the irregular mask.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "nomask": {
                        "desc": "Don't compute the autoweight/mask; if -weight is not also used, then every voxel will be counted equally.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "weight_file": {
                        "desc": "Set the weighting for each voxel in the base dataset; larger weights mean that voxel count more in the cost function. Must be defined on the same grid as the base dataset",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "weight": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported"
                    },
                    "out_weight_file": {
                        "desc": "Write the weight volume to disk as a dataset",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [
                            "allcostx"
                        ],
                        "requires": []
                    },
                    "source_mask": {
                        "desc": "mask the input dataset",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "source_automask": {
                        "desc": "Automatically mask the source dataset with dilation or 0.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "warp_type": {
                        "desc": "Set the warp type.",
                        "mandatory": false,
                        "field": "",
                        "default_value": "shift_only",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "shift_only",
                                "shift_rotate",
                                "shift_rotate_scale",
                                "affine_general"
                            ]
                        ]
                    },
                    "warpfreeze": {
                        "desc": "Freeze the non-rigid body parameters after first volume.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "replacebase": {
                        "desc": "If the source has more than one volume, then after the first volume is aligned to the base.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "replacemeth": {
                        "desc": "After first volume is aligned, switch method for later volumes. For use with '-replacebase'.",
                        "mandatory": false,
                        "field": "",
                        "default_value": "leastsq",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "leastsq",
                                "ls",
                                "mutualinfo",
                                "mi",
                                "corratio_mul",
                                "crM",
                                "norm_mutualinfo",
                                "nmi",
                                "hellinger",
                                "hel",
                                "corratio_add",
                                "crA",
                                "corratio_uns",
                                "crU"
                            ]
                        ]
                    },
                    "epi": {
                        "desc": "Treat the source dataset as being composed of warped EPI slices, and the base as comprising anatomically 'true' images.  Only phase-encoding direction image shearing and scaling will be allowed with this option.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "maxrot": {
                        "desc": "Maximum allowed rotation in degrees.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "maxshf": {
                        "desc": "Maximum allowed shift in mm.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "maxscl": {
                        "desc": "Maximum allowed scaling factor.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "maxshr": {
                        "desc": "Maximum allowed shearing factor.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "master": {
                        "desc": "Write the output dataset on the same grid as this file.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "newgrid": {
                        "desc": "Write the output dataset using isotropic grid spacing in mm.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "nwarp": {
                        "desc": "Experimental nonlinear warping: bilinear or legendre poly.",
                        "mandatory": false,
                        "field": "",
                        "default_value": "bilinear",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "bilinear",
                                "cubic",
                                "quintic",
                                "heptic",
                                "nonic",
                                "poly3",
                                "poly5",
                                "poly7",
                                "poly9"
                            ]
                        ]
                    },
                    "nwarp_fixmot": {
                        "desc": "To fix motion along directions.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "nwarp_fixdep": {
                        "desc": "To fix non-linear warp dependency along directions.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "verbose": {
                        "desc": "Print out verbose progress reports.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "quiet": {
                        "desc": "Don't print out verbose progress reports.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "num_threads": {
                        "desc": "set number of threads",
                        "mandatory": false,
                        "field": "",
                        "default_value": 1,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "outputtype": {
                        "desc": "AFNI output filetype",
                        "mandatory": false,
                        "field": "",
                        "default_value": "AFNI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "AFNI",
                                "NIFTI_GZ"
                            ]
                        ]
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "out_file": {
                        "desc": "output image file name",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_matrix": {
                        "desc": "matrix to align input file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_param_file": {
                        "desc": "warp parameters",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_weight_file": {
                        "desc": "weight volume",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "allcostx": {
                        "desc": "Compute and print ALL available cost functionals for the un-warped inputs",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "AutoTLRC": {
            "desc": "A minimal wrapper for the AutoTLRC script",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "outputtype": {
                        "desc": "AFNI output filetype",
                        "mandatory": false,
                        "field": "",
                        "default_value": "AFNI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "AFNI",
                                "NIFTI_GZ"
                            ]
                        ]
                    },
                    "in_file": {
                        "desc": "Original anatomical volume (+orig).The skull is removed by this scriptunless instructed otherwise (-no_ss).",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "base": {
                        "desc": "Reference anatomical volume.\nUsually this volume is in some standard space like\nTLRC or MNI space and with afni dataset view of\n(+tlrc).\nPreferably, this reference volume should have had\nthe skull removed but that is not mandatory.\nAFNI's distribution contains several templates.\nFor a longer list, use \"whereami -show_templates\"\nTT_N27+tlrc --> Single subject, skull stripped volume.\nThis volume is also known as\nN27_SurfVol_NoSkull+tlrc elsewhere in\nAFNI and SUMA land.\n(www.loni.ucla.edu, www.bic.mni.mcgill.ca)\nThis template has a full set of FreeSurfer\n(surfer.nmr.mgh.harvard.edu)\nsurface models that can be used in SUMA.\nFor details, see Talairach-related link:\nhttps://afni.nimh.nih.gov/afni/suma\nTT_icbm452+tlrc --> Average volume of 452 normal brains.\nSkull Stripped. (www.loni.ucla.edu)\nTT_avg152T1+tlrc --> Average volume of 152 normal brains.\nSkull Stripped.(www.bic.mni.mcgill.ca)\nTT_EPI+tlrc --> EPI template from spm2, masked as TT_avg152T1\nTT_avg152 and TT_EPI volume sources are from\nSPM's distribution. (www.fil.ion.ucl.ac.uk/spm/)\nIf you do not specify a path for the template, the script\nwill attempt to locate the template AFNI's binaries directory.\nNOTE: These datasets have been slightly modified from\ntheir original size to match the standard TLRC\ndimensions (Jean Talairach and Pierre Tournoux\nCo-Planar Stereotaxic Atlas of the Human Brain\nThieme Medical Publishers, New York, 1988).\nThat was done for internal consistency in AFNI.\nYou may use the original form of these\nvolumes if you choose but your TLRC coordinates\nwill not be consistent with AFNI's TLRC database\n(San Antonio Talairach Daemon database), for example.",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "no_ss": {
                        "desc": "Do not strip skull of input data set\n(because skull has already been removed\nor because template still has the skull)\nNOTE: The ``-no_ss`` option is not all that optional.\nHere is a table of when you should and should not use ``-no_ss``\n\n  +------------------+------------+---------------+\n  | Dataset          | Template                   |\n  +==================+============+===============+\n  |                  | w/ skull   | wo/ skull     |\n  +------------------+------------+---------------+\n  | WITH skull       | ``-no_ss`` | xxx           |\n  +------------------+------------+---------------+\n  | WITHOUT skull    | No Cigar   | ``-no_ss``    |\n  +------------------+------------+---------------+\n\nTemplate means: Your template of choice\nDset. means: Your anatomical dataset\n``-no_ss`` means: Skull stripping should not be attempted on Dset\nxxx means: Don't put anything, the script will strip Dset\nNo Cigar means: Don't try that combination, it makes no sense.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "out_file": {
                        "desc": "output file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "AutoTcorrelate": {
            "desc": "Computes the correlation coefficient between the time series of each",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "in_file": {
                        "desc": "timeseries x space (volume or surface) file",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "polort": {
                        "desc": "Remove polynomial trend of order m or -1 for no detrending",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "eta2": {
                        "desc": "eta^2 similarity",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "mask": {
                        "desc": "mask of voxels",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "mask_only_targets": {
                        "desc": "use mask only on targets voxels",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "mask_source"
                        ],
                        "requires": []
                    },
                    "mask_source": {
                        "desc": "mask for source voxels",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [
                            "mask_only_targets"
                        ],
                        "requires": []
                    },
                    "out_file": {
                        "desc": "output image file name",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "num_threads": {
                        "desc": "set number of threads",
                        "mandatory": false,
                        "field": "",
                        "default_value": 1,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "outputtype": {
                        "desc": "AFNI output filetype",
                        "mandatory": false,
                        "field": "",
                        "default_value": "AFNI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "AFNI",
                                "NIFTI_GZ"
                            ]
                        ]
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "out_file": {
                        "desc": "output file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "Automask": {
            "desc": "Create a brain-only mask of the image using AFNI 3dAutomask command",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "in_file": {
                        "desc": "input file to 3dAutomask",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_file": {
                        "desc": "output image file name",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "brain_file": {
                        "desc": "output file from 3dAutomask",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "clfrac": {
                        "desc": "sets the clip level fraction (must be 0.1-0.9). A small value will tend to make the mask larger [default = 0.5].",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "dilate": {
                        "desc": "dilate the mask outwards",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "erode": {
                        "desc": "erode the mask inwards",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "num_threads": {
                        "desc": "set number of threads",
                        "mandatory": false,
                        "field": "",
                        "default_value": 1,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "outputtype": {
                        "desc": "AFNI output filetype",
                        "mandatory": false,
                        "field": "",
                        "default_value": "AFNI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "AFNI",
                                "NIFTI_GZ"
                            ]
                        ]
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "out_file": {
                        "desc": "mask file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "brain_file": {
                        "desc": "brain file (skull stripped)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "Bandpass": {
            "desc": "Program to lowpass and/or highpass each voxel time series in a",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "in_file": {
                        "desc": "input file to 3dBandpass",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_file": {
                        "desc": "output file from 3dBandpass",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "lowpass": {
                        "desc": "lowpass",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "highpass": {
                        "desc": "highpass",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "mask": {
                        "desc": "mask file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "despike": {
                        "desc": "Despike each time series before other processing. Hopefully, you don't actually need to do this, which is why it is optional.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "orthogonalize_file": {
                        "desc": "Also orthogonalize input to columns in f.1D. Multiple '-ort' options are allowed.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Files",
                        "excludes": [],
                        "requires": []
                    },
                    "orthogonalize_dset": {
                        "desc": "Orthogonalize each voxel to the corresponding voxel time series in dataset 'fset', which must have the same spatial and temporal grid structure as the main input dataset. At present, only one '-dsort' option is allowed.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "no_detrend": {
                        "desc": "Skip the quadratic detrending of the input that occurs before the FFT-based bandpassing. You would only want to do this if the dataset had been detrended already in some other program.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "tr": {
                        "desc": "Set time step (TR) in sec [default=from dataset header].",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "nfft": {
                        "desc": "Set the FFT length [must be a legal value].",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "normalize": {
                        "desc": "Make all output time series have L2 norm = 1 (i.e., sum of squares = 1).",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "automask": {
                        "desc": "Create a mask from the input dataset.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "blur": {
                        "desc": "Blur (inside the mask only) with a filter width (FWHM) of 'fff' millimeters.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "localPV": {
                        "desc": "Replace each vector by the local Principal Vector (AKA first singular vector) from a neighborhood of radius 'rrr' millimeters. Note that the PV time series is L2 normalized. This option is mostly for Bob Cox to have fun with.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "notrans": {
                        "desc": "Don't check for initial positive transients in the data. The test is a little slow, so skipping it is OK, if you KNOW the data time series are transient-free.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "num_threads": {
                        "desc": "set number of threads",
                        "mandatory": false,
                        "field": "",
                        "default_value": 1,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "outputtype": {
                        "desc": "AFNI output filetype",
                        "mandatory": false,
                        "field": "",
                        "default_value": "AFNI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "AFNI",
                                "NIFTI_GZ"
                            ]
                        ]
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "out_file": {
                        "desc": "output file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "BlurInMask": {
            "desc": "Blurs a dataset spatially inside a mask.  That's all.  Experimental.",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "in_file": {
                        "desc": "input file to 3dSkullStrip",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_file": {
                        "desc": "output to the file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "mask": {
                        "desc": "Mask dataset, if desired.  Blurring will occur only within the mask. Voxels NOT in the mask will be set to zero in the output.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "multimask": {
                        "desc": "Multi-mask dataset -- each distinct nonzero value in dataset will be treated as a separate mask for blurring purposes.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "automask": {
                        "desc": "Create an automask from the input dataset.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "fwhm": {
                        "desc": "fwhm kernel size",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "preserve": {
                        "desc": "Normally, voxels not in the mask will be set to zero in the output. If you want the original values in the dataset to be preserved in the output, use this option.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "float_out": {
                        "desc": "Save dataset as floats, no matter what the input data type is.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "options": {
                        "desc": "options",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "num_threads": {
                        "desc": "set number of threads",
                        "mandatory": false,
                        "field": "",
                        "default_value": 1,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "outputtype": {
                        "desc": "AFNI output filetype",
                        "mandatory": false,
                        "field": "",
                        "default_value": "AFNI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "AFNI",
                                "NIFTI_GZ"
                            ]
                        ]
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "out_file": {
                        "desc": "output file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "BlurToFWHM": {
            "desc": "Blurs a 'master' dataset until it reaches a specified FWHM smoothness",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "in_file": {
                        "desc": "The dataset that will be smoothed",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "automask": {
                        "desc": "Create an automask from the input dataset.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "fwhm": {
                        "desc": "Blur until the 3D FWHM reaches this value (in mm)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "fwhmxy": {
                        "desc": "Blur until the 2D (x,y)-plane FWHM reaches this value (in mm)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "blurmaster": {
                        "desc": "The dataset whose smoothness controls the process.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "mask": {
                        "desc": "Mask dataset, if desired. Voxels NOT in mask will be set to zero in output.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "num_threads": {
                        "desc": "set number of threads",
                        "mandatory": false,
                        "field": "",
                        "default_value": 1,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "outputtype": {
                        "desc": "AFNI output filetype",
                        "mandatory": false,
                        "field": "",
                        "default_value": "AFNI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "AFNI",
                                "NIFTI_GZ"
                            ]
                        ]
                    },
                    "out_file": {
                        "desc": "output image file name",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "out_file": {
                        "desc": "output file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "ClipLevel": {
            "desc": "Estimates the value at which to clip the anatomical dataset so",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "in_file": {
                        "desc": "input file to 3dClipLevel",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "mfrac": {
                        "desc": "Use the number ff instead of 0.50 in the algorithm",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "doall": {
                        "desc": "Apply the algorithm to each sub-brick separately.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": "grad",
                        "requires": []
                    },
                    "grad": {
                        "desc": "Also compute a 'gradual' clip level as a function of voxel position, and output that to a dataset.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": "doall",
                        "requires": []
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "clip_val": {
                        "desc": "output",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "DegreeCentrality": {
            "desc": "Performs degree centrality on a dataset using a given maskfile",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "in_file": {
                        "desc": "input file to 3dDegreeCentrality",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "sparsity": {
                        "desc": "only take the top percent of connections",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "oned_file": {
                        "desc": "output filepath to text dump of correlation matrix",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "mask": {
                        "desc": "mask file to mask input data",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "thresh": {
                        "desc": "threshold to exclude connections where corr <= thresh",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "polort": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "autoclip": {
                        "desc": "Clip off low-intensity regions in the dataset",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "automask": {
                        "desc": "Mask the dataset to target brain-only voxels",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "num_threads": {
                        "desc": "set number of threads",
                        "mandatory": false,
                        "field": "",
                        "default_value": 1,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "outputtype": {
                        "desc": "AFNI output filetype",
                        "mandatory": false,
                        "field": "",
                        "default_value": "AFNI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "AFNI",
                                "NIFTI_GZ"
                            ]
                        ]
                    },
                    "out_file": {
                        "desc": "output image file name",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "oned_file": {
                        "desc": "The text output of the similarity matrix computed after thresholding with one-dimensional and ijk voxel indices, correlations, image extents, and affine matrix.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_file": {
                        "desc": "output file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "Despike": {
            "desc": "Removes 'spikes' from the 3D+time input dataset",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "in_file": {
                        "desc": "input file to 3dDespike",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_file": {
                        "desc": "output image file name",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "num_threads": {
                        "desc": "set number of threads",
                        "mandatory": false,
                        "field": "",
                        "default_value": 1,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "outputtype": {
                        "desc": "AFNI output filetype",
                        "mandatory": false,
                        "field": "",
                        "default_value": "AFNI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "AFNI",
                                "NIFTI_GZ"
                            ]
                        ]
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "out_file": {
                        "desc": "output file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "Detrend": {
            "desc": "This program removes components from voxel time series using",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "in_file": {
                        "desc": "input file to 3dDetrend",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_file": {
                        "desc": "output image file name",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "num_threads": {
                        "desc": "set number of threads",
                        "mandatory": false,
                        "field": "",
                        "default_value": 1,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "outputtype": {
                        "desc": "AFNI output filetype",
                        "mandatory": false,
                        "field": "",
                        "default_value": "AFNI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "AFNI",
                                "NIFTI_GZ"
                            ]
                        ]
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "out_file": {
                        "desc": "output file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "ECM": {
            "desc": "Performs degree centrality on a dataset using a given maskfile",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "in_file": {
                        "desc": "input file to 3dECM",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "sparsity": {
                        "desc": "only take the top percent of connections",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "full": {
                        "desc": "Full power method; enables thresholding; automatically selected if -thresh or -sparsity are set",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "fecm": {
                        "desc": "Fast centrality method; substantial speed increase but cannot accommodate thresholding; automatically selected if -thresh or -sparsity are not set",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "shift": {
                        "desc": "shift correlation coefficients in similarity matrix to enforce non-negativity, s >= 0.0; default = 0.0 for -full, 1.0 for -fecm",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "scale": {
                        "desc": "scale correlation coefficients in similarity matrix to after shifting, x >= 0.0; default = 1.0 for -full, 0.5 for -fecm",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "eps": {
                        "desc": "sets the stopping criterion for the power iteration; :math:`l2\\|v_\\text{old} - v_\\text{new}\\| < eps\\|v_\\text{old}\\|`; default = 0.001",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "max_iter": {
                        "desc": "sets the maximum number of iterations to use in the power iteration; default = 1000",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "memory": {
                        "desc": "Limit memory consumption on system by setting the amount of GB to limit the algorithm to; default = 2GB",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "mask": {
                        "desc": "mask file to mask input data",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "thresh": {
                        "desc": "threshold to exclude connections where corr <= thresh",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "polort": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "autoclip": {
                        "desc": "Clip off low-intensity regions in the dataset",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "automask": {
                        "desc": "Mask the dataset to target brain-only voxels",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "num_threads": {
                        "desc": "set number of threads",
                        "mandatory": false,
                        "field": "",
                        "default_value": 1,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "outputtype": {
                        "desc": "AFNI output filetype",
                        "mandatory": false,
                        "field": "",
                        "default_value": "AFNI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "AFNI",
                                "NIFTI_GZ"
                            ]
                        ]
                    },
                    "out_file": {
                        "desc": "output image file name",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "out_file": {
                        "desc": "output file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "Fim": {
            "desc": "Program to calculate the cross-correlation of an ideal reference",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "in_file": {
                        "desc": "input file to 3dfim+",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_file": {
                        "desc": "output image file name",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "ideal_file": {
                        "desc": "ideal time series file name",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "fim_thr": {
                        "desc": "fim internal mask threshold value",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "out": {
                        "desc": "Flag to output the specified parameter",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "num_threads": {
                        "desc": "set number of threads",
                        "mandatory": false,
                        "field": "",
                        "default_value": 1,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "outputtype": {
                        "desc": "AFNI output filetype",
                        "mandatory": false,
                        "field": "",
                        "default_value": "AFNI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "AFNI",
                                "NIFTI_GZ"
                            ]
                        ]
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "out_file": {
                        "desc": "output file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "Fourier": {
            "desc": "Program to lowpass and/or highpass each voxel time series in a",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "in_file": {
                        "desc": "input file to 3dFourier",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_file": {
                        "desc": "output image file name",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "lowpass": {
                        "desc": "lowpass",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "highpass": {
                        "desc": "highpass",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "retrend": {
                        "desc": "Any mean and linear trend are removed before filtering. This will restore the trend after filtering.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "num_threads": {
                        "desc": "set number of threads",
                        "mandatory": false,
                        "field": "",
                        "default_value": 1,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "outputtype": {
                        "desc": "AFNI output filetype",
                        "mandatory": false,
                        "field": "",
                        "default_value": "AFNI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "AFNI",
                                "NIFTI_GZ"
                            ]
                        ]
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "out_file": {
                        "desc": "output file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "Hist": {
            "desc": "Computes average of all voxels in the input dataset",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "in_file": {
                        "desc": "input file to 3dHist",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_file": {
                        "desc": "Write histogram to niml file with this prefix",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "showhist": {
                        "desc": "write a text visual histogram",
                        "mandatory": false,
                        "field": "",
                        "default_value": false,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "out_show": {
                        "desc": "output image file name",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "mask": {
                        "desc": "matrix to align input file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "nbin": {
                        "desc": "number of bins",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "max_value": {
                        "desc": "maximum intensity value",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "min_value": {
                        "desc": "minimum intensity value",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "bin_width": {
                        "desc": "bin width",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "out_file": {
                        "desc": "output file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_show": {
                        "desc": "output visual histogram",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "LFCD": {
            "desc": "Performs degree centrality on a dataset using a given maskfile",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "in_file": {
                        "desc": "input file to 3dLFCD",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "mask": {
                        "desc": "mask file to mask input data",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "thresh": {
                        "desc": "threshold to exclude connections where corr <= thresh",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "polort": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "autoclip": {
                        "desc": "Clip off low-intensity regions in the dataset",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "automask": {
                        "desc": "Mask the dataset to target brain-only voxels",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "num_threads": {
                        "desc": "set number of threads",
                        "mandatory": false,
                        "field": "",
                        "default_value": 1,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "outputtype": {
                        "desc": "AFNI output filetype",
                        "mandatory": false,
                        "field": "",
                        "default_value": "AFNI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "AFNI",
                                "NIFTI_GZ"
                            ]
                        ]
                    },
                    "out_file": {
                        "desc": "output image file name",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "out_file": {
                        "desc": "output file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "Maskave": {
            "desc": "Computes average of all voxels in the input dataset",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "in_file": {
                        "desc": "input file to 3dmaskave",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_file": {
                        "desc": "output image file name",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "mask": {
                        "desc": "matrix to align input file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "quiet": {
                        "desc": "matrix to align input file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "num_threads": {
                        "desc": "set number of threads",
                        "mandatory": false,
                        "field": "",
                        "default_value": 1,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "outputtype": {
                        "desc": "AFNI output filetype",
                        "mandatory": false,
                        "field": "",
                        "default_value": "AFNI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "AFNI",
                                "NIFTI_GZ"
                            ]
                        ]
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "out_file": {
                        "desc": "output file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "Means": {
            "desc": "Takes the voxel-by-voxel mean of all input datasets using 3dMean",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "in_file_a": {
                        "desc": "input file to 3dMean",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "in_file_b": {
                        "desc": "another input file to 3dMean",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "datum": {
                        "desc": "Sets the data type of the output dataset",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "out_file": {
                        "desc": "output image file name",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "scale": {
                        "desc": "scaling of output",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "non_zero": {
                        "desc": "use only non-zero values",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "std_dev": {
                        "desc": "calculate std dev",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "sqr": {
                        "desc": "mean square instead of value",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "summ": {
                        "desc": "take sum, (not average)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "count": {
                        "desc": "compute count of non-zero voxels",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "mask_inter": {
                        "desc": "create intersection mask",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "mask_union": {
                        "desc": "create union mask",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "num_threads": {
                        "desc": "set number of threads",
                        "mandatory": false,
                        "field": "",
                        "default_value": 1,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "outputtype": {
                        "desc": "AFNI output filetype",
                        "mandatory": false,
                        "field": "",
                        "default_value": "AFNI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "AFNI",
                                "NIFTI_GZ"
                            ]
                        ]
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "out_file": {
                        "desc": "output file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "NetCorr": {
            "desc": "Calculate correlation matrix of a set of ROIs (using mean time series of",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "in_file": {
                        "desc": "input time series file (4D data set)",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "in_rois": {
                        "desc": "input set of ROIs, each labelled with distinct integers",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "mask": {
                        "desc": "can include a whole brain mask within which to calculate correlation. Otherwise, data should be masked already",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "weight_ts": {
                        "desc": "input a 1D file WTS of weights that will be applied multiplicatively to each ROI's average time series. WTS can be a column- or row-file of values, but it must have the same length as the input time series volume. If the initial average time series was A[n] for n=0,..,(N-1) time points, then applying a set of weights W[n] of the same length from WTS would produce a new time series:  B[n] = A[n] * W[n]",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "fish_z": {
                        "desc": "switch to also output a matrix of Fisher Z-transform values for the corr coefs (r): Z = atanh(r) , (with Z=4 being output along matrix diagonals where r=1, as the r-to-Z conversion is ceilinged at Z = atanh(r=0.999329) = 4, which is still *quite* a high Pearson-r value",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "part_corr": {
                        "desc": "output the partial correlation matrix",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "ts_out": {
                        "desc": "switch to output the mean time series of the ROIs that have been used to generate the correlation matrices. Output filenames mirror those of the correlation matrix files, with a '.netts' postfix",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "ts_label": {
                        "desc": "additional switch when using '-ts_out'. Using this option will insert the integer ROI label at the start of each line of the *.netts file created. Thus, for a time series of length N, each line will have N+1 numbers, where the first is the integer ROI label and the subsequent N are scientific notation values",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "ts_indiv": {
                        "desc": "switch to create a directory for each network that contains the average time series for each ROI in individual files (each file has one line). The directories are labelled PREFIX_000_INDIV/, PREFIX_001_INDIV/, etc. (one per network). Within each directory, the files are labelled ROI_001.netts, ROI_002.netts, etc., with the numbers given by the actual ROI integer labels",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "ts_wb_corr": {
                        "desc": "switch to create a set of whole brain correlation maps. Performs whole brain correlation for each ROI's average time series; this will automatically create a directory for each network that contains the set of whole brain correlation maps (Pearson 'r's). The directories are labelled as above for '-ts_indiv' Within each directory, the files are labelled WB_CORR_ROI_001+orig, WB_CORR_ROI_002+orig, etc., with the numbers given by the actual ROI integer labels",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "ts_wb_Z": {
                        "desc": "same as above in '-ts_wb_corr', except that the maps have been Fisher transformed to Z-scores the relation: Z=atanh(r). To avoid infinities in the transform, Pearson values are effectively capped at |r| = 0.999329 (where |Z| = 4.0). Files are labelled WB_Z_ROI_001+orig, etc",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "ts_wb_strlabel": {
                        "desc": "by default, '-ts_wb_{corr,Z}' output files are named using the int number of a given ROI, such as: WB_Z_ROI_001+orig. With this option, one can replace the int (such as '001') with the string label (such as 'L-thalamus') *if* one has a labeltable attached to the file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "nifti": {
                        "desc": "output any correlation map files as NIFTI files (default is BRIK/HEAD). Only useful if using '-ts_wb_corr' and/or '-ts_wb_Z'",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "output_mask_nonnull": {
                        "desc": "internally, this program checks for where there are nonnull time series, because we don't like those, in general.  With this flag, the user can output the determined mask of non-null time series.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "push_thru_many_zeros": {
                        "desc": "by default, this program will grind to a halt and refuse to calculate if any ROI contains >10 percent of voxels with null times series (i.e., each point is 0), as of April, 2017.  This is because it seems most likely that hidden badness is responsible. However, if the user still wants to carry on the calculation anyways, then this option will allow one to push on through.  However, if any ROI *only* has null time series, then the program will not calculate and the user will really, really, really need to address their masking",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "ignore_LT": {
                        "desc": "switch to ignore any label table labels in the '-in_rois' file, if there are any labels attached",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "out_file": {
                        "desc": "output file name part",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "num_threads": {
                        "desc": "set number of threads",
                        "mandatory": false,
                        "field": "",
                        "default_value": 1,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "outputtype": {
                        "desc": "AFNI output filetype",
                        "mandatory": false,
                        "field": "",
                        "default_value": "AFNI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "AFNI",
                                "NIFTI_GZ"
                            ]
                        ]
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "out_corr_matrix": {
                        "desc": "output correlation matrix between ROIs written to a text file with .netcc suffix",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_corr_maps": {
                        "desc": "output correlation maps in Pearson and/or Z-scores",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "OutlierCount": {
            "desc": "Calculates number of 'outliers' at each time point of a",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "in_file": {
                        "desc": "input dataset",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "mask": {
                        "desc": "only count voxels within the given mask",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [
                            "autoclip",
                            "automask"
                        ],
                        "requires": []
                    },
                    "qthr": {
                        "desc": "indicate a value for q to compute alpha",
                        "mandatory": false,
                        "field": "",
                        "default_value": 0.001,
                        "type": "Float",
                        "excludes": [],
                        "requires": [],
                        "value": null,
                        "low": 0.0,
                        "high": 1.0
                    },
                    "autoclip": {
                        "desc": "clip off small voxels",
                        "mandatory": false,
                        "field": "",
                        "default_value": false,
                        "type": "Boolean",
                        "excludes": [
                            "mask"
                        ],
                        "requires": []
                    },
                    "automask": {
                        "desc": "clip off small voxels",
                        "mandatory": false,
                        "field": "",
                        "default_value": false,
                        "type": "Boolean",
                        "excludes": [
                            "mask"
                        ],
                        "requires": []
                    },
                    "fraction": {
                        "desc": "write out the fraction of masked voxels which are outliers at each timepoint",
                        "mandatory": false,
                        "field": "",
                        "default_value": false,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "interval": {
                        "desc": "write out the median + 3.5 MAD of outlier count with each timepoint",
                        "mandatory": false,
                        "field": "",
                        "default_value": false,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "save_outliers": {
                        "desc": "enables out_file option",
                        "mandatory": false,
                        "field": "",
                        "default_value": false,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "outliers_file": {
                        "desc": "output image file name",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "polort": {
                        "desc": "detrend each voxel timeseries with polynomials",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "legendre": {
                        "desc": "use Legendre polynomials",
                        "mandatory": false,
                        "field": "",
                        "default_value": false,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "out_file": {
                        "desc": "capture standard output",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "out_outliers": {
                        "desc": "output image file name",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_file": {
                        "desc": "capture standard output",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "QualityIndex": {
            "desc": "Computes a quality index for each sub-brick in a 3D+time dataset.",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "in_file": {
                        "desc": "input dataset",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "mask": {
                        "desc": "compute correlation only across masked voxels",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [
                            "autoclip",
                            "automask"
                        ],
                        "requires": []
                    },
                    "spearman": {
                        "desc": "Quality index is 1 minus the Spearman (rank) correlation coefficient of each sub-brick with the median sub-brick. (default).",
                        "mandatory": false,
                        "field": "",
                        "default_value": false,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "quadrant": {
                        "desc": "Similar to -spearman, but using 1 minus the quadrant correlation coefficient as the quality index.",
                        "mandatory": false,
                        "field": "",
                        "default_value": false,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "autoclip": {
                        "desc": "clip off small voxels",
                        "mandatory": false,
                        "field": "",
                        "default_value": false,
                        "type": "Boolean",
                        "excludes": [
                            "mask"
                        ],
                        "requires": []
                    },
                    "automask": {
                        "desc": "clip off small voxels",
                        "mandatory": false,
                        "field": "",
                        "default_value": false,
                        "type": "Boolean",
                        "excludes": [
                            "mask"
                        ],
                        "requires": []
                    },
                    "clip": {
                        "desc": "clip off values below",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "interval": {
                        "desc": "write out the median + 3.5 MAD of outlier count with each timepoint",
                        "mandatory": false,
                        "field": "",
                        "default_value": false,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "out_file": {
                        "desc": "capture standard output",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "out_file": {
                        "desc": "file containing the captured standard output",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "Qwarp": {
            "desc": "",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "in_file": {
                        "desc": "Source image (opposite phase encoding direction than base image).",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "base_file": {
                        "desc": "Base image (opposite phase encoding direction than source image).",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_file": {
                        "desc": "Sets the prefix/suffix for the output datasets.\n\n* The source dataset is warped to match the base\n  and gets prefix 'ppp'. (Except if '-plusminus' is used\n* The final interpolation to this output dataset is\n  done using the 'wsinc5' method.  See the output of\n  3dAllineate -HELP\n  (in the \"Modifying '-final wsinc5'\" section) for\n  the lengthy technical details.\n* The 3D warp used is saved in a dataset with\n  prefix 'ppp_WARP' -- this dataset can be used\n  with 3dNwarpApply and 3dNwarpCat, for example.\n* To be clear, this is the warp from source dataset\n  coordinates to base dataset coordinates, where the\n  values at each base grid point are the xyz displacements\n  needed to move that grid point's xyz values to the\n  corresponding xyz values in the source dataset:\n  base( (x,y,z) + WARP(x,y,z) ) matches source(x,y,z)\n  Another way to think of this warp is that it 'pulls'\n  values back from source space to base space.\n* 3dNwarpApply would use 'ppp_WARP' to transform datasets\n  aligned with the source dataset to be aligned with the\n  base dataset.\n\n**If you do NOT want this warp saved, use the option '-nowarp'**.\n(However, this warp is usually the most valuable possible output!)\n\n* If you want to calculate and save the inverse 3D warp,\n  use the option '-iwarp'.  This inverse warp will then be\n  saved in a dataset with prefix 'ppp_WARPINV'.\n* This inverse warp could be used to transform data from base\n  space to source space, if you need to do such an operation.\n* You can easily compute the inverse later, say by a command like\n  3dNwarpCat -prefix Z_WARPINV 'INV(Z_WARP+tlrc)'\n  or the inverse can be computed as needed in 3dNwarpApply, like\n  3dNwarpApply -nwarp 'INV(Z_WARP+tlrc)' -source Dataset.nii ...\n\n",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "resample": {
                        "desc": "This option simply resamples the source dataset to match the\nbase dataset grid.  You can use this if the two datasets\noverlap well (as seen in the AFNI GUI), but are not on the\nsame 3D grid.\n\n* If they don't overlap well, allineate them first\n* The reampling here is done with the\n  'wsinc5' method, which has very little blurring artifact.\n* If the base and source datasets ARE on the same 3D grid,\n  then the -resample option will be ignored.\n* You CAN use -resample with these 3dQwarp options:\n  -plusminus  -inilev  -iniwarp  -duplo\n\n",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "allineate": {
                        "desc": "This option will make 3dQwarp run 3dAllineate first, to align the source dataset to the base with an affine transformation. It will then use that alignment as a starting point for the nonlinear warping.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "allineate_opts": {
                        "desc": "add extra options to the 3dAllineate command to be run by 3dQwarp.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": [
                            "allineate"
                        ]
                    },
                    "nowarp": {
                        "desc": "Do not save the _WARP file.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "iwarp": {
                        "desc": "Do compute and save the _WARPINV file.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "plusminus"
                        ],
                        "requires": []
                    },
                    "pear": {
                        "desc": "Use strict Pearson correlation for matching.Not usually recommended, since the 'clipped Pearson' methodused by default will reduce the impact of outlier values.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "noneg": {
                        "desc": "Replace negative values in either input volume with 0.\n\n* If there ARE negative input values, and you do NOT use -noneg,\n  then strict Pearson correlation will be used, since the 'clipped'\n  method only is implemented for non-negative volumes.\n* '-noneg' is not the default, since there might be situations where\n  you want to align datasets with positive and negative values mixed.\n* But, in many cases, the negative values in a dataset are just the\n  result of interpolation artifacts (or other peculiarities), and so\n  they should be ignored.  That is what '-noneg' is for.\n\n",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "nopenalty": {
                        "desc": "Replace negative values in either input volume with 0.\n\n* If there ARE negative input values, and you do NOT use -noneg,\n  then strict Pearson correlation will be used, since the 'clipped'\n  method only is implemented for non-negative volumes.\n* '-noneg' is not the default, since there might be situations where\n  you want to align datasets with positive and negative values mixed.\n* But, in many cases, the negative values in a dataset are just the\n  result of interpolation artifacts (or other peculiarities), and so\n  they should be ignored. That is what '-noneg' is for.\n\n",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "penfac": {
                        "desc": "Use this value to weight the penalty.\nThe default value is 1. Larger values mean the\npenalty counts more, reducing grid distortions,\ninsha'Allah; '-nopenalty' is the same as '-penfac 0'.\nIn 23 Sep 2013 Zhark increased the default value of\nthe penalty by a factor of 5, and also made it get\nprogressively larger with each level of refinement.\nThus, warping results will vary from earlier instances\nof 3dQwarp.\n\n* The progressive increase in the penalty at higher levels\n  means that the 'cost function' can actually look like the\n  alignment is getting worse when the levels change.\n* IF you wish to turn off this progression, for whatever\n  reason (e.g., to keep compatibility with older results),\n  use the option '-penold'.To be completely compatible with\n  the older 3dQwarp, you'll also have to use '-penfac 0.2'.\n\n",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "noweight": {
                        "desc": "If you want a binary weight (the old default), use this option.That is, each voxel in the base volume automask will beweighted the same in the computation of the cost functional.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "weight": {
                        "desc": "Instead of computing the weight from the base dataset,directly input the weight volume from dataset 'www'.Useful if you know what over parts of the base image youwant to emphasize or de-emphasize the matching functional.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "wball": {
                        "desc": "\"``-wball x y z r f``\nEnhance automatic weight from '-useweight' by a factor\nof 1+f\\*Gaussian(FWHM=r) centered in the base image at\nDICOM coordinates (x,y,z) and with radius 'r'. The\ngoal of this option is to try and make the alignment\nbetter in a specific part of the brain.\nExample:  -wball 0 14 6 30 40\nto emphasize the thalamic area (in MNI/Talairach space).\n\n* The 'r' parameter must be positive!\n* The 'f' parameter must be between 1 and 100 (inclusive).\n* '-wball' does nothing if you input your own weight\n  with the '-weight' option.\n* '-wball' does change the binary weight created by\n  the '-noweight' option.\n* You can only use '-wball' once in a run of 3dQwarp.\n\n**The effect of '-wball' is not dramatic.** The example\nabove makes the average brain image across a collection\nof subjects a little sharper in the thalamic area, which\nmight have some small value.  If you care enough about\nalignment to use '-wball', then you should examine the\nresults from 3dQwarp for each subject, to see if the\nalignments are good enough for your purposes.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [
                            "wmask"
                        ],
                        "requires": []
                    },
                    "bandpass": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "wmask": {
                        "desc": "Similar to '-wball', but here, you provide a dataset 'ws'\nthat indicates where to increase the weight.\n\n* The 'ws' dataset must be on the same 3D grid as the base dataset.\n* 'ws' is treated as a mask -- it only matters where it\n  is nonzero -- otherwise, the values inside are not used.\n* After 'ws' comes the factor 'f' by which to increase the\n  automatically computed weight.  Where 'ws' is nonzero,\n  the weighting will be multiplied by (1+f).\n* As with '-wball', the factor 'f' should be between 1 and 100.\n\n",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [
                            "wball"
                        ],
                        "requires": []
                    },
                    "out_weight_file": {
                        "desc": "Write the weight volume to disk as a dataset",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "blur": {
                        "desc": "Gaussian blur the input images by 'bb' (FWHM) voxels before\ndoing the alignment (the output dataset will not be blurred).\nThe default is 2.345 (for no good reason).\n\n* Optionally, you can provide 2 values for 'bb', and then\n  the first one is applied to the base volume, the second\n  to the source volume.\n  e.g., '-blur 0 3' to skip blurring the base image\n  (if the base is a blurry template, for example).\n* A negative blur radius means to use 3D median filtering,\n  rather than Gaussian blurring.  This type of filtering will\n  better preserve edges, which can be important in alignment.\n* If the base is a template volume that is already blurry,\n  you probably don't want to blur it again, but blurring\n  the source volume a little is probably a good idea, to\n  help the program avoid trying to match tiny features.\n* Note that -duplo will blur the volumes some extra\n  amount for the initial small-scale warping, to make\n  that phase of the program converge more rapidly.\n\n",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "pblur": {
                        "desc": "Use progressive blurring; that is, for larger patch sizes,\nthe amount of blurring is larger.  The general idea is to\navoid trying to match finer details when the patch size\nand incremental warps are coarse.  When '-blur' is used\nas well, it sets a minimum amount of blurring that will\nbe used. [06 Aug 2014 -- '-pblur' may become the default someday].\n\n* You can optionally give the fraction of the patch size that\n  is used for the progressive blur by providing a value between\n  0 and 0.25 after '-pblur'.  If you provide TWO values, the\n  the first fraction is used for progressively blurring the\n  base image and the second for the source image.  The default\n  parameters when just '-pblur' is given is the same as giving\n  the options as '-pblur 0.09 0.09'.\n* '-pblur' is useful when trying to match 2 volumes with high\n  amounts of detail; e.g, warping one subject's brain image to\n  match another's, or trying to warp to match a detailed template.\n* Note that using negative values with '-blur' means that the\n  progressive blurring will be done with median filters, rather\n  than Gaussian linear blurring.\n\nNote: The combination of the -allineate and -pblur options will make\nthe results of using 3dQwarp to align to a template somewhat\nless sensitive to initial head position and scaling.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "emask": {
                        "desc": "Here, 'ee' is a dataset to specify a mask of voxelsto EXCLUDE from the analysis -- all voxels in 'ee'that are NONZERO will not be used in the alignment.The base image always automasked -- the emask isextra, to indicate voxels you definitely DON'T wantincluded in the matching process, even if they areinside the brain.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "noXdis": {
                        "desc": "Warp will not displace in x direction",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "noYdis": {
                        "desc": "Warp will not displace in y direction",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "noZdis": {
                        "desc": "Warp will not displace in z direction",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "iniwarp": {
                        "desc": "A dataset with an initial nonlinear warp to use.\n\n* If this option is not used, the initial warp is the identity.\n* You can specify a catenation of warps (in quotes) here, as in\n  program 3dNwarpApply.\n* As a special case, if you just input an affine matrix in a .1D\n  file, that will work also -- it is treated as giving the initial\n  warp via the string \"IDENT(base_dataset) matrix_file.aff12.1D\".\n* You CANNOT use this option with -duplo !!\n* -iniwarp is usually used with -inilev to re-start 3dQwarp from\n  a previous stopping point.\n\n",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [
                            "duplo"
                        ],
                        "requires": []
                    },
                    "inilev": {
                        "desc": "The initial refinement 'level' at which to start.\n\n* Usually used with -iniwarp; CANNOT be used with -duplo.\n* The combination of -inilev and -iniwarp lets you take the\n  results of a previous 3dQwarp run and refine them further:\n  Note that the source dataset in the second run is the SAME as\n  in the first run.  If you don't see why this is necessary,\n  then you probably need to seek help from an AFNI guru.\n\n",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [
                            "duplo"
                        ],
                        "requires": []
                    },
                    "minpatch": {
                        "desc": "The value of mm should be an odd integer.\n\n* The default value of mm is 25.\n* For more accurate results than mm=25, try 19 or 13.\n* The smallest allowed patch size is 5.\n* You may want stop at a larger patch size (say 7 or 9) and use\n  the -Qfinal option to run that final level with quintic warps,\n  which might run faster and provide the same degree of warp detail.\n* Trying to make two different brain volumes match in fine detail\n  is usually a waste of time, especially in humans.  There is too\n  much variability in anatomy to match gyrus to gyrus accurately.\n  For this reason, the default minimum patch size is 25 voxels.\n  Using a smaller '-minpatch' might try to force the warp to\n  match features that do not match, and the result can be useless\n  image distortions -- another reason to LOOK AT THE RESULTS.\n\n",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "maxlev": {
                        "desc": "The initial refinement 'level' at which to start.\n\n* Usually used with -iniwarp; CANNOT be used with -duplo.\n* The combination of -inilev and -iniwarp lets you take the\n  results of a previous 3dQwarp run and refine them further:\n  Note that the source dataset in the second run is the SAME as\n  in the first run.  If you don't see why this is necessary,\n  then you probably need to seek help from an AFNI guru.\n\n",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [
                            "duplo"
                        ],
                        "requires": []
                    },
                    "gridlist": {
                        "desc": "This option provides an alternate way to specify the patch\ngrid sizes used in the warp optimization process. 'gl' is\na 1D file with a list of patches to use -- in most cases,\nyou will want to use it in the following form:\n``-gridlist '1D: 0 151 101 75 51'``\n\n* Here, a 0 patch size means the global domain. Patch sizes\n  otherwise should be odd integers >= 5.\n* If you use the '0' patch size again after the first position,\n  you will actually get an iteration at the size of the\n  default patch level 1, where the patch sizes are 75% of\n  the volume dimension.  There is no way to force the program\n  to literally repeat the sui generis step of lev=0.\n\n",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [
                            "duplo",
                            "plusminus"
                        ],
                        "requires": []
                    },
                    "allsave": {
                        "desc": "\nThis option lets you save the output warps from each level\"\nof the refinement process.  Mostly used for experimenting.\"\nWill only save all the outputs if the program terminates\"\nnormally -- if it crashes, or freezes, then all these\"\nwarps are lost.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "nopadWARP",
                            "duplo",
                            "plusminus"
                        ],
                        "requires": []
                    },
                    "duplo": {
                        "desc": "Start off with 1/2 scale versions of the volumes,\"\nfor getting a speedy coarse first alignment.\"\n\n* Then scales back up to register the full volumes.\"\n  The goal is greater speed, and it seems to help this\"\n  positively piggish program to be more expeditious.\"\n* However, accuracy is somewhat lower with '-duplo',\"\n  for reasons that currently elude Zhark; for this reason,\"\n  the Emperor does not usually use '-duplo'.\n\n",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "gridlist",
                            "maxlev",
                            "inilev",
                            "iniwarp",
                            "plusminus",
                            "allsave"
                        ],
                        "requires": []
                    },
                    "workhard": {
                        "desc": "Iterate more times, which can help when the volumes are\nhard to align at all, or when you hope to get a more precise\nalignment.\n\n* Slows the program down (possibly a lot), of course.\n* When you combine '-workhard'  with '-duplo', only the\n  full size volumes get the extra iterations.\n* For finer control over which refinement levels work hard,\n  you can use this option in the form (for example) ``-workhard:4:7``\n  which implies the extra iterations will be done at levels\n  4, 5, 6, and 7, but not otherwise.\n* You can also use '-superhard' to iterate even more, but\n  this extra option will REALLY slow things down.\n\n  * Under most circumstances, you should not need to use either\n    ``-workhard`` or ``-superhard``.\n  * The fastest way to register to a template image is via the\n    ``-duplo`` option, and without the ``-workhard`` or ``-superhard`` options.\n  * If you use this option in the form '-Workhard' (first letter\n    in upper case), then the second iteration at each level is\n    done with quintic polynomial warps.\n\n",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "boxopt",
                            "ballopt"
                        ],
                        "requires": []
                    },
                    "Qfinal": {
                        "desc": "At the finest patch size (the final level), use Hermite\nquintic polynomials for the warp instead of cubic polynomials.\n\n* In a 3D 'patch', there are 2x2x2x3=24 cubic polynomial basis\n  function parameters over which to optimize (2 polynomials\n  dependent on each of the x,y,z directions, and 3 different\n  directions of displacement).\n* There are 3x3x3x3=81 quintic polynomial parameters per patch.\n* With -Qfinal, the final level will have more detail in\n  the allowed warps, at the cost of yet more CPU time.\n* However, no patch below 7x7x7 in size will be done with quintic\n  polynomials.\n* This option is also not usually needed, and is experimental.\n\n",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "Qonly": {
                        "desc": "Use Hermite quintic polynomials at all levels.\n\n* Very slow (about 4 times longer).  Also experimental.\n* Will produce a (discrete representation of a) C2 warp.\n\n",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "plusminus": {
                        "desc": "Normally, the warp displacements dis(x) are defined to match\nbase(x) to source(x+dis(x)).  With this option, the match\nis between base(x-dis(x)) and source(x+dis(x)) -- the two\nimages 'meet in the middle'.\n\n* One goal is to mimic the warping done to MRI EPI data by\n  field inhomogeneities, when registering between a 'blip up'\n  and a 'blip down' down volume, which will have opposite\n  distortions.\n* Define Wp(x) = x+dis(x) and Wm(x) = x-dis(x).  Then since\n  base(Wm(x)) matches source(Wp(x)), by substituting INV(Wm(x))\n  wherever we see x, we have base(x) matches source(Wp(INV(Wm(x))));\n  that is, the warp V(x) that one would get from the 'usual' way\n  of running 3dQwarp is V(x) = Wp(INV(Wm(x))).\n* Conversely, we can calculate Wp(x) in terms of V(x) as follows:\n  If V(x) = x + dv(x), define Vh(x) = x + dv(x)/2;\n  then Wp(x) = V(INV(Vh(x)))\n* With the above formulas, it is possible to compute Wp(x) from\n  V(x) and vice-versa, using program 3dNwarpCalc.  The requisite\n  commands are left as an exercise for the aspiring AFNI Jedi Master.\n* You can use the semi-secret '-pmBASE' option to get the V(x)\n  warp and the source dataset warped to base space, in addition to\n  the Wp(x) '_PLUS' and Wm(x) '_MINUS' warps.\n\n  * Alas: -plusminus does not work with -duplo or -allineate :-(\n  * However, you can use -iniwarp with -plusminus :-)\n  * The outputs have _PLUS (from the source dataset) and _MINUS\n    (from the base dataset) in their filenames, in addition to\n    the prefix.  The -iwarp option, if present, will be ignored.\n\n",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "duplo",
                            "allsave",
                            "iwarp"
                        ],
                        "requires": []
                    },
                    "nopad": {
                        "desc": "Do NOT use zero-padding on the 3D base and source images.\n[Default == zero-pad, if needed]\n\n* The underlying model for deformations goes to zero at the\n  edge of the volume being warped.  However, if there is\n  significant data near an edge of the volume, then it won't\n  get displaced much, and so the results might not be good.\n* Zero padding is designed as a way to work around this potential\n  problem.  You should NOT need the '-nopad' option for any\n  reason that Zhark can think of, but it is here to be symmetrical\n  with 3dAllineate.\n* Note that the output (warped from source) dataset will be on the\n  base dataset grid whether or not zero-padding is allowed.  However,\n  unless you use the following option, allowing zero-padding (i.e.,\n  the default operation) will make the output WARP dataset(s) be\n  on a larger grid (also see '-expad' below).\n\n",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "nopadWARP": {
                        "desc": "If for some reason you require the warp volume tomatch the base volume, then use this option to have the outputWARP dataset(s) truncated.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "allsave",
                            "expad"
                        ],
                        "requires": []
                    },
                    "expad": {
                        "desc": "This option instructs the program to pad the warp by an extra'EE' voxels (and then 3dQwarp starts optimizing it).This option is seldom needed, but can be useful if youmight later catenate the nonlinear warp -- via 3dNwarpCat --with an affine transformation that contains a large shift.Under that circumstance, the nonlinear warp might be shiftedpartially outside its original grid, so expanding that gridcan avoid this problem.Note that this option perforce turns off '-nopadWARP'.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [
                            "nopadWARP"
                        ],
                        "requires": []
                    },
                    "ballopt": {
                        "desc": "Normally, the incremental warp parameters are optimized insidea rectangular 'box' (24 dimensional for cubic patches, 81 forquintic patches), whose limits define the amount of distortionallowed at each step.  Using '-ballopt' switches these limitsto be applied to a 'ball' (interior of a hypersphere), whichcan allow for larger incremental displacements.  Use thisoption if you think things need to be able to move farther.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "workhard",
                            "boxopt"
                        ],
                        "requires": []
                    },
                    "baxopt": {
                        "desc": "Use the 'box' optimization limits instead of the 'ball'[this is the default at present].Note that if '-workhard' is used, then ball and box optimizationare alternated in the different iterations at each level, sothese two options have no effect in that case.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "workhard",
                            "ballopt"
                        ],
                        "requires": []
                    },
                    "verb": {
                        "desc": "more detailed description of the process",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "quiet"
                        ],
                        "requires": []
                    },
                    "quiet": {
                        "desc": "Cut out most of the fun fun fun progress messages :-(",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "verb"
                        ],
                        "requires": []
                    },
                    "overwrite": {
                        "desc": "Overwrite outputs",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "lpc": {
                        "desc": "Local Pearson minimization (i.e., EPI-T1 registration)This option has not be extensively testedIf you use '-lpc', then '-maxlev 0' is automatically set.If you want to go to more refined levels, you can set '-maxlev'This should be set up to have lpc as the second to last argumentand maxlev as the second to last argument, as needed by AFNIUsing maxlev > 1 is not recommended for EPI-T1 alignment.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "nmi",
                            "mi",
                            "hel",
                            "lpa",
                            "pear"
                        ],
                        "requires": []
                    },
                    "lpa": {
                        "desc": "Local Pearson maximization. This option has not be extensively tested",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "nmi",
                            "mi",
                            "lpc",
                            "hel",
                            "pear"
                        ],
                        "requires": []
                    },
                    "hel": {
                        "desc": "Hellinger distance: a matching function for the adventurousThis option has NOT be extensively tested for usefulnessand should be considered experimental at this infundibulum.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "nmi",
                            "mi",
                            "lpc",
                            "lpa",
                            "pear"
                        ],
                        "requires": []
                    },
                    "mi": {
                        "desc": "Mutual Information: a matching function for the adventurousThis option has NOT be extensively tested for usefulnessand should be considered experimental at this infundibulum.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "mi",
                            "hel",
                            "lpc",
                            "lpa",
                            "pear"
                        ],
                        "requires": []
                    },
                    "nmi": {
                        "desc": "Normalized Mutual Information: a matching function for the adventurousThis option has NOT been extensively tested for usefulnessand should be considered experimental at this infundibulum.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "nmi",
                            "hel",
                            "lpc",
                            "lpa",
                            "pear"
                        ],
                        "requires": []
                    },
                    "num_threads": {
                        "desc": "set number of threads",
                        "mandatory": false,
                        "field": "",
                        "default_value": 1,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "outputtype": {
                        "desc": "AFNI output filetype",
                        "mandatory": false,
                        "field": "",
                        "default_value": "AFNI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "AFNI",
                                "NIFTI_GZ"
                            ]
                        ]
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "warped_source": {
                        "desc": "Warped source file. If plusminus is used, this is the undistortedsource file.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "warped_base": {
                        "desc": "Undistorted base file.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "source_warp": {
                        "desc": "Displacement in mm for the source image.If plusminus is used this is the field suceptibility correctionwarp (in 'mm') for source image.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "base_warp": {
                        "desc": "Displacement in mm for the base image.If plus minus is used, this is the field suceptibility correctionwarp (in 'mm') for base image. This is only output if plusminusor iwarp options are passed",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "weights": {
                        "desc": "Auto-computed weight volume.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "QwarpPlusMinus": {
            "desc": "A version of 3dQwarp for performing field susceptibility correction",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "source_file": {
                        "desc": "Source image (opposite phase encoding direction than base image)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_file": {
                        "desc": "Output file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "plusminus": {
                        "desc": "Normally, the warp displacements dis(x) are defined to matchbase(x) to source(x+dis(x)).  With this option, the matchis between base(x-dis(x)) and source(x+dis(x)) -- the twoimages 'meet in the middle'. For more info, view Qwarp` interface",
                        "mandatory": false,
                        "field": "",
                        "default_value": true,
                        "type": "Boolean",
                        "excludes": [
                            "duplo",
                            "allsave",
                            "iwarp"
                        ],
                        "requires": []
                    },
                    "in_file": {
                        "desc": "Source image (opposite phase encoding direction than base image).",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "base_file": {
                        "desc": "Base image (opposite phase encoding direction than source image).",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "resample": {
                        "desc": "This option simply resamples the source dataset to match the\nbase dataset grid.  You can use this if the two datasets\noverlap well (as seen in the AFNI GUI), but are not on the\nsame 3D grid.\n\n* If they don't overlap well, allineate them first\n* The reampling here is done with the\n  'wsinc5' method, which has very little blurring artifact.\n* If the base and source datasets ARE on the same 3D grid,\n  then the -resample option will be ignored.\n* You CAN use -resample with these 3dQwarp options:\n  -plusminus  -inilev  -iniwarp  -duplo\n\n",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "allineate": {
                        "desc": "This option will make 3dQwarp run 3dAllineate first, to align the source dataset to the base with an affine transformation. It will then use that alignment as a starting point for the nonlinear warping.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "allineate_opts": {
                        "desc": "add extra options to the 3dAllineate command to be run by 3dQwarp.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": [
                            "allineate"
                        ]
                    },
                    "nowarp": {
                        "desc": "Do not save the _WARP file.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "iwarp": {
                        "desc": "Do compute and save the _WARPINV file.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "plusminus"
                        ],
                        "requires": []
                    },
                    "pear": {
                        "desc": "Use strict Pearson correlation for matching.Not usually recommended, since the 'clipped Pearson' methodused by default will reduce the impact of outlier values.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "noneg": {
                        "desc": "Replace negative values in either input volume with 0.\n\n* If there ARE negative input values, and you do NOT use -noneg,\n  then strict Pearson correlation will be used, since the 'clipped'\n  method only is implemented for non-negative volumes.\n* '-noneg' is not the default, since there might be situations where\n  you want to align datasets with positive and negative values mixed.\n* But, in many cases, the negative values in a dataset are just the\n  result of interpolation artifacts (or other peculiarities), and so\n  they should be ignored.  That is what '-noneg' is for.\n\n",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "nopenalty": {
                        "desc": "Replace negative values in either input volume with 0.\n\n* If there ARE negative input values, and you do NOT use -noneg,\n  then strict Pearson correlation will be used, since the 'clipped'\n  method only is implemented for non-negative volumes.\n* '-noneg' is not the default, since there might be situations where\n  you want to align datasets with positive and negative values mixed.\n* But, in many cases, the negative values in a dataset are just the\n  result of interpolation artifacts (or other peculiarities), and so\n  they should be ignored. That is what '-noneg' is for.\n\n",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "penfac": {
                        "desc": "Use this value to weight the penalty.\nThe default value is 1. Larger values mean the\npenalty counts more, reducing grid distortions,\ninsha'Allah; '-nopenalty' is the same as '-penfac 0'.\nIn 23 Sep 2013 Zhark increased the default value of\nthe penalty by a factor of 5, and also made it get\nprogressively larger with each level of refinement.\nThus, warping results will vary from earlier instances\nof 3dQwarp.\n\n* The progressive increase in the penalty at higher levels\n  means that the 'cost function' can actually look like the\n  alignment is getting worse when the levels change.\n* IF you wish to turn off this progression, for whatever\n  reason (e.g., to keep compatibility with older results),\n  use the option '-penold'.To be completely compatible with\n  the older 3dQwarp, you'll also have to use '-penfac 0.2'.\n\n",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "noweight": {
                        "desc": "If you want a binary weight (the old default), use this option.That is, each voxel in the base volume automask will beweighted the same in the computation of the cost functional.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "weight": {
                        "desc": "Instead of computing the weight from the base dataset,directly input the weight volume from dataset 'www'.Useful if you know what over parts of the base image youwant to emphasize or de-emphasize the matching functional.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "wball": {
                        "desc": "\"``-wball x y z r f``\nEnhance automatic weight from '-useweight' by a factor\nof 1+f\\*Gaussian(FWHM=r) centered in the base image at\nDICOM coordinates (x,y,z) and with radius 'r'. The\ngoal of this option is to try and make the alignment\nbetter in a specific part of the brain.\nExample:  -wball 0 14 6 30 40\nto emphasize the thalamic area (in MNI/Talairach space).\n\n* The 'r' parameter must be positive!\n* The 'f' parameter must be between 1 and 100 (inclusive).\n* '-wball' does nothing if you input your own weight\n  with the '-weight' option.\n* '-wball' does change the binary weight created by\n  the '-noweight' option.\n* You can only use '-wball' once in a run of 3dQwarp.\n\n**The effect of '-wball' is not dramatic.** The example\nabove makes the average brain image across a collection\nof subjects a little sharper in the thalamic area, which\nmight have some small value.  If you care enough about\nalignment to use '-wball', then you should examine the\nresults from 3dQwarp for each subject, to see if the\nalignments are good enough for your purposes.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [
                            "wmask"
                        ],
                        "requires": []
                    },
                    "bandpass": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "wmask": {
                        "desc": "Similar to '-wball', but here, you provide a dataset 'ws'\nthat indicates where to increase the weight.\n\n* The 'ws' dataset must be on the same 3D grid as the base dataset.\n* 'ws' is treated as a mask -- it only matters where it\n  is nonzero -- otherwise, the values inside are not used.\n* After 'ws' comes the factor 'f' by which to increase the\n  automatically computed weight.  Where 'ws' is nonzero,\n  the weighting will be multiplied by (1+f).\n* As with '-wball', the factor 'f' should be between 1 and 100.\n\n",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [
                            "wball"
                        ],
                        "requires": []
                    },
                    "out_weight_file": {
                        "desc": "Write the weight volume to disk as a dataset",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "blur": {
                        "desc": "Gaussian blur the input images by 'bb' (FWHM) voxels before\ndoing the alignment (the output dataset will not be blurred).\nThe default is 2.345 (for no good reason).\n\n* Optionally, you can provide 2 values for 'bb', and then\n  the first one is applied to the base volume, the second\n  to the source volume.\n  e.g., '-blur 0 3' to skip blurring the base image\n  (if the base is a blurry template, for example).\n* A negative blur radius means to use 3D median filtering,\n  rather than Gaussian blurring.  This type of filtering will\n  better preserve edges, which can be important in alignment.\n* If the base is a template volume that is already blurry,\n  you probably don't want to blur it again, but blurring\n  the source volume a little is probably a good idea, to\n  help the program avoid trying to match tiny features.\n* Note that -duplo will blur the volumes some extra\n  amount for the initial small-scale warping, to make\n  that phase of the program converge more rapidly.\n\n",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "pblur": {
                        "desc": "Use progressive blurring; that is, for larger patch sizes,\nthe amount of blurring is larger.  The general idea is to\navoid trying to match finer details when the patch size\nand incremental warps are coarse.  When '-blur' is used\nas well, it sets a minimum amount of blurring that will\nbe used. [06 Aug 2014 -- '-pblur' may become the default someday].\n\n* You can optionally give the fraction of the patch size that\n  is used for the progressive blur by providing a value between\n  0 and 0.25 after '-pblur'.  If you provide TWO values, the\n  the first fraction is used for progressively blurring the\n  base image and the second for the source image.  The default\n  parameters when just '-pblur' is given is the same as giving\n  the options as '-pblur 0.09 0.09'.\n* '-pblur' is useful when trying to match 2 volumes with high\n  amounts of detail; e.g, warping one subject's brain image to\n  match another's, or trying to warp to match a detailed template.\n* Note that using negative values with '-blur' means that the\n  progressive blurring will be done with median filters, rather\n  than Gaussian linear blurring.\n\nNote: The combination of the -allineate and -pblur options will make\nthe results of using 3dQwarp to align to a template somewhat\nless sensitive to initial head position and scaling.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "emask": {
                        "desc": "Here, 'ee' is a dataset to specify a mask of voxelsto EXCLUDE from the analysis -- all voxels in 'ee'that are NONZERO will not be used in the alignment.The base image always automasked -- the emask isextra, to indicate voxels you definitely DON'T wantincluded in the matching process, even if they areinside the brain.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "noXdis": {
                        "desc": "Warp will not displace in x direction",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "noYdis": {
                        "desc": "Warp will not displace in y direction",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "noZdis": {
                        "desc": "Warp will not displace in z direction",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "iniwarp": {
                        "desc": "A dataset with an initial nonlinear warp to use.\n\n* If this option is not used, the initial warp is the identity.\n* You can specify a catenation of warps (in quotes) here, as in\n  program 3dNwarpApply.\n* As a special case, if you just input an affine matrix in a .1D\n  file, that will work also -- it is treated as giving the initial\n  warp via the string \"IDENT(base_dataset) matrix_file.aff12.1D\".\n* You CANNOT use this option with -duplo !!\n* -iniwarp is usually used with -inilev to re-start 3dQwarp from\n  a previous stopping point.\n\n",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [
                            "duplo"
                        ],
                        "requires": []
                    },
                    "inilev": {
                        "desc": "The initial refinement 'level' at which to start.\n\n* Usually used with -iniwarp; CANNOT be used with -duplo.\n* The combination of -inilev and -iniwarp lets you take the\n  results of a previous 3dQwarp run and refine them further:\n  Note that the source dataset in the second run is the SAME as\n  in the first run.  If you don't see why this is necessary,\n  then you probably need to seek help from an AFNI guru.\n\n",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [
                            "duplo"
                        ],
                        "requires": []
                    },
                    "minpatch": {
                        "desc": "The value of mm should be an odd integer.\n\n* The default value of mm is 25.\n* For more accurate results than mm=25, try 19 or 13.\n* The smallest allowed patch size is 5.\n* You may want stop at a larger patch size (say 7 or 9) and use\n  the -Qfinal option to run that final level with quintic warps,\n  which might run faster and provide the same degree of warp detail.\n* Trying to make two different brain volumes match in fine detail\n  is usually a waste of time, especially in humans.  There is too\n  much variability in anatomy to match gyrus to gyrus accurately.\n  For this reason, the default minimum patch size is 25 voxels.\n  Using a smaller '-minpatch' might try to force the warp to\n  match features that do not match, and the result can be useless\n  image distortions -- another reason to LOOK AT THE RESULTS.\n\n",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "maxlev": {
                        "desc": "The initial refinement 'level' at which to start.\n\n* Usually used with -iniwarp; CANNOT be used with -duplo.\n* The combination of -inilev and -iniwarp lets you take the\n  results of a previous 3dQwarp run and refine them further:\n  Note that the source dataset in the second run is the SAME as\n  in the first run.  If you don't see why this is necessary,\n  then you probably need to seek help from an AFNI guru.\n\n",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [
                            "duplo"
                        ],
                        "requires": []
                    },
                    "gridlist": {
                        "desc": "This option provides an alternate way to specify the patch\ngrid sizes used in the warp optimization process. 'gl' is\na 1D file with a list of patches to use -- in most cases,\nyou will want to use it in the following form:\n``-gridlist '1D: 0 151 101 75 51'``\n\n* Here, a 0 patch size means the global domain. Patch sizes\n  otherwise should be odd integers >= 5.\n* If you use the '0' patch size again after the first position,\n  you will actually get an iteration at the size of the\n  default patch level 1, where the patch sizes are 75% of\n  the volume dimension.  There is no way to force the program\n  to literally repeat the sui generis step of lev=0.\n\n",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [
                            "duplo",
                            "plusminus"
                        ],
                        "requires": []
                    },
                    "allsave": {
                        "desc": "\nThis option lets you save the output warps from each level\"\nof the refinement process.  Mostly used for experimenting.\"\nWill only save all the outputs if the program terminates\"\nnormally -- if it crashes, or freezes, then all these\"\nwarps are lost.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "nopadWARP",
                            "duplo",
                            "plusminus"
                        ],
                        "requires": []
                    },
                    "duplo": {
                        "desc": "Start off with 1/2 scale versions of the volumes,\"\nfor getting a speedy coarse first alignment.\"\n\n* Then scales back up to register the full volumes.\"\n  The goal is greater speed, and it seems to help this\"\n  positively piggish program to be more expeditious.\"\n* However, accuracy is somewhat lower with '-duplo',\"\n  for reasons that currently elude Zhark; for this reason,\"\n  the Emperor does not usually use '-duplo'.\n\n",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "gridlist",
                            "maxlev",
                            "inilev",
                            "iniwarp",
                            "plusminus",
                            "allsave"
                        ],
                        "requires": []
                    },
                    "workhard": {
                        "desc": "Iterate more times, which can help when the volumes are\nhard to align at all, or when you hope to get a more precise\nalignment.\n\n* Slows the program down (possibly a lot), of course.\n* When you combine '-workhard'  with '-duplo', only the\n  full size volumes get the extra iterations.\n* For finer control over which refinement levels work hard,\n  you can use this option in the form (for example) ``-workhard:4:7``\n  which implies the extra iterations will be done at levels\n  4, 5, 6, and 7, but not otherwise.\n* You can also use '-superhard' to iterate even more, but\n  this extra option will REALLY slow things down.\n\n  * Under most circumstances, you should not need to use either\n    ``-workhard`` or ``-superhard``.\n  * The fastest way to register to a template image is via the\n    ``-duplo`` option, and without the ``-workhard`` or ``-superhard`` options.\n  * If you use this option in the form '-Workhard' (first letter\n    in upper case), then the second iteration at each level is\n    done with quintic polynomial warps.\n\n",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "boxopt",
                            "ballopt"
                        ],
                        "requires": []
                    },
                    "Qfinal": {
                        "desc": "At the finest patch size (the final level), use Hermite\nquintic polynomials for the warp instead of cubic polynomials.\n\n* In a 3D 'patch', there are 2x2x2x3=24 cubic polynomial basis\n  function parameters over which to optimize (2 polynomials\n  dependent on each of the x,y,z directions, and 3 different\n  directions of displacement).\n* There are 3x3x3x3=81 quintic polynomial parameters per patch.\n* With -Qfinal, the final level will have more detail in\n  the allowed warps, at the cost of yet more CPU time.\n* However, no patch below 7x7x7 in size will be done with quintic\n  polynomials.\n* This option is also not usually needed, and is experimental.\n\n",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "Qonly": {
                        "desc": "Use Hermite quintic polynomials at all levels.\n\n* Very slow (about 4 times longer).  Also experimental.\n* Will produce a (discrete representation of a) C2 warp.\n\n",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "nopad": {
                        "desc": "Do NOT use zero-padding on the 3D base and source images.\n[Default == zero-pad, if needed]\n\n* The underlying model for deformations goes to zero at the\n  edge of the volume being warped.  However, if there is\n  significant data near an edge of the volume, then it won't\n  get displaced much, and so the results might not be good.\n* Zero padding is designed as a way to work around this potential\n  problem.  You should NOT need the '-nopad' option for any\n  reason that Zhark can think of, but it is here to be symmetrical\n  with 3dAllineate.\n* Note that the output (warped from source) dataset will be on the\n  base dataset grid whether or not zero-padding is allowed.  However,\n  unless you use the following option, allowing zero-padding (i.e.,\n  the default operation) will make the output WARP dataset(s) be\n  on a larger grid (also see '-expad' below).\n\n",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "nopadWARP": {
                        "desc": "If for some reason you require the warp volume tomatch the base volume, then use this option to have the outputWARP dataset(s) truncated.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "allsave",
                            "expad"
                        ],
                        "requires": []
                    },
                    "expad": {
                        "desc": "This option instructs the program to pad the warp by an extra'EE' voxels (and then 3dQwarp starts optimizing it).This option is seldom needed, but can be useful if youmight later catenate the nonlinear warp -- via 3dNwarpCat --with an affine transformation that contains a large shift.Under that circumstance, the nonlinear warp might be shiftedpartially outside its original grid, so expanding that gridcan avoid this problem.Note that this option perforce turns off '-nopadWARP'.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [
                            "nopadWARP"
                        ],
                        "requires": []
                    },
                    "ballopt": {
                        "desc": "Normally, the incremental warp parameters are optimized insidea rectangular 'box' (24 dimensional for cubic patches, 81 forquintic patches), whose limits define the amount of distortionallowed at each step.  Using '-ballopt' switches these limitsto be applied to a 'ball' (interior of a hypersphere), whichcan allow for larger incremental displacements.  Use thisoption if you think things need to be able to move farther.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "workhard",
                            "boxopt"
                        ],
                        "requires": []
                    },
                    "baxopt": {
                        "desc": "Use the 'box' optimization limits instead of the 'ball'[this is the default at present].Note that if '-workhard' is used, then ball and box optimizationare alternated in the different iterations at each level, sothese two options have no effect in that case.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "workhard",
                            "ballopt"
                        ],
                        "requires": []
                    },
                    "verb": {
                        "desc": "more detailed description of the process",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "quiet"
                        ],
                        "requires": []
                    },
                    "quiet": {
                        "desc": "Cut out most of the fun fun fun progress messages :-(",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "verb"
                        ],
                        "requires": []
                    },
                    "overwrite": {
                        "desc": "Overwrite outputs",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "lpc": {
                        "desc": "Local Pearson minimization (i.e., EPI-T1 registration)This option has not be extensively testedIf you use '-lpc', then '-maxlev 0' is automatically set.If you want to go to more refined levels, you can set '-maxlev'This should be set up to have lpc as the second to last argumentand maxlev as the second to last argument, as needed by AFNIUsing maxlev > 1 is not recommended for EPI-T1 alignment.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "nmi",
                            "mi",
                            "hel",
                            "lpa",
                            "pear"
                        ],
                        "requires": []
                    },
                    "lpa": {
                        "desc": "Local Pearson maximization. This option has not be extensively tested",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "nmi",
                            "mi",
                            "lpc",
                            "hel",
                            "pear"
                        ],
                        "requires": []
                    },
                    "hel": {
                        "desc": "Hellinger distance: a matching function for the adventurousThis option has NOT be extensively tested for usefulnessand should be considered experimental at this infundibulum.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "nmi",
                            "mi",
                            "lpc",
                            "lpa",
                            "pear"
                        ],
                        "requires": []
                    },
                    "mi": {
                        "desc": "Mutual Information: a matching function for the adventurousThis option has NOT be extensively tested for usefulnessand should be considered experimental at this infundibulum.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "mi",
                            "hel",
                            "lpc",
                            "lpa",
                            "pear"
                        ],
                        "requires": []
                    },
                    "nmi": {
                        "desc": "Normalized Mutual Information: a matching function for the adventurousThis option has NOT been extensively tested for usefulnessand should be considered experimental at this infundibulum.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "nmi",
                            "hel",
                            "lpc",
                            "lpa",
                            "pear"
                        ],
                        "requires": []
                    },
                    "num_threads": {
                        "desc": "set number of threads",
                        "mandatory": false,
                        "field": "",
                        "default_value": 1,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "outputtype": {
                        "desc": "AFNI output filetype",
                        "mandatory": false,
                        "field": "",
                        "default_value": "AFNI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "AFNI",
                                "NIFTI_GZ"
                            ]
                        ]
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "ROIStats": {
            "desc": "Display statistics over masked regions",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "in_file": {
                        "desc": "input dataset",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "mask": {
                        "desc": "input mask",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "mask_file": {
                        "desc": "input mask",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "mask_f2short": {
                        "desc": "Tells the program to convert a float mask to short integers, by simple rounding.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "num_roi": {
                        "desc": "Forces the assumption that the mask dataset's ROIs are denoted by 1 to n inclusive.  Normally, the program figures out the ROIs on its own.  This option is useful if a) you are certain that the mask dataset has no values outside the range [0 n], b) there may be some ROIs missing between [1 n] in the mask data-set and c) you want those columns in the output any-way so the output lines up with the output from other invocations of 3dROIstats.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "zerofill": {
                        "desc": "For ROI labels not found, use the provided string instead of a '0' in the output file. Only active if `num_roi` is enabled.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": [
                            "num_roi"
                        ]
                    },
                    "roisel": {
                        "desc": "Only considers ROIs denoted by values found in the specified file. Note that the order of the ROIs as specified in the file is not preserved. So an SEL.1D of '2 8 20' produces the same output as '8 20 2'",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "debug": {
                        "desc": "print debug information",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "quiet": {
                        "desc": "execute quietly",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "nomeanout": {
                        "desc": "Do not include the (zero-inclusive) mean among computed stats",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "nobriklab": {
                        "desc": "Do not print the sub-brick label next to its index",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "format1D": {
                        "desc": "Output results in a 1D format that includes commented labels",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "format1DR"
                        ],
                        "requires": []
                    },
                    "format1DR": {
                        "desc": "Output results in a 1D format that includes uncommented labels. May not work optimally with typical 1D functions, but is useful for R functions.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "format1D"
                        ],
                        "requires": []
                    },
                    "stat": {
                        "desc": "Statistics to compute. Options include:\n\n * mean       =   Compute the mean using only non_zero voxels.\n                  Implies the opposite for the mean computed\n                  by default.\n * median     =   Compute the median of nonzero voxels\n * mode       =   Compute the mode of nonzero voxels.\n                  (integral valued sets only)\n * minmax     =   Compute the min/max of nonzero voxels\n * sum        =   Compute the sum using only nonzero voxels.\n * voxels     =   Compute the number of nonzero voxels\n * sigma      =   Compute the standard deviation of nonzero\n                  voxels\n\nStatistics that include zero-valued voxels:\n\n * zerominmax =   Compute the min/max of all voxels.\n * zerosigma  =   Compute the standard deviation of all\n                  voxels.\n * zeromedian =   Compute the median of all voxels.\n * zeromode   =   Compute the mode of all voxels.\n * summary    =   Only output a summary line with the grand\n                  mean across all briks in the input dataset.\n                  This option cannot be used with nomeanout.\n\nMore that one option can be specified.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Files",
                        "excludes": [],
                        "requires": []
                    },
                    "out_file": {
                        "desc": "output file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "out_file": {
                        "desc": "output tab-separated values file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "Retroicor": {
            "desc": "Performs Retrospective Image Correction for physiological",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "in_file": {
                        "desc": "input file to 3dretroicor",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_file": {
                        "desc": "output image file name",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "card": {
                        "desc": "1D cardiac data file for cardiac correction",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "resp": {
                        "desc": "1D respiratory waveform data for correction",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "threshold": {
                        "desc": "Threshold for detection of R-wave peaks in input (Make sure it is above the background noise level, Try 3/4 or 4/5 times range plus minimum)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "order": {
                        "desc": "The order of the correction (2 is typical)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "cardphase": {
                        "desc": "Filename for 1D cardiac phase output",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "respphase": {
                        "desc": "Filename for 1D resp phase output",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "num_threads": {
                        "desc": "set number of threads",
                        "mandatory": false,
                        "field": "",
                        "default_value": 1,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "outputtype": {
                        "desc": "AFNI output filetype",
                        "mandatory": false,
                        "field": "",
                        "default_value": "AFNI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "AFNI",
                                "NIFTI_GZ"
                            ]
                        ]
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "out_file": {
                        "desc": "output file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "Seg": {
            "desc": "3dSeg segments brain volumes into tissue classes. The program allows",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "in_file": {
                        "desc": "ANAT is the volume to segment",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "mask": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported"
                    },
                    "blur_meth": {
                        "desc": "set the blurring method for bias field estimation",
                        "mandatory": false,
                        "field": "",
                        "default_value": "BFT",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "BFT",
                                "BIM"
                            ]
                        ]
                    },
                    "bias_fwhm": {
                        "desc": "The amount of blurring used when estimating the field bias with the Wells method",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "classes": {
                        "desc": "CLASS_STRING is a semicolon delimited string of class labels",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "bmrf": {
                        "desc": "Weighting factor controlling spatial homogeneity of the classifications",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "bias_classes": {
                        "desc": "A semicolon delimited string of classes that contribute to the estimation of the bias field",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "prefix": {
                        "desc": "the prefix for the output folder containing all output volumes",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "mixfrac": {
                        "desc": "MIXFRAC sets up the volume-wide (within mask) tissue fractions while initializing the segmentation (see IGNORE for exception)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "mixfloor": {
                        "desc": "Set the minimum value for any class's mixing fraction",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "main_N": {
                        "desc": "Number of iterations to perform.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "out_file": {
                        "desc": "output file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "SkullStrip": {
            "desc": "A program to extract the brain from surrounding tissue from MRI",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "in_file": {
                        "desc": "input file to 3dSkullStrip",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_file": {
                        "desc": "output image file name",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "num_threads": {
                        "desc": "set number of threads",
                        "mandatory": false,
                        "field": "",
                        "default_value": 1,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "outputtype": {
                        "desc": "AFNI output filetype",
                        "mandatory": false,
                        "field": "",
                        "default_value": "AFNI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "AFNI",
                                "NIFTI_GZ"
                            ]
                        ]
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "out_file": {
                        "desc": "output file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "TCorr1D": {
            "desc": "Computes the correlation coefficient between each voxel time series",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "xset": {
                        "desc": "3d+time dataset input",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "y_1d": {
                        "desc": "1D time series file input",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_file": {
                        "desc": "output filename prefix",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "pearson": {
                        "desc": "Correlation is the normal Pearson correlation coefficient",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "spearman",
                            "quadrant",
                            "ktaub"
                        ],
                        "requires": []
                    },
                    "spearman": {
                        "desc": "Correlation is the Spearman (rank) correlation coefficient",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "pearson",
                            "quadrant",
                            "ktaub"
                        ],
                        "requires": []
                    },
                    "quadrant": {
                        "desc": "Correlation is the quadrant correlation coefficient",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "pearson",
                            "spearman",
                            "ktaub"
                        ],
                        "requires": []
                    },
                    "ktaub": {
                        "desc": "Correlation is the Kendall's tau_b correlation coefficient",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "pearson",
                            "spearman",
                            "quadrant"
                        ],
                        "requires": []
                    },
                    "num_threads": {
                        "desc": "set number of threads",
                        "mandatory": false,
                        "field": "",
                        "default_value": 1,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "outputtype": {
                        "desc": "AFNI output filetype",
                        "mandatory": false,
                        "field": "",
                        "default_value": "AFNI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "AFNI",
                                "NIFTI_GZ"
                            ]
                        ]
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "out_file": {
                        "desc": "output file containing correlations",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "TCorrMap": {
            "desc": "For each voxel time series, computes the correlation between it",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "in_file": {
                        "desc": "",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "seeds": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": "seeds_width",
                        "requires": []
                    },
                    "mask": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "automask": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "polort": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "bandpass": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "regress_out_timeseries": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "blur_fwhm": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "seeds_width": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": "seeds",
                        "requires": []
                    },
                    "mean_file": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "zmean": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "qmean": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "pmean": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "thresholds": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "absolute_threshold": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [
                            "absolute_threshold",
                            "var_absolute_threshold",
                            "var_absolute_threshold_normalize"
                        ],
                        "requires": []
                    },
                    "var_absolute_threshold": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [
                            "absolute_threshold",
                            "var_absolute_threshold",
                            "var_absolute_threshold_normalize"
                        ],
                        "requires": []
                    },
                    "var_absolute_threshold_normalize": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [
                            "absolute_threshold",
                            "var_absolute_threshold",
                            "var_absolute_threshold_normalize"
                        ],
                        "requires": []
                    },
                    "correlation_maps": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "correlation_maps_masked": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "expr": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "average_expr": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [
                            "average_expr",
                            "average_expr_nonzero",
                            "sum_expr"
                        ],
                        "requires": []
                    },
                    "average_expr_nonzero": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [
                            "average_expr",
                            "average_expr_nonzero",
                            "sum_expr"
                        ],
                        "requires": []
                    },
                    "sum_expr": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [
                            "average_expr",
                            "average_expr_nonzero",
                            "sum_expr"
                        ],
                        "requires": []
                    },
                    "histogram_bin_numbers": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "histogram": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "num_threads": {
                        "desc": "set number of threads",
                        "mandatory": false,
                        "field": "",
                        "default_value": 1,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "outputtype": {
                        "desc": "AFNI output filetype",
                        "mandatory": false,
                        "field": "",
                        "default_value": "AFNI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "AFNI",
                                "NIFTI_GZ"
                            ]
                        ]
                    },
                    "out_file": {
                        "desc": "output image file name",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "mean_file": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "zmean": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "qmean": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "pmean": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "absolute_threshold": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "var_absolute_threshold": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "var_absolute_threshold_normalize": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "correlation_maps": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "correlation_maps_masked": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "average_expr": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "average_expr_nonzero": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "sum_expr": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "histogram": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "TCorrelate": {
            "desc": "Computes the correlation coefficient between corresponding voxel",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "xset": {
                        "desc": "input xset",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "yset": {
                        "desc": "input yset",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_file": {
                        "desc": "output image file name",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "pearson": {
                        "desc": "Correlation is the normal Pearson correlation coefficient",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "polort": {
                        "desc": "Remove polynomial trend of order m",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "num_threads": {
                        "desc": "set number of threads",
                        "mandatory": false,
                        "field": "",
                        "default_value": 1,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "outputtype": {
                        "desc": "AFNI output filetype",
                        "mandatory": false,
                        "field": "",
                        "default_value": "AFNI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "AFNI",
                                "NIFTI_GZ"
                            ]
                        ]
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "out_file": {
                        "desc": "output file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "TNorm": {
            "desc": "Shifts voxel time series from input so that separate slices are aligned",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "in_file": {
                        "desc": "input file to 3dTNorm",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_file": {
                        "desc": "output image file name",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "norm2": {
                        "desc": "L2 normalize (sum of squares = 1) [DEFAULT]",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "normR": {
                        "desc": "normalize so sum of squares = number of time points \\* e.g., so RMS = 1.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "norm1": {
                        "desc": "L1 normalize (sum of absolute values = 1)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "normx": {
                        "desc": "Scale so max absolute value = 1 (L_infinity norm)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "polort": {
                        "desc": "Detrend with polynomials of order p before normalizing [DEFAULT = don't do this].\nUse '-polort 0' to remove the mean, for example",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "L1fit": {
                        "desc": "Detrend with L1 regression (L2 is the default)\nThis option is here just for the hell of it",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "num_threads": {
                        "desc": "set number of threads",
                        "mandatory": false,
                        "field": "",
                        "default_value": 1,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "outputtype": {
                        "desc": "AFNI output filetype",
                        "mandatory": false,
                        "field": "",
                        "default_value": "AFNI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "AFNI",
                                "NIFTI_GZ"
                            ]
                        ]
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "out_file": {
                        "desc": "output file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "TProject": {
            "desc": "",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "in_file": {
                        "desc": "input file to 3dTproject",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_file": {
                        "desc": "output image file name",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "censor": {
                        "desc": "Filename of censor .1D time series.\nThis is a file of 1s and 0s, indicating which\ntime points are to be included (1) and which are\nto be excluded (0).",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "censortr": {
                        "desc": "List of strings that specify time indexes\nto be removed from the analysis.  Each string is\nof one of the following forms:\n\n* ``37`` => remove global time index #37\n* ``2:37`` => remove time index #37 in run #2\n* ``37..47`` => remove global time indexes #37-47\n* ``37-47`` => same as above\n* ``2:37..47`` => remove time indexes #37-47 in run #2\n* ``*:0-2`` => remove time indexes #0-2 in all runs\n\n  * Time indexes within each run start at 0.\n  * Run indexes start at 1 (just be to confusing).\n  * N.B.: 2:37,47 means index #37 in run #2 and\n    global time index 47; it does NOT mean\n    index #37 in run #2 AND index #47 in run #2.\n\n",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "cenmode": {
                        "desc": "Specifies how censored time points are treated in\nthe output dataset:\n\n* mode = ZERO -- put zero values in their place;\n  output dataset is same length as input\n* mode = KILL -- remove those time points;\n  output dataset is shorter than input\n* mode = NTRP -- censored values are replaced by interpolated\n  neighboring (in time) non-censored values,\n  BEFORE any projections, and then the\n  analysis proceeds without actual removal\n  of any time points -- this feature is to\n  keep the Spanish Inquisition happy.\n* The default mode is KILL !!!\n\n",
                        "mandatory": false,
                        "field": "",
                        "default_value": "KILL",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "KILL",
                                "ZERO",
                                "NTRP"
                            ]
                        ]
                    },
                    "concat": {
                        "desc": "The catenation file, as in 3dDeconvolve, containing the\nTR indexes of the start points for each contiguous run\nwithin the input dataset (the first entry should be 0).\n\n* Also as in 3dDeconvolve, if the input dataset is\n  automatically catenated from a collection of datasets,\n  then the run start indexes are determined directly,\n  and '-concat' is not needed (and will be ignored).\n* Each run must have at least 9 time points AFTER\n  censoring, or the program will not work!\n* The only use made of this input is in setting up\n  the bandpass/stopband regressors.\n* '-ort' and '-dsort' regressors run through all time\n  points, as read in.  If you want separate projections\n  in each run, then you must either break these ort files\n  into appropriate components, OR you must run 3dTproject\n  for each run separately, using the appropriate pieces\n  from the ort files via the ``{...}`` selector for the\n  1D files and the ``[...]`` selector for the datasets.\n\n",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "noblock": {
                        "desc": "Also as in 3dDeconvolve, if you want the program to treat\nan auto-catenated dataset as one long run, use this option.\nHowever, '-noblock' will not affect catenation if you use\nthe '-concat' option.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "ort": {
                        "desc": "Remove each column in file.\nEach column will have its mean removed.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "polort": {
                        "desc": "Remove polynomials up to and including degree pp.\n\n* Default value is 2.\n* It makes no sense to use a value of pp greater than\n  2, if you are bandpassing out the lower frequencies!\n* For catenated datasets, each run gets a separate set\n  set of pp+1 Legendre polynomial regressors.\n* Use of -polort -1 is not advised (if data mean != 0),\n  even if -ort contains constant terms, as all means are\n  removed.\n\n",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "dsort": {
                        "desc": "Remove the 3D+time time series in dataset fset.\n\n* That is, 'fset' contains a different nuisance time\n  series for each voxel (e.g., from AnatICOR).\n* Multiple -dsort options are allowed.\n\n",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Files",
                        "excludes": [],
                        "requires": []
                    },
                    "bandpass": {
                        "desc": "Remove all frequencies EXCEPT those in the range",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "stopband": {
                        "desc": "Remove all frequencies in the range",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "TR": {
                        "desc": "Use time step dd for the frequency calculations,\nrather than the value stored in the dataset header.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "mask": {
                        "desc": "Only operate on voxels nonzero in the mset dataset.\n\n* Voxels outside the mask will be filled with zeros.\n* If no masking option is given, then all voxels\n  will be processed.\n\n",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "automask": {
                        "desc": "Generate a mask automatically",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "mask"
                        ],
                        "requires": []
                    },
                    "blur": {
                        "desc": "Blur (inside the mask only) with a filter that has\nwidth (FWHM) of fff millimeters.\nSpatial blurring (if done) is after the time\nseries filtering.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "norm": {
                        "desc": "\nNormalize each output time series to have sum of\nsquares = 1. This is the LAST operation.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "num_threads": {
                        "desc": "set number of threads",
                        "mandatory": false,
                        "field": "",
                        "default_value": 1,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "outputtype": {
                        "desc": "AFNI output filetype",
                        "mandatory": false,
                        "field": "",
                        "default_value": "AFNI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "AFNI",
                                "NIFTI_GZ"
                            ]
                        ]
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "out_file": {
                        "desc": "output file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "TShift": {
            "desc": "Shifts voxel time series from input so that separate slices are aligned",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "in_file": {
                        "desc": "input file to 3dTshift",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_file": {
                        "desc": "output image file name",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "tr": {
                        "desc": "manually set the TR. You can attach suffix \"s\" for seconds or \"ms\" for milliseconds.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "tzero": {
                        "desc": "align each slice to given time offset",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [
                            "tslice"
                        ],
                        "requires": []
                    },
                    "tslice": {
                        "desc": "align each slice to time offset of given slice",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [
                            "tzero"
                        ],
                        "requires": []
                    },
                    "ignore": {
                        "desc": "ignore the first set of points specified",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "interp": {
                        "desc": "different interpolation methods (see 3dTshift for details) default = Fourier",
                        "mandatory": false,
                        "field": "",
                        "default_value": "Fourier",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "Fourier",
                                "linear",
                                "cubic",
                                "quintic",
                                "heptic"
                            ]
                        ]
                    },
                    "tpattern": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported"
                    },
                    "slice_timing": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported"
                    },
                    "slice_encoding_direction": {
                        "desc": "Direction in which slice_timing is specified (default: k). If negative,slice_timing is defined in reverse order, that is, the first entry corresponds to the slice with the largest index, and the final entry corresponds to slice index zero. Only in effect when slice_timing is passed as list, not when it is passed as file.",
                        "mandatory": false,
                        "field": "",
                        "default_value": "k",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "k",
                                "k-"
                            ]
                        ]
                    },
                    "rlt": {
                        "desc": "Before shifting, remove the mean and linear trend",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "rltplus": {
                        "desc": "Before shifting, remove the mean and linear trend and later put back the mean",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "num_threads": {
                        "desc": "set number of threads",
                        "mandatory": false,
                        "field": "",
                        "default_value": 1,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "outputtype": {
                        "desc": "AFNI output filetype",
                        "mandatory": false,
                        "field": "",
                        "default_value": "AFNI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "AFNI",
                                "NIFTI_GZ"
                            ]
                        ]
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "timing_file": {
                        "desc": "AFNI formatted timing file, if ``slice_timing`` is a list",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_file": {
                        "desc": "output file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "TSmooth": {
            "desc": "Smooths each voxel time series in a 3D+time dataset and produces",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "in_file": {
                        "desc": "input file to 3dTSmooth",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_file": {
                        "desc": "output file from 3dTSmooth",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "datum": {
                        "desc": "Sets the data type of the output dataset",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "lin": {
                        "desc": "3 point linear filter: :math:`0.15\\,a + 0.70\\,b + 0.15\\,c` [This is the default smoother]",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "med": {
                        "desc": "3 point median filter: median(a,b,c)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "osf": {
                        "desc": "3 point order statistics filter::math:`0.15\\,min(a,b,c) + 0.70\\,median(a,b,c) + 0.15\\,max(a,b,c)`",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "lin3": {
                        "desc": "3 point linear filter: :math:`0.5\\,(1-m)\\,a + m\\,b + 0.5\\,(1-m)\\,c`. Here, 'm' is a number strictly between 0 and 1.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "hamming": {
                        "desc": "Use N point Hamming windows. (N must be odd and bigger than 1.)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "blackman": {
                        "desc": "Use N point Blackman windows. (N must be odd and bigger than 1.)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "custom": {
                        "desc": "odd # of coefficients must be in a single column in ASCII file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "adaptive": {
                        "desc": "use adaptive mean filtering of width N (where N must be odd and bigger than 3).",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "num_threads": {
                        "desc": "set number of threads",
                        "mandatory": false,
                        "field": "",
                        "default_value": 1,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "outputtype": {
                        "desc": "AFNI output filetype",
                        "mandatory": false,
                        "field": "",
                        "default_value": "AFNI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "AFNI",
                                "NIFTI_GZ"
                            ]
                        ]
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "out_file": {
                        "desc": "output file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "Volreg": {
            "desc": "Register input volumes to a base volume using AFNI 3dvolreg command",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "in_file": {
                        "desc": "input file to 3dvolreg",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "in_weight_volume": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported"
                    },
                    "out_file": {
                        "desc": "output image file name",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "basefile": {
                        "desc": "base file for registration",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "zpad": {
                        "desc": "Zeropad around the edges by 'n' voxels during rotations",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "md1d_file": {
                        "desc": "max displacement output file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "oned_file": {
                        "desc": "1D movement parameters output file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "verbose": {
                        "desc": "more detailed description of the process",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "timeshift": {
                        "desc": "time shift to mean slice time offset",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "copyorigin": {
                        "desc": "copy base file origin coords to output",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "oned_matrix_save": {
                        "desc": "Save the matrix transformation",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "interp": {
                        "desc": "spatial interpolation methods [default = heptic]",
                        "mandatory": false,
                        "field": "",
                        "default_value": "Fourier",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "Fourier",
                                "cubic",
                                "heptic",
                                "quintic",
                                "linear"
                            ]
                        ]
                    },
                    "num_threads": {
                        "desc": "set number of threads",
                        "mandatory": false,
                        "field": "",
                        "default_value": 1,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "outputtype": {
                        "desc": "AFNI output filetype",
                        "mandatory": false,
                        "field": "",
                        "default_value": "AFNI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "AFNI",
                                "NIFTI_GZ"
                            ]
                        ]
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "out_file": {
                        "desc": "registered file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "md1d_file": {
                        "desc": "max displacement info file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "oned_file": {
                        "desc": "movement parameters info file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "oned_matrix_save": {
                        "desc": "matrix transformation from base to input",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "Warp": {
            "desc": "Use 3dWarp for spatially transforming a dataset.",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "in_file": {
                        "desc": "input file to 3dWarp",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_file": {
                        "desc": "output image file name",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "tta2mni": {
                        "desc": "transform dataset from Talairach to MNI152",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "mni2tta": {
                        "desc": "transform dataset from MNI152 to Talaraich",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "matparent": {
                        "desc": "apply transformation from 3dWarpDrive",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "oblique_parent": {
                        "desc": "Read in the oblique transformation matrix from an oblique dataset and make cardinal dataset oblique to match",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "deoblique": {
                        "desc": "transform dataset from oblique to cardinal",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "interp": {
                        "desc": "spatial interpolation methods [default = linear]",
                        "mandatory": false,
                        "field": "",
                        "default_value": "linear",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "linear",
                                "cubic",
                                "NN",
                                "quintic"
                            ]
                        ]
                    },
                    "gridset": {
                        "desc": "copy grid of specified dataset",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "newgrid": {
                        "desc": "specify grid of this size (mm)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "zpad": {
                        "desc": "pad input dataset with N planes of zero on all sides.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "verbose": {
                        "desc": "Print out some information along the way.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "save_warp": {
                        "desc": "save warp as .mat file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": [
                            "verbose"
                        ]
                    },
                    "num_threads": {
                        "desc": "set number of threads",
                        "mandatory": false,
                        "field": "",
                        "default_value": 1,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "outputtype": {
                        "desc": "AFNI output filetype",
                        "mandatory": false,
                        "field": "",
                        "default_value": "AFNI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "AFNI",
                                "NIFTI_GZ"
                            ]
                        ]
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "out_file": {
                        "desc": "Warped file.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "warp_file": {
                        "desc": "warp transform .mat file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        }
    },
    "AFNI_Analysis": {
        "Deconvolve": {
            "desc": "Performs OLS regression given a 4D neuroimage file and stimulus timings",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "in_files": {
                        "desc": "filenames of 3D+time input datasets. More than one filename can be given and the datasets will be auto-catenated in time. You can input a 1D time series file here, but the time axis should run along the ROW direction, not the COLUMN direction as in the 'input1D' option.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Files",
                        "excludes": [],
                        "requires": []
                    },
                    "sat": {
                        "desc": "check the dataset time series for initial saturation transients, which should normally have been excised before data analysis.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "trans"
                        ],
                        "requires": []
                    },
                    "trans": {
                        "desc": "check the dataset time series for initial saturation transients, which should normally have been excised before data analysis.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "sat"
                        ],
                        "requires": []
                    },
                    "noblock": {
                        "desc": "normally, if you input multiple datasets with 'input', then the separate datasets are taken to be separate image runs that get separate baseline models. Use this options if you want to have the program consider these to be all one big run.* If any of the input dataset has only 1 sub-brick, then this option is automatically invoked!* If the auto-catenation feature isn't used, then this option has no effect, no how, no way.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "force_TR": {
                        "desc": "use this value instead of the TR in the 'input' dataset. (It's better to fix the input using Refit.)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "input1D": {
                        "desc": "filename of single (fMRI) .1D time series where time runs down the column.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "TR_1D": {
                        "desc": "TR to use with 'input1D'. This option has no effect if you do not also use 'input1D'.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "legendre": {
                        "desc": "use Legendre polynomials for null hypothesis (baseline model)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "nolegendre": {
                        "desc": "use power polynomials for null hypotheses. Don't do this unless you are crazy!",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "nodmbase": {
                        "desc": "don't de-mean baseline time series",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "dmbase": {
                        "desc": "de-mean baseline time series (default if 'polort' >= 0)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "svd": {
                        "desc": "use SVD instead of Gaussian elimination (default)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "nosvd": {
                        "desc": "use Gaussian elimination instead of SVD",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "rmsmin": {
                        "desc": "minimum rms error to reject reduced model (default = 0; don't use this option normally!)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "nocond": {
                        "desc": "DON'T calculate matrix condition number",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "singvals": {
                        "desc": "print out the matrix singular values",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "goforit": {
                        "desc": "use this to proceed even if the matrix has bad problems (e.g., duplicate columns, large condition number, etc.).",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "allzero_OK": {
                        "desc": "don't consider all zero matrix columns to be the type of error that 'gotforit' is needed to ignore.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "dname": {
                        "desc": "set environmental variable to provided value",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "mask": {
                        "desc": "filename of 3D mask dataset; only data time series from within the mask will be analyzed; results for voxels outside the mask will be set to zero.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "automask": {
                        "desc": "build a mask automatically from input data (will be slow for long time series datasets)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "STATmask": {
                        "desc": "build a mask from provided file, and use this mask for the purpose of reporting truncation-to float issues AND for computing the FDR curves. The actual results ARE not masked with this option (only with 'mask' or 'automask' options).",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "censor": {
                        "desc": "filename of censor .1D time series. This is a file of 1s and 0s, indicating which time points are to be included (1) and which are to be excluded (0).",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "polort": {
                        "desc": "degree of polynomial corresponding to the null hypothesis [default: 1]",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "ortvec": {
                        "desc": "this option lets you input a rectangular array of 1 or more baseline vectors from a file. This method is a fast way to include a lot of baseline regressors in one step. ",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "x1D": {
                        "desc": "specify name for saved X matrix",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "x1D_stop": {
                        "desc": "stop running after writing .xmat.1D file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "cbucket": {
                        "desc": "Name for dataset in which to save the regression coefficients (no statistics). This dataset will be used in a -xrestore run [not yet implemented] instead of the bucket dataset, if possible.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "out_file": {
                        "desc": "output statistics file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "num_threads": {
                        "desc": "run the program with provided number of sub-processes",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "fout": {
                        "desc": "output F-statistic for each stimulus",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "rout": {
                        "desc": "output the R^2 statistic for each stimulus",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "tout": {
                        "desc": "output the T-statistic for each stimulus",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "vout": {
                        "desc": "output the sample variance (MSE) for each stimulus",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "nofdr": {
                        "desc": "Don't compute the statistic-vs-FDR curves for the bucket dataset.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "global_times": {
                        "desc": "use global timing for stimulus timing files",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "local_times"
                        ],
                        "requires": []
                    },
                    "local_times": {
                        "desc": "use local timing for stimulus timing files",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "global_times"
                        ],
                        "requires": []
                    },
                    "num_stimts": {
                        "desc": "number of stimulus timing files",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "stim_times": {
                        "desc": "generate a response model from a set of stimulus times given in file.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "stim_label": {
                        "desc": "label for kth input stimulus (e.g., Label1)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [
                            "stim_times"
                        ]
                    },
                    "stim_times_subtract": {
                        "desc": "this option means to subtract specified seconds from each time encountered in any 'stim_times' option. The purpose of this option is to make it simple to adjust timing files for the removal of images from the start of each imaging run.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "num_glt": {
                        "desc": "number of general linear tests (i.e., contrasts)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "gltsym": {
                        "desc": "general linear tests (i.e., contrasts) using symbolic conventions (e.g., '+Label1 -Label2')",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "glt_label": {
                        "desc": "general linear test (i.e., contrast) labels",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [
                            "gltsym"
                        ]
                    },
                    "outputtype": {
                        "desc": "AFNI output filetype",
                        "mandatory": false,
                        "field": "",
                        "default_value": "AFNI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "AFNI",
                                "NIFTI_GZ"
                            ]
                        ]
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "out_file": {
                        "desc": "output statistics file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "reml_script": {
                        "desc": "automatically generated script to run 3dREMLfit",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "x1D": {
                        "desc": "save out X matrix",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "cbucket": {
                        "desc": "output regression coefficients file (if generated)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "Remlfit": {
            "desc": "Performs Generalized least squares time series fit with Restricted",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "in_files": {
                        "desc": "Read time series dataset",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "Files",
                        "excludes": [],
                        "requires": []
                    },
                    "matrix": {
                        "desc": "the design matrix file, which should have been output from Deconvolve via the 'x1D' option",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "polort": {
                        "desc": "if no 'matrix' option is given, AND no 'matim' option, create a matrix with Legendre polynomial regressorsup to the specified order. The default value is 0, whichproduces a matrix with a single column of all ones",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [
                            "matrix"
                        ],
                        "requires": []
                    },
                    "matim": {
                        "desc": "read a standard file as the matrix. You can use only Col as a name in GLTs with these nonstandard matrix input methods, since the other names come from the 'matrix' file. These mutually exclusive options are ignored if 'matrix' is used.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [
                            "matrix"
                        ],
                        "requires": []
                    },
                    "mask": {
                        "desc": "filename of 3D mask dataset; only data time series from within the mask will be analyzed; results for voxels outside the mask will be set to zero.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "automask": {
                        "desc": "build a mask automatically from input data (will be slow for long time series datasets)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "STATmask": {
                        "desc": "filename of 3D mask dataset to be used for the purpose of reporting truncation-to float issues AND for computing the FDR curves. The actual results ARE not masked with this option (only with 'mask' or 'automask' options).",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "addbase": {
                        "desc": "file(s) to add baseline model columns to the matrix with this option. Each column in the specified file(s) will be appended to the matrix. File(s) must have at least as many rows as the matrix does.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Files",
                        "excludes": [],
                        "requires": []
                    },
                    "slibase": {
                        "desc": "similar to 'addbase' in concept, BUT each specified file must have an integer multiple of the number of slices in the input dataset(s); then, separate regression matrices are generated for each slice, with the first column of the file appended to the matrix for the first slice of the dataset, the second column of the file appended to the matrix for the first slice of the dataset, and so on. Intended to help model physiological noise in FMRI, or other effects you want to regress out that might change significantly in the inter-slice time intervals. This will slow the program down, and make it use a lot more memory (to hold all the matrix stuff).",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Files",
                        "excludes": [],
                        "requires": []
                    },
                    "slibase_sm": {
                        "desc": "similar to 'slibase', BUT each file much be in slice major order (i.e. all slice0 columns come first, then all slice1 columns, etc).",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Files",
                        "excludes": [],
                        "requires": []
                    },
                    "usetemp": {
                        "desc": "write intermediate stuff to disk, to economize on RAM. Using this option might be necessary to run with 'slibase' and with 'Grid' values above the default, since the program has to store a large number of matrices for such a problem: two for every slice and for every (a,b) pair in the ARMA parameter grid. Temporary files are written to the directory given in environment variable TMPDIR, or in /tmp, or in ./ (preference is in that order)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "nodmbase": {
                        "desc": "by default, baseline columns added to the matrix via 'addbase' or 'slibase' or 'dsort' will each have their mean removed (as is done in Deconvolve); this option turns this centering off",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": [
                            "addbase",
                            "dsort"
                        ]
                    },
                    "dsort": {
                        "desc": "4D dataset to be used as voxelwise baseline regressor",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "dsort_nods": {
                        "desc": "if 'dsort' option is used, this command will output additional results files excluding the 'dsort' file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": [
                            "dsort"
                        ]
                    },
                    "fout": {
                        "desc": "output F-statistic for each stimulus",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "rout": {
                        "desc": "output the R^2 statistic for each stimulus",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "tout": {
                        "desc": "output the T-statistic for each stimulus; if you use 'out_file' and do not give any of 'fout', 'tout',or 'rout', then the program assumes 'fout' is activated.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "nofdr": {
                        "desc": "do NOT add FDR curve data to bucket datasets; FDR curves can take a long time if 'tout' is used",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "nobout": {
                        "desc": "do NOT add baseline (null hypothesis) regressor betas to the 'rbeta_file' and/or 'obeta_file' output datasets.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "gltsym": {
                        "desc": "read a symbolic GLT from input file and associate it with a label. As in Deconvolve, you can also use the 'SYM:' method to provide the definition of the GLT directly as a string (e.g., with 'SYM: +Label1 -Label2'). Unlike Deconvolve, you MUST specify 'SYM: ' if providing the GLT directly as a string instead of from a file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "out_file": {
                        "desc": "output dataset for beta + statistics from the REML estimation; also contains the results of any GLT analysis requested in the Deconvolve setup, similar to the 'bucket' output from Deconvolve. This dataset does NOT get the betas (or statistics) of those regressors marked as 'baseline' in the matrix file.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "var_file": {
                        "desc": "output dataset for REML variance parameters",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "rbeta_file": {
                        "desc": "output dataset for beta weights from the REML estimation, similar to the 'cbucket' output from Deconvolve. This dataset will contain all the beta weights, for baseline and stimulus regressors alike, unless the '-nobout' option is given -- in that case, this dataset will only get the betas for the stimulus regressors.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "glt_file": {
                        "desc": "output dataset for beta + statistics from the REML estimation, but ONLY for the GLTs added on the REMLfit command line itself via 'gltsym'; GLTs from Deconvolve's command line will NOT be included.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "fitts_file": {
                        "desc": "output dataset for REML fitted model",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "errts_file": {
                        "desc": "output dataset for REML residuals = data - fitted model",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "wherr_file": {
                        "desc": "dataset for REML residual, whitened using the estimated ARMA(1,1) correlation matrix of the noise",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "quiet": {
                        "desc": "turn off most progress messages",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "verb": {
                        "desc": "turns on more progress messages, including memory usage progress reports at various stages",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "goforit": {
                        "desc": "With potential issues flagged in the design matrix, an attempt will nevertheless be made to fit the model",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "ovar": {
                        "desc": "dataset for OLSQ st.dev. parameter (kind of boring)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "obeta": {
                        "desc": "dataset for beta weights from the OLSQ estimation",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "obuck": {
                        "desc": "dataset for beta + statistics from the OLSQ estimation",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "oglt": {
                        "desc": "dataset for beta + statistics from 'gltsym' options",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "ofitts": {
                        "desc": "dataset for OLSQ fitted model",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "oerrts": {
                        "desc": "dataset for OLSQ residuals (data - fitted model)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "num_threads": {
                        "desc": "set number of threads",
                        "mandatory": false,
                        "field": "",
                        "default_value": 1,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "outputtype": {
                        "desc": "AFNI output filetype",
                        "mandatory": false,
                        "field": "",
                        "default_value": "AFNI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "AFNI",
                                "NIFTI_GZ"
                            ]
                        ]
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "out_file": {
                        "desc": "dataset for beta + statistics from the REML estimation (if generated)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "var_file": {
                        "desc": "dataset for REML variance parameters (if generated)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "rbeta_file": {
                        "desc": "output dataset for beta weights from the REML estimation (if generated)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "glt_file": {
                        "desc": "output dataset for beta + statistics from the REML estimation, but ONLY for the GLTs added on the REMLfit command line itself via 'gltsym' (if generated)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "fitts_file": {
                        "desc": "output dataset for REML fitted model (if generated)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "errts_file": {
                        "desc": "output dataset for REML residuals = data - fitted model (if generated)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "wherr_file": {
                        "desc": "dataset for REML residual, whitened using the estimated ARMA(1,1) correlation matrix of the noise (if generated)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "ovar": {
                        "desc": "dataset for OLSQ st.dev. parameter (if generated)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "obeta": {
                        "desc": "dataset for beta weights from the OLSQ estimation (if generated)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "obuck": {
                        "desc": "dataset for beta + statistics from the OLSQ estimation (if generated)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "oglt": {
                        "desc": "dataset for beta + statistics from 'gltsym' options (if generated)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "ofitts": {
                        "desc": "dataset for OLSQ fitted model (if generated)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "oerrts": {
                        "desc": "dataset for OLSQ residuals = data - fitted model (if generated)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "Synthesize": {
            "desc": "Reads a '-cbucket' dataset and a '.xmat.1D' matrix from 3dDeconvolve,",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "cbucket": {
                        "desc": "Read the dataset output from 3dDeconvolve via the '-cbucket' option.",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "matrix": {
                        "desc": "Read the matrix output from 3dDeconvolve via the '-x1D' option.",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "select": {
                        "desc": "A list of selected columns from the matrix (and the corresponding coefficient sub-bricks from the cbucket). Valid types include 'baseline',  'polort', 'allfunc', 'allstim', 'all', Can also provide 'something' where something matches a stim_label from 3dDeconvolve, and 'digits' where digits are the numbers of the select matrix columns by numbers (starting at 0), or number ranges of the form '3..7' and '3-7'.",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "out_file": {
                        "desc": "output dataset prefix name (default 'syn')",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "dry_run": {
                        "desc": "Don't compute the output, just check the inputs.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "TR": {
                        "desc": "TR to set in the output.  The default value of TR is read from the header of the matrix file.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "cenfill": {
                        "desc": "Determines how censored time points from the 3dDeconvolve run will be filled. Valid types are 'zero', 'nbhr' and 'none'.",
                        "mandatory": false,
                        "field": "",
                        "default_value": "zero",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "zero",
                                "nbhr",
                                "none"
                            ]
                        ]
                    },
                    "num_threads": {
                        "desc": "set number of threads",
                        "mandatory": false,
                        "field": "",
                        "default_value": 1,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "outputtype": {
                        "desc": "AFNI output filetype",
                        "mandatory": false,
                        "field": "",
                        "default_value": "AFNI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "AFNI",
                                "NIFTI_GZ"
                            ]
                        ]
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "out_file": {
                        "desc": "output file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        }
    },
    "FSL_Preprocessing": {
        "ApplyWarp": {
            "desc": "FSL's applywarp wrapper to apply the results of a FNIRT registration",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "in_file": {
                        "desc": "image to be warped",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_file": {
                        "desc": "output filename",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "ref_file": {
                        "desc": "reference image",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "field_file": {
                        "desc": "file containing warp field",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "abswarp": {
                        "desc": "treat warp field as absolute: x' = w(x)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "relwarp"
                        ],
                        "requires": []
                    },
                    "relwarp": {
                        "desc": "treat warp field as relative: x' = x + w(x)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "abswarp"
                        ],
                        "requires": []
                    },
                    "datatype": {
                        "desc": "Force output data type [char short int float double].",
                        "mandatory": false,
                        "field": "",
                        "default_value": "char",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "char",
                                "short",
                                "int",
                                "float",
                                "double"
                            ]
                        ]
                    },
                    "supersample": {
                        "desc": "intermediary supersampling of output, default is off",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "superlevel": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported"
                    },
                    "premat": {
                        "desc": "filename for pre-transform (affine matrix)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "postmat": {
                        "desc": "filename for post-transform (affine matrix)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "mask_file": {
                        "desc": "filename for mask image (in reference space)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "interp": {
                        "desc": "interpolation method",
                        "mandatory": false,
                        "field": "",
                        "default_value": "nn",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "nn",
                                "trilinear",
                                "sinc",
                                "spline"
                            ]
                        ]
                    },
                    "output_type": {
                        "desc": "FSL output type",
                        "mandatory": false,
                        "field": "",
                        "default_value": "NIFTI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "NIFTI_PAIR",
                                "NIFTI_GZ",
                                "NIFTI_PAIR_GZ",
                                "GIFTI"
                            ]
                        ]
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "out_file": {
                        "desc": "Warped output file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "ApplyXFM": {
            "desc": "Currently just a light wrapper around FLIRT,",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "apply_xfm": {
                        "desc": "apply transformation supplied by in_matrix_file or uses_qform to use the affine matrix stored in the reference header",
                        "mandatory": false,
                        "field": "",
                        "default_value": true,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "in_file": {
                        "desc": "input file",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "reference": {
                        "desc": "reference file",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_file": {
                        "desc": "registered output file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_matrix_file": {
                        "desc": "output affine matrix in 4x4 asciii format",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_log": {
                        "desc": "output log",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": [
                            "save_log"
                        ]
                    },
                    "in_matrix_file": {
                        "desc": "input 4x4 affine matrix",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "apply_isoxfm": {
                        "desc": "as applyxfm but forces isotropic resampling",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [
                            "apply_xfm"
                        ],
                        "requires": []
                    },
                    "datatype": {
                        "desc": "force output data type",
                        "mandatory": false,
                        "field": "",
                        "default_value": "char",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "char",
                                "short",
                                "int",
                                "float",
                                "double"
                            ]
                        ]
                    },
                    "cost": {
                        "desc": "cost function",
                        "mandatory": false,
                        "field": "",
                        "default_value": "mutualinfo",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "mutualinfo",
                                "corratio",
                                "normcorr",
                                "normmi",
                                "leastsq",
                                "labeldiff",
                                "bbr"
                            ]
                        ]
                    },
                    "cost_func": {
                        "desc": "cost function",
                        "mandatory": false,
                        "field": "",
                        "default_value": "mutualinfo",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "mutualinfo",
                                "corratio",
                                "normcorr",
                                "normmi",
                                "leastsq",
                                "labeldiff",
                                "bbr"
                            ]
                        ]
                    },
                    "uses_qform": {
                        "desc": "initialize using sform or qform",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "display_init": {
                        "desc": "display initial matrix",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "angle_rep": {
                        "desc": "representation of rotation angles",
                        "mandatory": false,
                        "field": "",
                        "default_value": "quaternion",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "quaternion",
                                "euler"
                            ]
                        ]
                    },
                    "interp": {
                        "desc": "final interpolation method used in reslicing",
                        "mandatory": false,
                        "field": "",
                        "default_value": "trilinear",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "trilinear",
                                "nearestneighbour",
                                "sinc",
                                "spline"
                            ]
                        ]
                    },
                    "sinc_width": {
                        "desc": "full-width in voxels",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "sinc_window": {
                        "desc": "sinc window",
                        "mandatory": false,
                        "field": "",
                        "default_value": "rectangular",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "rectangular",
                                "hanning",
                                "blackman"
                            ]
                        ]
                    },
                    "bins": {
                        "desc": "number of histogram bins",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "dof": {
                        "desc": "number of transform degrees of freedom",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "no_resample": {
                        "desc": "do not change input sampling",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "force_scaling": {
                        "desc": "force rescaling even for low-res images",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "min_sampling": {
                        "desc": "set minimum voxel dimension for sampling",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "padding_size": {
                        "desc": "for applyxfm: interpolates outside image by size",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "searchr_x": {
                        "desc": "search angles along x-axis, in degrees",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "searchr_y": {
                        "desc": "search angles along y-axis, in degrees",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "searchr_z": {
                        "desc": "search angles along z-axis, in degrees",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "no_search": {
                        "desc": "set all angular searches to ranges 0 to 0",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "coarse_search": {
                        "desc": "coarse search delta angle",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "fine_search": {
                        "desc": "fine search delta angle",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "schedule": {
                        "desc": "replaces default schedule",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "ref_weight": {
                        "desc": "File for reference weighting volume",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "in_weight": {
                        "desc": "File for input weighting volume",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "no_clamp": {
                        "desc": "do not use intensity clamping",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "no_resample_blur": {
                        "desc": "do not use blurring on downsampling",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "rigid2D": {
                        "desc": "use 2D rigid body mode - ignores dof",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "save_log": {
                        "desc": "save to log file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "verbose": {
                        "desc": "verbose mode, 0 is least",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "bgvalue": {
                        "desc": "use specified background value for points outside FOV",
                        "mandatory": false,
                        "field": "",
                        "default_value": 0,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "wm_seg": {
                        "desc": "white matter segmentation volume needed by BBR cost function",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "wmcoords": {
                        "desc": "white matter boundary coordinates for BBR cost function",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "wmnorms": {
                        "desc": "white matter boundary normals for BBR cost function",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "fieldmap": {
                        "desc": "fieldmap image in rads/s - must be already registered to the reference image",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "fieldmapmask": {
                        "desc": "mask for fieldmap image",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "pedir": {
                        "desc": "phase encode direction of EPI - 1/2/3=x/y/z & -1/-2/-3=-x/-y/-z",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "echospacing": {
                        "desc": "value of EPI echo spacing - units of seconds",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "bbrtype": {
                        "desc": "type of bbr cost function: signed [default], global_abs, local_abs",
                        "mandatory": false,
                        "field": "",
                        "default_value": "signed",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "signed",
                                "global_abs",
                                "local_abs"
                            ]
                        ]
                    },
                    "bbrslope": {
                        "desc": "value of bbr slope",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "output_type": {
                        "desc": "FSL output type",
                        "mandatory": false,
                        "field": "",
                        "default_value": "NIFTI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "NIFTI_PAIR",
                                "NIFTI_GZ",
                                "NIFTI_PAIR_GZ",
                                "GIFTI"
                            ]
                        ]
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "BET": {
            "desc": "FSL BET wrapper for skull stripping",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "in_file": {
                        "desc": "input file to skull strip",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_file": {
                        "desc": "name of output skull stripped image",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "outline": {
                        "desc": "create surface outline image",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "mask": {
                        "desc": "create binary mask image",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "skull": {
                        "desc": "create skull image",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "no_output": {
                        "desc": "Don't generate segmented output",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "frac": {
                        "desc": "fractional intensity threshold",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "vertical_gradient": {
                        "desc": "vertical gradient in fractional intensity threshold (-1, 1)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "radius": {
                        "desc": "head radius",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "center": {
                        "desc": "center of gravity in voxels",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "threshold": {
                        "desc": "apply thresholding to segmented brain image and mask",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "mesh": {
                        "desc": "generate a vtk mesh brain surface",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "robust": {
                        "desc": "robust brain centre estimation (iterates BET several times)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "functional",
                            "reduce_bias",
                            "robust",
                            "padding",
                            "remove_eyes",
                            "surfaces",
                            "t2_guided"
                        ],
                        "requires": []
                    },
                    "padding": {
                        "desc": "improve BET if FOV is very small in Z (by temporarily padding end slices)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "functional",
                            "reduce_bias",
                            "robust",
                            "padding",
                            "remove_eyes",
                            "surfaces",
                            "t2_guided"
                        ],
                        "requires": []
                    },
                    "remove_eyes": {
                        "desc": "eye & optic nerve cleanup (can be useful in SIENA)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "functional",
                            "reduce_bias",
                            "robust",
                            "padding",
                            "remove_eyes",
                            "surfaces",
                            "t2_guided"
                        ],
                        "requires": []
                    },
                    "surfaces": {
                        "desc": "run bet2 and then betsurf to get additional skull and scalp surfaces (includes registrations)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "functional",
                            "reduce_bias",
                            "robust",
                            "padding",
                            "remove_eyes",
                            "surfaces",
                            "t2_guided"
                        ],
                        "requires": []
                    },
                    "t2_guided": {
                        "desc": "as with creating surfaces, when also feeding in non-brain-extracted T2 (includes registrations)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [
                            "functional",
                            "reduce_bias",
                            "robust",
                            "padding",
                            "remove_eyes",
                            "surfaces",
                            "t2_guided"
                        ],
                        "requires": []
                    },
                    "functional": {
                        "desc": "apply to 4D fMRI data",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "functional",
                            "reduce_bias",
                            "robust",
                            "padding",
                            "remove_eyes",
                            "surfaces",
                            "t2_guided"
                        ],
                        "requires": []
                    },
                    "reduce_bias": {
                        "desc": "bias field and neck cleanup",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "functional",
                            "reduce_bias",
                            "robust",
                            "padding",
                            "remove_eyes",
                            "surfaces",
                            "t2_guided"
                        ],
                        "requires": []
                    },
                    "output_type": {
                        "desc": "FSL output type",
                        "mandatory": false,
                        "field": "",
                        "default_value": "NIFTI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "NIFTI_PAIR",
                                "NIFTI_GZ",
                                "NIFTI_PAIR_GZ",
                                "GIFTI"
                            ]
                        ]
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "out_file": {
                        "desc": "path/name of skullstripped file (if generated)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "mask_file": {
                        "desc": "path/name of binary brain mask (if generated)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "outline_file": {
                        "desc": "path/name of outline file (if generated)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "meshfile": {
                        "desc": "path/name of vtk mesh file (if generated)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "inskull_mask_file": {
                        "desc": "path/name of inskull mask (if generated)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "inskull_mesh_file": {
                        "desc": "path/name of inskull mesh outline (if generated)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "outskull_mask_file": {
                        "desc": "path/name of outskull mask (if generated)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "outskull_mesh_file": {
                        "desc": "path/name of outskull mesh outline (if generated)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "outskin_mask_file": {
                        "desc": "path/name of outskin mask (if generated)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "outskin_mesh_file": {
                        "desc": "path/name of outskin mesh outline (if generated)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "skull_mask_file": {
                        "desc": "path/name of skull mask (if generated)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "skull_file": {
                        "desc": "path/name of skull file (if generated)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "FAST": {
            "desc": "FSL FAST wrapper for segmentation and bias correction",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "in_files": {
                        "desc": "image, or multi-channel set of images, to be segmented",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "Files",
                        "excludes": [],
                        "requires": []
                    },
                    "out_basename": {
                        "desc": "base name of output files",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "number_classes": {
                        "desc": "number of tissue-type classes",
                        "mandatory": false,
                        "field": "",
                        "default_value": 1,
                        "type": "Integer",
                        "excludes": [],
                        "requires": [],
                        "value": null,
                        "low": 1,
                        "high": 10
                    },
                    "output_biasfield": {
                        "desc": "output estimated bias field",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "output_biascorrected": {
                        "desc": "output restored image (bias-corrected image)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "img_type": {
                        "desc": "int specifying type of image: (1 = T1, 2 = T2, 3 = PD)",
                        "mandatory": false,
                        "field": "",
                        "default_value": 1,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                1,
                                2,
                                3
                            ]
                        ]
                    },
                    "bias_iters": {
                        "desc": "number of main-loop iterations during bias-field removal",
                        "mandatory": false,
                        "field": "",
                        "default_value": 1,
                        "type": "Integer",
                        "excludes": [],
                        "requires": [],
                        "value": null,
                        "low": 1,
                        "high": 10
                    },
                    "bias_lowpass": {
                        "desc": "bias field smoothing extent (FWHM) in mm",
                        "mandatory": false,
                        "field": "",
                        "default_value": 4,
                        "type": "Integer",
                        "excludes": [],
                        "requires": [],
                        "value": null,
                        "low": 4,
                        "high": 40
                    },
                    "init_seg_smooth": {
                        "desc": "initial segmentation spatial smoothness (during bias field estimation)",
                        "mandatory": false,
                        "field": "",
                        "default_value": 0.0001,
                        "type": "Float",
                        "excludes": [],
                        "requires": [],
                        "value": null,
                        "low": 0.0001,
                        "high": 0.1
                    },
                    "segments": {
                        "desc": "outputs a separate binary image for each tissue type",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "init_transform": {
                        "desc": "<standard2input.mat> initialise using priors",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "other_priors": {
                        "desc": "alternative prior images",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Files",
                        "excludes": [],
                        "requires": []
                    },
                    "no_pve": {
                        "desc": "turn off PVE (partial volume estimation)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "no_bias": {
                        "desc": "do not remove bias field",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "use_priors": {
                        "desc": "use priors throughout",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "segment_iters": {
                        "desc": "number of segmentation-initialisation iterations",
                        "mandatory": false,
                        "field": "",
                        "default_value": 1,
                        "type": "Integer",
                        "excludes": [],
                        "requires": [],
                        "value": null,
                        "low": 1,
                        "high": 50
                    },
                    "mixel_smooth": {
                        "desc": "spatial smoothness for mixeltype",
                        "mandatory": false,
                        "field": "",
                        "default_value": 0.0,
                        "type": "Float",
                        "excludes": [],
                        "requires": [],
                        "value": null,
                        "low": 0.0,
                        "high": 1.0
                    },
                    "iters_afterbias": {
                        "desc": "number of main-loop iterations after bias-field removal",
                        "mandatory": false,
                        "field": "",
                        "default_value": 1,
                        "type": "Integer",
                        "excludes": [],
                        "requires": [],
                        "value": null,
                        "low": 1,
                        "high": 20
                    },
                    "hyper": {
                        "desc": "segmentation spatial smoothness",
                        "mandatory": false,
                        "field": "",
                        "default_value": 0.0,
                        "type": "Float",
                        "excludes": [],
                        "requires": [],
                        "value": null,
                        "low": 0.0,
                        "high": 1.0
                    },
                    "verbose": {
                        "desc": "switch on diagnostic messages",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "manual_seg": {
                        "desc": "Filename containing intensities",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "probability_maps": {
                        "desc": "outputs individual probability maps",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "output_type": {
                        "desc": "FSL output type",
                        "mandatory": false,
                        "field": "",
                        "default_value": "NIFTI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "NIFTI_PAIR",
                                "NIFTI_GZ",
                                "NIFTI_PAIR_GZ",
                                "GIFTI"
                            ]
                        ]
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "tissue_class_map": {
                        "desc": "path/name of binary segmented volume file one val for each class  _seg",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "tissue_class_files": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "restored_image": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "mixeltype": {
                        "desc": "path/name of mixeltype volume file _mixeltype",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "partial_volume_map": {
                        "desc": "path/name of partial volume file _pveseg",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "partial_volume_files": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "bias_field": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "probability_maps": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "FIRST": {
            "desc": "FSL run_first_all wrapper for segmentation of subcortical volumes",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "in_file": {
                        "desc": "input data file",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_file": {
                        "desc": "output data file",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "verbose": {
                        "desc": "Use verbose logging.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "brain_extracted": {
                        "desc": "Input structural image is already brain-extracted",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "no_cleanup": {
                        "desc": "Input structural image is already brain-extracted",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "method": {
                        "desc": "Method must be one of auto, fast, none, or it can be entered using the 'method_as_numerical_threshold' input",
                        "mandatory": false,
                        "field": "",
                        "default_value": "auto",
                        "type": "Unsupported",
                        "excludes": [
                            "method_as_numerical_threshold"
                        ],
                        "requires": [],
                        "oneof": [
                            [
                                "auto",
                                "fast",
                                "none"
                            ]
                        ]
                    },
                    "method_as_numerical_threshold": {
                        "desc": "Specify a numerical threshold value or use the 'method' input to choose auto, fast, or none",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "list_of_specific_structures": {
                        "desc": "Runs only on the specified structures (e.g. L_Hipp, R_HippL_Accu, R_Accu, L_Amyg, R_AmygL_Caud, R_Caud, L_Pall, R_PallL_Puta, R_Puta, L_Thal, R_Thal, BrStem",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "affine_file": {
                        "desc": "Affine matrix to use (e.g. img2std.mat) (does not re-run registration)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "output_type": {
                        "desc": "FSL output type",
                        "mandatory": false,
                        "field": "",
                        "default_value": "NIFTI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "NIFTI_PAIR",
                                "NIFTI_GZ",
                                "NIFTI_PAIR_GZ",
                                "GIFTI"
                            ]
                        ]
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "vtk_surfaces": {
                        "desc": "VTK format meshes for each subcortical region",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "bvars": {
                        "desc": "bvars for each subcortical region",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "original_segmentations": {
                        "desc": "3D image file containing the segmented regions as integer values. Uses CMA labelling",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "segmentation_file": {
                        "desc": "4D image file containing a single volume per segmented region",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "FLIRT": {
            "desc": "FSL FLIRT wrapper for coregistration",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "in_file": {
                        "desc": "input file",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "reference": {
                        "desc": "reference file",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_file": {
                        "desc": "registered output file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_matrix_file": {
                        "desc": "output affine matrix in 4x4 asciii format",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_log": {
                        "desc": "output log",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": [
                            "save_log"
                        ]
                    },
                    "in_matrix_file": {
                        "desc": "input 4x4 affine matrix",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "apply_xfm": {
                        "desc": "apply transformation supplied by in_matrix_file or uses_qform to use the affine matrix stored in the reference header",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "apply_isoxfm": {
                        "desc": "as applyxfm but forces isotropic resampling",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [
                            "apply_xfm"
                        ],
                        "requires": []
                    },
                    "datatype": {
                        "desc": "force output data type",
                        "mandatory": false,
                        "field": "",
                        "default_value": "char",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "char",
                                "short",
                                "int",
                                "float",
                                "double"
                            ]
                        ]
                    },
                    "cost": {
                        "desc": "cost function",
                        "mandatory": false,
                        "field": "",
                        "default_value": "mutualinfo",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "mutualinfo",
                                "corratio",
                                "normcorr",
                                "normmi",
                                "leastsq",
                                "labeldiff",
                                "bbr"
                            ]
                        ]
                    },
                    "cost_func": {
                        "desc": "cost function",
                        "mandatory": false,
                        "field": "",
                        "default_value": "mutualinfo",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "mutualinfo",
                                "corratio",
                                "normcorr",
                                "normmi",
                                "leastsq",
                                "labeldiff",
                                "bbr"
                            ]
                        ]
                    },
                    "uses_qform": {
                        "desc": "initialize using sform or qform",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "display_init": {
                        "desc": "display initial matrix",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "angle_rep": {
                        "desc": "representation of rotation angles",
                        "mandatory": false,
                        "field": "",
                        "default_value": "quaternion",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "quaternion",
                                "euler"
                            ]
                        ]
                    },
                    "interp": {
                        "desc": "final interpolation method used in reslicing",
                        "mandatory": false,
                        "field": "",
                        "default_value": "trilinear",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "trilinear",
                                "nearestneighbour",
                                "sinc",
                                "spline"
                            ]
                        ]
                    },
                    "sinc_width": {
                        "desc": "full-width in voxels",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "sinc_window": {
                        "desc": "sinc window",
                        "mandatory": false,
                        "field": "",
                        "default_value": "rectangular",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "rectangular",
                                "hanning",
                                "blackman"
                            ]
                        ]
                    },
                    "bins": {
                        "desc": "number of histogram bins",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "dof": {
                        "desc": "number of transform degrees of freedom",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "no_resample": {
                        "desc": "do not change input sampling",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "force_scaling": {
                        "desc": "force rescaling even for low-res images",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "min_sampling": {
                        "desc": "set minimum voxel dimension for sampling",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "padding_size": {
                        "desc": "for applyxfm: interpolates outside image by size",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "searchr_x": {
                        "desc": "search angles along x-axis, in degrees",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "searchr_y": {
                        "desc": "search angles along y-axis, in degrees",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "searchr_z": {
                        "desc": "search angles along z-axis, in degrees",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "no_search": {
                        "desc": "set all angular searches to ranges 0 to 0",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "coarse_search": {
                        "desc": "coarse search delta angle",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "fine_search": {
                        "desc": "fine search delta angle",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "schedule": {
                        "desc": "replaces default schedule",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "ref_weight": {
                        "desc": "File for reference weighting volume",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "in_weight": {
                        "desc": "File for input weighting volume",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "no_clamp": {
                        "desc": "do not use intensity clamping",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "no_resample_blur": {
                        "desc": "do not use blurring on downsampling",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "rigid2D": {
                        "desc": "use 2D rigid body mode - ignores dof",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "save_log": {
                        "desc": "save to log file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "verbose": {
                        "desc": "verbose mode, 0 is least",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "bgvalue": {
                        "desc": "use specified background value for points outside FOV",
                        "mandatory": false,
                        "field": "",
                        "default_value": 0,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "wm_seg": {
                        "desc": "white matter segmentation volume needed by BBR cost function",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "wmcoords": {
                        "desc": "white matter boundary coordinates for BBR cost function",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "wmnorms": {
                        "desc": "white matter boundary normals for BBR cost function",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "fieldmap": {
                        "desc": "fieldmap image in rads/s - must be already registered to the reference image",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "fieldmapmask": {
                        "desc": "mask for fieldmap image",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "pedir": {
                        "desc": "phase encode direction of EPI - 1/2/3=x/y/z & -1/-2/-3=-x/-y/-z",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "echospacing": {
                        "desc": "value of EPI echo spacing - units of seconds",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "bbrtype": {
                        "desc": "type of bbr cost function: signed [default], global_abs, local_abs",
                        "mandatory": false,
                        "field": "",
                        "default_value": "signed",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "signed",
                                "global_abs",
                                "local_abs"
                            ]
                        ]
                    },
                    "bbrslope": {
                        "desc": "value of bbr slope",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "output_type": {
                        "desc": "FSL output type",
                        "mandatory": false,
                        "field": "",
                        "default_value": "NIFTI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "NIFTI_PAIR",
                                "NIFTI_GZ",
                                "NIFTI_PAIR_GZ",
                                "GIFTI"
                            ]
                        ]
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "out_file": {
                        "desc": "path/name of registered file (if generated)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_matrix_file": {
                        "desc": "path/name of calculated affine transform (if generated)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_log": {
                        "desc": "path/name of output log (if generated)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "FNIRT": {
            "desc": "FSL FNIRT wrapper for non-linear registration",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "ref_file": {
                        "desc": "name of reference image",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "in_file": {
                        "desc": "name of input image",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "affine_file": {
                        "desc": "name of file containing affine transform",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "inwarp_file": {
                        "desc": "name of file containing initial non-linear warps",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "in_intensitymap_file": {
                        "desc": "name of file/files containing initial intensity mapping usually generated by previous fnirt run",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "fieldcoeff_file": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported"
                    },
                    "warped_file": {
                        "desc": "name of output image",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "field_file": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported"
                    },
                    "jacobian_file": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported"
                    },
                    "modulatedref_file": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported"
                    },
                    "out_intensitymap_file": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported"
                    },
                    "log_file": {
                        "desc": "Name of log-file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "config_file": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported"
                    },
                    "refmask_file": {
                        "desc": "name of file with mask in reference space",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "inmask_file": {
                        "desc": "name of file with mask in input image space",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "skip_refmask": {
                        "desc": "Skip specified refmask if set, default false",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "apply_refmask"
                        ],
                        "requires": []
                    },
                    "skip_inmask": {
                        "desc": "skip specified inmask if set, default false",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "apply_inmask"
                        ],
                        "requires": []
                    },
                    "apply_refmask": {
                        "desc": "list of iterations to use reference mask on (1 to use, 0 to skip)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [
                            "skip_refmask"
                        ],
                        "requires": []
                    },
                    "apply_inmask": {
                        "desc": "list of iterations to use input mask on (1 to use, 0 to skip)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [
                            "skip_inmask"
                        ],
                        "requires": []
                    },
                    "skip_implicit_ref_masking": {
                        "desc": "skip implicit masking  based on value in --ref image. Default = 0",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "skip_implicit_in_masking": {
                        "desc": "skip implicit masking  based on value in --in image. Default = 0",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "refmask_val": {
                        "desc": "Value to mask out in --ref image. Default =0.0",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "inmask_val": {
                        "desc": "Value to mask out in --in image. Default =0.0",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "max_nonlin_iter": {
                        "desc": "Max # of non-linear iterations list, default [5, 5, 5, 5]",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "subsampling_scheme": {
                        "desc": "sub-sampling scheme, list, default [4, 2, 1, 1]",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "warp_resolution": {
                        "desc": "(approximate) resolution (in mm) of warp basis in x-, y- and z-direction, default 10, 10, 10",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "spline_order": {
                        "desc": "Order of spline, 2->Qadratic spline, 3->Cubic spline. Default=3",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "in_fwhm": {
                        "desc": "FWHM (in mm) of gaussian smoothing kernel for input volume, default [6, 4, 2, 2]",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "ref_fwhm": {
                        "desc": "FWHM (in mm) of gaussian smoothing kernel for ref volume, default [4, 2, 0, 0]",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "regularization_model": {
                        "desc": "Model for regularisation of warp-field [membrane_energy bending_energy], default bending_energy",
                        "mandatory": false,
                        "field": "",
                        "default_value": "membrane_energy",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "membrane_energy",
                                "bending_energy"
                            ]
                        ]
                    },
                    "regularization_lambda": {
                        "desc": "Weight of regularisation, default depending on --ssqlambda and --regmod switches. See user documentation.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "skip_lambda_ssq": {
                        "desc": "If true, lambda is not weighted by current ssq, default false",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "jacobian_range": {
                        "desc": "Allowed range of Jacobian determinants, default 0.01, 100.0",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "derive_from_ref": {
                        "desc": "If true, ref image is used to calculate derivatives. Default false",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "intensity_mapping_model": {
                        "desc": "Model for intensity-mapping",
                        "mandatory": false,
                        "field": "",
                        "default_value": "none",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "none",
                                "global_linear",
                                "global_non_linear",
                                "local_linear",
                                "global_non_linear_with_bias",
                                "local_non_linear"
                            ]
                        ]
                    },
                    "intensity_mapping_order": {
                        "desc": "Order of poynomial for mapping intensities, default 5",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "biasfield_resolution": {
                        "desc": "Resolution (in mm) of bias-field modelling local intensities, default 50, 50, 50",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "bias_regularization_lambda": {
                        "desc": "Weight of regularisation for bias-field, default 10000",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "skip_intensity_mapping": {
                        "desc": "Skip estimate intensity-mapping default false",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "apply_intensity_mapping"
                        ],
                        "requires": []
                    },
                    "apply_intensity_mapping": {
                        "desc": "List of subsampling levels to apply intensity mapping for (0 to skip, 1 to apply)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [
                            "skip_intensity_mapping"
                        ],
                        "requires": []
                    },
                    "hessian_precision": {
                        "desc": "Precision for representing Hessian, double or float. Default double",
                        "mandatory": false,
                        "field": "",
                        "default_value": "double",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "double",
                                "float"
                            ]
                        ]
                    },
                    "output_type": {
                        "desc": "FSL output type",
                        "mandatory": false,
                        "field": "",
                        "default_value": "NIFTI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "NIFTI_PAIR",
                                "NIFTI_GZ",
                                "NIFTI_PAIR_GZ",
                                "GIFTI"
                            ]
                        ]
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "fieldcoeff_file": {
                        "desc": "file with field coefficients",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "warped_file": {
                        "desc": "warped image",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "field_file": {
                        "desc": "file with warp field",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "jacobian_file": {
                        "desc": "file containing Jacobian of the field",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "modulatedref_file": {
                        "desc": "file containing intensity modulated --ref",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_intensitymap_file": {
                        "desc": "files containing info pertaining to intensity mapping",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "log_file": {
                        "desc": "Name of log-file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "FUGUE": {
            "desc": "FSL FUGUE set of tools for EPI distortion correction",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "in_file": {
                        "desc": "filename of input volume",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "shift_in_file": {
                        "desc": "filename for reading pixel shift volume",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "phasemap_in_file": {
                        "desc": "filename for input phase image",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "fmap_in_file": {
                        "desc": "filename for loading fieldmap (rad/s)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "unwarped_file": {
                        "desc": "apply unwarping and save as filename",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [
                            "warped_file"
                        ],
                        "requires": [
                            "in_file"
                        ]
                    },
                    "warped_file": {
                        "desc": "apply forward warping and save as filename",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [
                            "unwarped_file"
                        ],
                        "requires": [
                            "in_file"
                        ]
                    },
                    "forward_warping": {
                        "desc": "apply forward warping instead of unwarping",
                        "mandatory": false,
                        "field": "",
                        "default_value": false,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "dwell_to_asym_ratio": {
                        "desc": "set the dwell to asym time ratio",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "dwell_time": {
                        "desc": "set the EPI dwell time per phase-encode line - same as echo spacing - (sec)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "asym_se_time": {
                        "desc": "set the fieldmap asymmetric spin echo time (sec)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "median_2dfilter": {
                        "desc": "apply 2D median filtering",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "despike_2dfilter": {
                        "desc": "apply a 2D de-spiking filter",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "no_gap_fill": {
                        "desc": "do not apply gap-filling measure to the fieldmap",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "no_extend": {
                        "desc": "do not apply rigid-body extrapolation to the fieldmap",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "smooth2d": {
                        "desc": "apply 2D Gaussian smoothing of sigma N (in mm)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "smooth3d": {
                        "desc": "apply 3D Gaussian smoothing of sigma N (in mm)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "poly_order": {
                        "desc": "apply polynomial fitting of order N",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "fourier_order": {
                        "desc": "apply Fourier (sinusoidal) fitting of order N",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "pava": {
                        "desc": "apply monotonic enforcement via PAVA",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "despike_threshold": {
                        "desc": "specify the threshold for de-spiking (default=3.0)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "unwarp_direction": {
                        "desc": "specifies direction of warping (default y)",
                        "mandatory": false,
                        "field": "",
                        "default_value": "x",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "x",
                                "y",
                                "z",
                                "x-",
                                "y-",
                                "z-"
                            ]
                        ]
                    },
                    "phase_conjugate": {
                        "desc": "apply phase conjugate method of unwarping",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "icorr": {
                        "desc": "apply intensity correction to unwarping (pixel shift method only)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": [
                            "shift_in_file"
                        ]
                    },
                    "icorr_only": {
                        "desc": "apply intensity correction only",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": [
                            "unwarped_file"
                        ]
                    },
                    "mask_file": {
                        "desc": "filename for loading valid mask",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "nokspace": {
                        "desc": "do not use k-space forward warping",
                        "mandatory": false,
                        "field": "",
                        "default_value": false,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "save_shift": {
                        "desc": "write pixel shift volume",
                        "mandatory": false,
                        "field": "",
                        "default_value": false,
                        "type": "Boolean",
                        "excludes": [
                            "save_unmasked_shift"
                        ],
                        "requires": []
                    },
                    "shift_out_file": {
                        "desc": "filename for saving pixel shift volume",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "save_unmasked_shift": {
                        "desc": "saves the unmasked shiftmap when using --saveshift",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "save_shift"
                        ],
                        "requires": []
                    },
                    "save_fmap": {
                        "desc": "write field map volume",
                        "mandatory": false,
                        "field": "",
                        "default_value": false,
                        "type": "Boolean",
                        "excludes": [
                            "save_unmasked_fmap"
                        ],
                        "requires": []
                    },
                    "fmap_out_file": {
                        "desc": "filename for saving fieldmap (rad/s)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "save_unmasked_fmap": {
                        "desc": "saves the unmasked fieldmap when using --savefmap",
                        "mandatory": false,
                        "field": "",
                        "default_value": false,
                        "type": "Boolean",
                        "excludes": [
                            "save_fmap"
                        ],
                        "requires": []
                    },
                    "output_type": {
                        "desc": "FSL output type",
                        "mandatory": false,
                        "field": "",
                        "default_value": "NIFTI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "NIFTI_PAIR",
                                "NIFTI_GZ",
                                "NIFTI_PAIR_GZ",
                                "GIFTI"
                            ]
                        ]
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "unwarped_file": {
                        "desc": "unwarped file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "warped_file": {
                        "desc": "forward warped file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "shift_out_file": {
                        "desc": "voxel shift map file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "fmap_out_file": {
                        "desc": "fieldmap file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "MCFLIRT": {
            "desc": "FSL MCFLIRT wrapper for within-modality motion correction",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "in_file": {
                        "desc": "timeseries to motion-correct",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_file": {
                        "desc": "file to write",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "cost": {
                        "desc": "cost function to optimize",
                        "mandatory": false,
                        "field": "",
                        "default_value": "mutualinfo",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "mutualinfo",
                                "woods",
                                "corratio",
                                "normcorr",
                                "normmi",
                                "leastsquares"
                            ]
                        ]
                    },
                    "bins": {
                        "desc": "number of histogram bins",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "dof": {
                        "desc": "degrees of freedom for the transformation",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "ref_vol": {
                        "desc": "volume to align frames to",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "scaling": {
                        "desc": "scaling factor to use",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "smooth": {
                        "desc": "smoothing factor for the cost function",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "rotation": {
                        "desc": "scaling factor for rotation tolerances",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "stages": {
                        "desc": "stages (if 4, perform final search with sinc interpolation",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "init": {
                        "desc": "initial transformation matrix",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "interpolation": {
                        "desc": "interpolation method for transformation",
                        "mandatory": false,
                        "field": "",
                        "default_value": "spline",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "spline",
                                "nn",
                                "sinc"
                            ]
                        ]
                    },
                    "use_gradient": {
                        "desc": "run search on gradient images",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "use_contour": {
                        "desc": "run search on contour images",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "mean_vol": {
                        "desc": "register to mean volume",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "stats_imgs": {
                        "desc": "produce variance and std. dev. images",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "save_mats": {
                        "desc": "save transformation matrices",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "save_plots": {
                        "desc": "save transformation parameters",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "save_rms": {
                        "desc": "save rms displacement parameters",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "ref_file": {
                        "desc": "target image for motion correction",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "output_type": {
                        "desc": "FSL output type",
                        "mandatory": false,
                        "field": "",
                        "default_value": "NIFTI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "NIFTI_PAIR",
                                "NIFTI_GZ",
                                "NIFTI_PAIR_GZ",
                                "GIFTI"
                            ]
                        ]
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "out_file": {
                        "desc": "motion-corrected timeseries",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "variance_img": {
                        "desc": "variance image",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "std_img": {
                        "desc": "standard deviation image",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "mean_img": {
                        "desc": "mean timeseries image (if mean_vol=True)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "par_file": {
                        "desc": "text-file with motion parameters",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "mat_file": {
                        "desc": "transformation matrices",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "rms_files": {
                        "desc": "absolute and relative displacement parameters",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "PRELUDE": {
            "desc": "FSL prelude wrapper for phase unwrapping",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "complex_phase_file": {
                        "desc": "complex phase input volume",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [
                            "magnitude_file",
                            "phase_file"
                        ],
                        "requires": []
                    },
                    "magnitude_file": {
                        "desc": "file containing magnitude image",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [
                            "complex_phase_file"
                        ],
                        "requires": []
                    },
                    "phase_file": {
                        "desc": "raw phase file",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [
                            "complex_phase_file"
                        ],
                        "requires": []
                    },
                    "unwrapped_phase_file": {
                        "desc": "file containing unwrapepd phase",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "num_partitions": {
                        "desc": "number of phase partitions to use",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "labelprocess2d": {
                        "desc": "does label processing in 2D (slice at a time)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "process2d": {
                        "desc": "does all processing in 2D (slice at a time)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "labelprocess2d"
                        ],
                        "requires": []
                    },
                    "process3d": {
                        "desc": "forces all processing to be full 3D",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "labelprocess2d",
                            "process2d"
                        ],
                        "requires": []
                    },
                    "threshold": {
                        "desc": "intensity threshold for masking",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "mask_file": {
                        "desc": "filename of mask input volume",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "start": {
                        "desc": "first image number to process (default 0)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "end": {
                        "desc": "final image number to process (default Inf)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "savemask_file": {
                        "desc": "saving the mask volume",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "rawphase_file": {
                        "desc": "saving the raw phase output",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "label_file": {
                        "desc": "saving the area labels output",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "removeramps": {
                        "desc": "remove phase ramps during unwrapping",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "output_type": {
                        "desc": "FSL output type",
                        "mandatory": false,
                        "field": "",
                        "default_value": "NIFTI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "NIFTI_PAIR",
                                "NIFTI_GZ",
                                "NIFTI_PAIR_GZ",
                                "GIFTI"
                            ]
                        ]
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "unwrapped_phase_file": {
                        "desc": "unwrapped phase file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "SUSAN": {
            "desc": "FSL SUSAN wrapper to perform smoothing",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "in_file": {
                        "desc": "filename of input timeseries",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "brightness_threshold": {
                        "desc": "brightness threshold and should be greater than noise level and less than contrast of edges to be preserved.",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "fwhm": {
                        "desc": "fwhm of smoothing, in mm, gets converted using sqrt(8*log(2))",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "dimension": {
                        "desc": "within-plane (2) or fully 3D (3)",
                        "mandatory": false,
                        "field": "",
                        "default_value": 3,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                3,
                                2
                            ]
                        ]
                    },
                    "use_median": {
                        "desc": "whether to use a local median filter in the cases where single-point noise is detected",
                        "mandatory": false,
                        "field": "",
                        "default_value": 1,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                1,
                                0
                            ]
                        ]
                    },
                    "usans": {
                        "desc": "determines whether the smoothing area (USAN) is to be found from secondary images (0, 1 or 2). A negative value for any brightness threshold will auto-set the threshold at 10% of the robust range",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "out_file": {
                        "desc": "output file name",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "output_type": {
                        "desc": "FSL output type",
                        "mandatory": false,
                        "field": "",
                        "default_value": "NIFTI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "NIFTI_PAIR",
                                "NIFTI_GZ",
                                "NIFTI_PAIR_GZ",
                                "GIFTI"
                            ]
                        ]
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "smoothed_file": {
                        "desc": "smoothed output file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "SliceTimer": {
            "desc": "FSL slicetimer wrapper to perform slice timing correction",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "in_file": {
                        "desc": "filename of input timeseries",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_file": {
                        "desc": "filename of output timeseries",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "index_dir": {
                        "desc": "slice indexing from top to bottom",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "time_repetition": {
                        "desc": "Specify TR of data - default is 3s",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "slice_direction": {
                        "desc": "direction of slice acquisition (x=1, y=2, z=3) - default is z",
                        "mandatory": false,
                        "field": "",
                        "default_value": 1,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                1,
                                2,
                                3
                            ]
                        ]
                    },
                    "interleaved": {
                        "desc": "use interleaved acquisition",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "custom_timings": {
                        "desc": "slice timings, in fractions of TR, range 0:1 (default is 0.5 = no shift)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "global_shift": {
                        "desc": "shift in fraction of TR, range 0:1 (default is 0.5 = no shift)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "custom_order": {
                        "desc": "filename of single-column custom interleave order file (first slice is referred to as 1 not 0)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "output_type": {
                        "desc": "FSL output type",
                        "mandatory": false,
                        "field": "",
                        "default_value": "NIFTI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "NIFTI_PAIR",
                                "NIFTI_GZ",
                                "NIFTI_PAIR_GZ",
                                "GIFTI"
                            ]
                        ]
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "slice_time_corrected_file": {
                        "desc": "slice time corrected file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        }
    },
    "FSL_Analysis": {
        "Cluster": {
            "desc": "Uses FSL cluster to perform clustering on statistical output",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "in_file": {
                        "desc": "input volume",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "threshold": {
                        "desc": "threshold for input volume",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "out_index_file": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported"
                    },
                    "out_threshold_file": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported"
                    },
                    "out_localmax_txt_file": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported"
                    },
                    "out_localmax_vol_file": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported"
                    },
                    "out_size_file": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported"
                    },
                    "out_max_file": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported"
                    },
                    "out_mean_file": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported"
                    },
                    "out_pval_file": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported"
                    },
                    "pthreshold": {
                        "desc": "p-threshold for clusters",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": [
                            "dlh",
                            "volume"
                        ]
                    },
                    "peak_distance": {
                        "desc": "minimum distance between local maxima/minima, in mm (default 0)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "cope_file": {
                        "desc": "cope volume",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "volume": {
                        "desc": "number of voxels in the mask",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "dlh": {
                        "desc": "smoothness estimate = sqrt(det(Lambda))",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "fractional": {
                        "desc": "interprets the threshold as a fraction of the robust range",
                        "mandatory": false,
                        "field": "",
                        "default_value": false,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "connectivity": {
                        "desc": "the connectivity of voxels (default 26)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "use_mm": {
                        "desc": "use mm, not voxel, coordinates",
                        "mandatory": false,
                        "field": "",
                        "default_value": false,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "find_min": {
                        "desc": "find minima instead of maxima",
                        "mandatory": false,
                        "field": "",
                        "default_value": false,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "no_table": {
                        "desc": "suppresses printing of the table info",
                        "mandatory": false,
                        "field": "",
                        "default_value": false,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "minclustersize": {
                        "desc": "prints out minimum significant cluster size",
                        "mandatory": false,
                        "field": "",
                        "default_value": false,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "xfm_file": {
                        "desc": "filename for Linear: input->standard-space transform. Non-linear: input->highres transform",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "std_space_file": {
                        "desc": "filename for standard-space volume",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "num_maxima": {
                        "desc": "no of local maxima to report",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "warpfield_file": {
                        "desc": "file containing warpfield",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "output_type": {
                        "desc": "FSL output type",
                        "mandatory": false,
                        "field": "",
                        "default_value": "NIFTI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "NIFTI_PAIR",
                                "NIFTI_GZ",
                                "NIFTI_PAIR_GZ",
                                "GIFTI"
                            ]
                        ]
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "index_file": {
                        "desc": "output of cluster index (in size order)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "threshold_file": {
                        "desc": "thresholded image",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "localmax_txt_file": {
                        "desc": "local maxima text file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "localmax_vol_file": {
                        "desc": "output of local maxima volume",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "size_file": {
                        "desc": "filename for output of size image",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "max_file": {
                        "desc": "filename for output of max image",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "mean_file": {
                        "desc": "filename for output of mean image",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "pval_file": {
                        "desc": "filename for image output of log pvals",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "ContrastMgr": {
            "desc": "Use FSL contrast_mgr command to evaluate contrasts",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "tcon_file": {
                        "desc": "contrast file containing T-contrasts",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "fcon_file": {
                        "desc": "contrast file containing F-contrasts",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "param_estimates": {
                        "desc": "Parameter estimates for each column of the design matrix",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "Files",
                        "excludes": [],
                        "requires": []
                    },
                    "corrections": {
                        "desc": "statistical corrections used within FILM modelling",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "dof_file": {
                        "desc": "degrees of freedom",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "sigmasquareds": {
                        "desc": "summary of residuals, See Woolrich, et. al., 2001",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "contrast_num": {
                        "desc": "contrast number to start labeling copes from",
                        "mandatory": false,
                        "field": "",
                        "default_value": 1,
                        "type": "Integer",
                        "excludes": [],
                        "requires": [],
                        "value": null,
                        "low": 1,
                        "high": null
                    },
                    "suffix": {
                        "desc": "suffix to put on the end of the cope filename before the contrast number, default is nothing",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "output_type": {
                        "desc": "FSL output type",
                        "mandatory": false,
                        "field": "",
                        "default_value": "NIFTI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "NIFTI_PAIR",
                                "NIFTI_GZ",
                                "NIFTI_PAIR_GZ",
                                "GIFTI"
                            ]
                        ]
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "copes": {
                        "desc": "Contrast estimates for each contrast",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "varcopes": {
                        "desc": "Variance estimates for each contrast",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "zstats": {
                        "desc": "z-stat file for each contrast",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "tstats": {
                        "desc": "t-stat file for each contrast",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "fstats": {
                        "desc": "f-stat file for each contrast",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "zfstats": {
                        "desc": "z-stat file for each F contrast",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "neffs": {
                        "desc": "neff file ?? for each contrast",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "DualRegression": {
            "desc": "Wrapper Script for Dual Regression Workflow",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "in_files": {
                        "desc": "List all subjects' preprocessed, standard-space 4D datasets",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "Files",
                        "excludes": [],
                        "requires": []
                    },
                    "group_IC_maps_4D": {
                        "desc": "4D image containing spatial IC maps (melodic_IC) from the whole-group ICA analysis",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "des_norm": {
                        "desc": "Whether to variance-normalise the timecourses used as the stage-2 regressors; True is default and recommended",
                        "mandatory": false,
                        "field": "",
                        "default_value": true,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "one_sample_group_mean": {
                        "desc": "perform 1-sample group-mean test instead of generic permutation test",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "design_file": {
                        "desc": "Design matrix for final cross-subject modelling with randomise",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "con_file": {
                        "desc": "Design contrasts for final cross-subject modelling with randomise",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "n_perm": {
                        "desc": "Number of permutations for randomise; set to 1 for just raw tstat output, set to 0 to not run randomise at all.",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "out_dir": {
                        "desc": "This directory will be created to hold all output and logfiles",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "output_type": {
                        "desc": "FSL output type",
                        "mandatory": false,
                        "field": "",
                        "default_value": "NIFTI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "NIFTI_PAIR",
                                "NIFTI_GZ",
                                "NIFTI_PAIR_GZ",
                                "GIFTI"
                            ]
                        ]
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "out_dir": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "FEAT": {
            "desc": "Uses FSL feat to calculate first level stats",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "fsf_file": {
                        "desc": "File specifying the feat design spec file",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "output_type": {
                        "desc": "FSL output type",
                        "mandatory": false,
                        "field": "",
                        "default_value": "NIFTI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "NIFTI_PAIR",
                                "NIFTI_GZ",
                                "NIFTI_PAIR_GZ",
                                "GIFTI"
                            ]
                        ]
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "feat_dir": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "FEATModel": {
            "desc": "Uses FSL feat_model to generate design.mat files",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "fsf_file": {
                        "desc": "File specifying the feat design spec file",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "ev_files": {
                        "desc": "Event spec files generated by level1design",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "output_type": {
                        "desc": "FSL output type",
                        "mandatory": false,
                        "field": "",
                        "default_value": "NIFTI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "NIFTI_PAIR",
                                "NIFTI_GZ",
                                "NIFTI_PAIR_GZ",
                                "GIFTI"
                            ]
                        ]
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "design_file": {
                        "desc": "Mat file containing ascii matrix for design",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "design_image": {
                        "desc": "Graphical representation of design matrix",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "design_cov": {
                        "desc": "Graphical representation of design covariance",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "con_file": {
                        "desc": "Contrast file containing contrast vectors",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "fcon_file": {
                        "desc": "Contrast file containing contrast vectors",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "FEATRegister": {
            "desc": "Register feat directories to a specific standard",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "feat_dirs": {
                        "desc": "Lower level feat dirs",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "Files",
                        "excludes": [],
                        "requires": []
                    },
                    "reg_image": {
                        "desc": "image to register to (will be treated as standard)",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "reg_dof": {
                        "desc": "registration degrees of freedom",
                        "mandatory": false,
                        "field": "",
                        "default_value": 12,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "fsf_file": {
                        "desc": "FSL feat specification file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "FILMGLS": {
            "desc": "Use FSL film_gls command to fit a design matrix to voxel timeseries",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "in_file": {
                        "desc": "input data file",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "design_file": {
                        "desc": "design matrix file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "threshold": {
                        "desc": "threshold",
                        "mandatory": false,
                        "field": "",
                        "default_value": 1000.0,
                        "type": "Float",
                        "excludes": [],
                        "requires": [],
                        "value": null,
                        "low": 0.0,
                        "high": null
                    },
                    "smooth_autocorr": {
                        "desc": "Smooth auto corr estimates",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "mask_size": {
                        "desc": "susan mask size",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "brightness_threshold": {
                        "desc": "susan brightness threshold, otherwise it is estimated",
                        "mandatory": false,
                        "field": "",
                        "default_value": 0,
                        "type": "Integer",
                        "excludes": [],
                        "requires": [],
                        "value": null,
                        "low": 0,
                        "high": null
                    },
                    "full_data": {
                        "desc": "output full data",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "autocorr_estimate_only": {
                        "desc": "perform autocorrelation estimatation only",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "autocorr_estimate_only",
                            "fit_armodel",
                            "tukey_window",
                            "multitaper_product",
                            "use_pava",
                            "autocorr_noestimate"
                        ],
                        "requires": []
                    },
                    "fit_armodel": {
                        "desc": "fits autoregressive model - default is to use tukey with M=sqrt(numvols)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "autocorr_estimate_only",
                            "fit_armodel",
                            "tukey_window",
                            "multitaper_product",
                            "use_pava",
                            "autocorr_noestimate"
                        ],
                        "requires": []
                    },
                    "tukey_window": {
                        "desc": "tukey window size to estimate autocorr",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [
                            "autocorr_estimate_only",
                            "fit_armodel",
                            "tukey_window",
                            "multitaper_product",
                            "use_pava",
                            "autocorr_noestimate"
                        ],
                        "requires": []
                    },
                    "multitaper_product": {
                        "desc": "multitapering with slepian tapers and num is the time-bandwidth product",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [
                            "autocorr_estimate_only",
                            "fit_armodel",
                            "tukey_window",
                            "multitaper_product",
                            "use_pava",
                            "autocorr_noestimate"
                        ],
                        "requires": []
                    },
                    "use_pava": {
                        "desc": "estimates autocorr using PAVA",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "autocorr_noestimate": {
                        "desc": "do not estimate autocorrs",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "autocorr_estimate_only",
                            "fit_armodel",
                            "tukey_window",
                            "multitaper_product",
                            "use_pava",
                            "autocorr_noestimate"
                        ],
                        "requires": []
                    },
                    "output_pwdata": {
                        "desc": "output prewhitened data and average design matrix",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "results_dir": {
                        "desc": "directory to store results in",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "output_type": {
                        "desc": "FSL output type",
                        "mandatory": false,
                        "field": "",
                        "default_value": "NIFTI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "NIFTI_PAIR",
                                "NIFTI_GZ",
                                "NIFTI_PAIR_GZ",
                                "GIFTI"
                            ]
                        ]
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "param_estimates": {
                        "desc": "Parameter estimates for each column of the design matrix",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "residual4d": {
                        "desc": "Model fit residual mean-squared error for each time point",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "dof_file": {
                        "desc": "degrees of freedom",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "sigmasquareds": {
                        "desc": "summary of residuals, See Woolrich, et. al., 2001",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "results_dir": {
                        "desc": "directory storing model estimation output",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "corrections": {
                        "desc": "statistical corrections used within FILM modeling",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "thresholdac": {
                        "desc": "The FILM autocorrelation parameters",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "logfile": {
                        "desc": "FILM run logfile",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "FLAMEO": {
            "desc": "Use FSL flameo command to perform higher level model fits",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "cope_file": {
                        "desc": "cope regressor data file",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "var_cope_file": {
                        "desc": "varcope weightings data file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "dof_var_cope_file": {
                        "desc": "dof data file for varcope data",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "mask_file": {
                        "desc": "mask file",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "design_file": {
                        "desc": "design matrix file",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "t_con_file": {
                        "desc": "ascii matrix specifying t-contrasts",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "f_con_file": {
                        "desc": "ascii matrix specifying f-contrasts",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "cov_split_file": {
                        "desc": "ascii matrix specifying the groups the covariance is split into",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "run_mode": {
                        "desc": "inference to perform",
                        "mandatory": true,
                        "field": "",
                        "default_value": "fe",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "fe",
                                "ols",
                                "flame1",
                                "flame12"
                            ]
                        ]
                    },
                    "n_jumps": {
                        "desc": "number of jumps made by mcmc",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "burnin": {
                        "desc": "number of jumps at start of mcmc to be discarded",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "sample_every": {
                        "desc": "number of jumps for each sample",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "fix_mean": {
                        "desc": "fix mean for tfit",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "infer_outliers": {
                        "desc": "infer outliers - not for fe",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "no_pe_outputs": {
                        "desc": "do not output pe files",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "sigma_dofs": {
                        "desc": "sigma (in mm) to use for Gaussian smoothing the DOFs in FLAME 2. Default is 1mm, -1 indicates no smoothing",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "outlier_iter": {
                        "desc": "Number of max iterations to use when inferring outliers. Default is 12.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "log_dir": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "output_type": {
                        "desc": "FSL output type",
                        "mandatory": false,
                        "field": "",
                        "default_value": "NIFTI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "NIFTI_PAIR",
                                "NIFTI_GZ",
                                "NIFTI_PAIR_GZ",
                                "GIFTI"
                            ]
                        ]
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "pes": {
                        "desc": "Parameter estimates for each column of the design matrix for each voxel",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "res4d": {
                        "desc": "Model fit residual mean-squared error for each time point",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "copes": {
                        "desc": "Contrast estimates for each contrast",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "var_copes": {
                        "desc": "Variance estimates for each contrast",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "zstats": {
                        "desc": "z-stat file for each contrast",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "tstats": {
                        "desc": "t-stat file for each contrast",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "zfstats": {
                        "desc": "z stat file for each f contrast",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "fstats": {
                        "desc": "f-stat file for each contrast",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "mrefvars": {
                        "desc": "mean random effect variances for each contrast",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "tdof": {
                        "desc": "temporal dof file for each contrast",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "weights": {
                        "desc": "weights file for each contrast",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "stats_dir": {
                        "desc": "directory storing model estimation output",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "GLM": {
            "desc": "",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "in_file": {
                        "desc": "input file name (text matrix or 3D/4D image file)",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_file": {
                        "desc": "filename for GLM parameter estimates (GLM betas)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "design": {
                        "desc": "file name of the GLM design matrix (text time courses for temporal regression or an image file for spatial regression)",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "contrasts": {
                        "desc": "matrix of t-statics contrasts",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "mask": {
                        "desc": "mask image file name if input is image",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "dof": {
                        "desc": "set degrees of freedom explicitly",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "des_norm": {
                        "desc": "switch on normalization of the design matrix columns to unit std deviation",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "dat_norm": {
                        "desc": "switch on normalization of the data time series to unit std deviation",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "var_norm": {
                        "desc": "perform MELODIC variance-normalisation on data",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "demean": {
                        "desc": "switch on demeaining of design and data",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "out_cope": {
                        "desc": "output file name for COPE (either as txt or image",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_z_name": {
                        "desc": "output file name for Z-stats (either as txt or image",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_t_name": {
                        "desc": "output file name for t-stats (either as txt or image",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_p_name": {
                        "desc": "output file name for p-values of Z-stats (either as text file or image)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_f_name": {
                        "desc": "output file name for F-value of full model fit",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_pf_name": {
                        "desc": "output file name for p-value for full model fit",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_res_name": {
                        "desc": "output file name for residuals",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_varcb_name": {
                        "desc": "output file name for variance of COPEs",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_sigsq_name": {
                        "desc": "output file name for residual noise variance sigma-square",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_data_name": {
                        "desc": "output file name for pre-processed data",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_vnscales_name": {
                        "desc": "output file name for scaling factors for variance normalisation",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "output_type": {
                        "desc": "FSL output type",
                        "mandatory": false,
                        "field": "",
                        "default_value": "NIFTI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "NIFTI_PAIR",
                                "NIFTI_GZ",
                                "NIFTI_PAIR_GZ",
                                "GIFTI"
                            ]
                        ]
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "out_file": {
                        "desc": "file name of GLM parameters (if generated)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_cope": {
                        "desc": "output file name for COPEs (either as text file or image)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "out_z": {
                        "desc": "output file name for COPEs (either as text file or image)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "out_t": {
                        "desc": "output file name for t-stats (either as text file or image)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "out_p": {
                        "desc": "output file name for p-values of Z-stats (either as text file or image)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "out_f": {
                        "desc": "output file name for F-value of full model fit",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "out_pf": {
                        "desc": "output file name for p-value for full model fit",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "out_res": {
                        "desc": "output file name for residuals",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "out_varcb": {
                        "desc": "output file name for variance of COPEs",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "out_sigsq": {
                        "desc": "output file name for residual noise variance sigma-square",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "out_data": {
                        "desc": "output file for preprocessed data",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "out_vnscales": {
                        "desc": "output file name for scaling factors for variance normalisation",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "L2Model": {
            "desc": "Generate subject specific second level model",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "num_copes": {
                        "desc": "number of copes to be combined",
                        "mandatory": true,
                        "field": "",
                        "default_value": 1,
                        "type": "Integer",
                        "excludes": [],
                        "requires": [],
                        "value": null,
                        "low": 1,
                        "high": null
                    }
                },
                "output": {
                    "design_mat": {
                        "desc": "design matrix file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "design_con": {
                        "desc": "design contrast file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "design_grp": {
                        "desc": "design group file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "Level1Design": {
            "desc": "Generate FEAT specific files",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "interscan_interval": {
                        "desc": "Interscan  interval (in secs)",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "session_info": {
                        "desc": "Session specific information generated by ``modelgen.SpecifyModel``",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "bases": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported"
                    },
                    "orthogonalization": {
                        "desc": "which regressors to make orthogonal e.g., {1: {0:0,1:0,2:0}, 2: {0:1,1:1,2:0}} to make the second regressor in a 2-regressor model orthogonal to the first.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "model_serial_correlations": {
                        "desc": "Option to model serial correlations using an autoregressive estimator (order 1). Setting this option is only useful in the context of the fsf file. If you set this to False, you need to repeat this option for FILMGLS by setting autocorr_noestimate to True",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "contrasts": {
                        "desc": "List of contrasts with each contrast being a list of the form - [('name', 'stat', [condition list], [weight list], [session list])]. if session list is None or not provided, all sessions are used. For F contrasts, the condition list should contain previously defined T-contrasts.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "fsf_files": {
                        "desc": "FSL feat specification files",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "ev_files": {
                        "desc": "condition information files",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "MELODIC": {
            "desc": "Multivariate Exploratory Linear Optimised Decomposition into Independent",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "in_files": {
                        "desc": "input file names (either single file name or a list)",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "Files",
                        "excludes": [],
                        "requires": []
                    },
                    "out_dir": {
                        "desc": "output directory name",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "mask": {
                        "desc": "file name of mask for thresholding",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "no_mask": {
                        "desc": "switch off masking",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "update_mask": {
                        "desc": "switch off mask updating",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "no_bet": {
                        "desc": "switch off BET",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "bg_threshold": {
                        "desc": "brain/non-brain threshold used to mask non-brain voxels, as a percentage (only if --nobet selected)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "dim": {
                        "desc": "dimensionality reduction into #num dimensions (default: automatic estimation)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "dim_est": {
                        "desc": "use specific dim. estimation technique: lap, bic, mdl, aic, mean (default: lap)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "sep_whiten": {
                        "desc": "switch on separate whitening",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "sep_vn": {
                        "desc": "switch off joined variance normalization",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "migp": {
                        "desc": "switch on MIGP data reduction",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "migpN": {
                        "desc": "number of internal Eigenmaps",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "migp_shuffle": {
                        "desc": "randomise MIGP file order (default: TRUE)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "migp_factor": {
                        "desc": "Internal Factor of mem-threshold relative to number of Eigenmaps (default: 2)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "num_ICs": {
                        "desc": "number of IC's to extract (for deflation approach)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "approach": {
                        "desc": "approach for decomposition, 2D: defl, symm (default), 3D: tica (default), concat",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "non_linearity": {
                        "desc": "nonlinearity: gauss, tanh, pow3, pow4",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "var_norm": {
                        "desc": "switch off variance normalization",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "pbsc": {
                        "desc": "switch off conversion to percent BOLD signal change",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "cov_weight": {
                        "desc": "voxel-wise weights for the covariance matrix (e.g. segmentation information)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "epsilon": {
                        "desc": "minimum error change",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "epsilonS": {
                        "desc": "minimum error change for rank-1 approximation in TICA",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "maxit": {
                        "desc": "maximum number of iterations before restart",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "max_restart": {
                        "desc": "maximum number of restarts",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "mm_thresh": {
                        "desc": "threshold for Mixture Model based inference",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "no_mm": {
                        "desc": "switch off mixture modelling on IC maps",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "ICs": {
                        "desc": "filename of the IC components file for mixture modelling",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "mix": {
                        "desc": "mixing matrix for mixture modelling / filtering",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "smode": {
                        "desc": "matrix of session modes for report generation",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "rem_cmp": {
                        "desc": "component numbers to remove",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "report": {
                        "desc": "generate Melodic web report",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "bg_image": {
                        "desc": "specify background image for report (default: mean image)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "tr_sec": {
                        "desc": "TR in seconds",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "log_power": {
                        "desc": "calculate log of power for frequency spectrum",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "t_des": {
                        "desc": "design matrix across time-domain",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "t_con": {
                        "desc": "t-contrast matrix across time-domain",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "s_des": {
                        "desc": "design matrix across subject-domain",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "s_con": {
                        "desc": "t-contrast matrix across subject-domain",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "out_all": {
                        "desc": "output everything",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "out_unmix": {
                        "desc": "output unmixing matrix",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "out_stats": {
                        "desc": "output thresholded maps and probability maps",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "out_pca": {
                        "desc": "output PCA results",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "out_white": {
                        "desc": "output whitening/dewhitening matrices",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "out_orig": {
                        "desc": "output the original ICs",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "out_mean": {
                        "desc": "output mean volume",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "report_maps": {
                        "desc": "control string for spatial map images (see slicer)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "remove_deriv": {
                        "desc": "removes every second entry in paradigm file (EV derivatives)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "output_type": {
                        "desc": "FSL output type",
                        "mandatory": false,
                        "field": "",
                        "default_value": "NIFTI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "NIFTI_PAIR",
                                "NIFTI_GZ",
                                "NIFTI_PAIR_GZ",
                                "GIFTI"
                            ]
                        ]
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "out_dir": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "report_dir": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "MultipleRegressDesign": {
            "desc": "Generate multiple regression design",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "contrasts": {
                        "desc": "List of contrasts with each contrast being a list of the form - [('name', 'stat', [condition list], [weight list])]. if session list is None or not provided, all sessions are used. For F contrasts, the condition list should contain previously defined T-contrasts without any weight list.",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "regressors": {
                        "desc": "dictionary containing named lists of regressors",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "groups": {
                        "desc": "list of group identifiers (defaults to single group)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "design_mat": {
                        "desc": "design matrix file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "design_con": {
                        "desc": "design t-contrast file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "design_fts": {
                        "desc": "design f-contrast file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "design_grp": {
                        "desc": "design group file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "Randomise": {
            "desc": "FSL Randomise: feeds the 4D projected FA data into GLM",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "in_file": {
                        "desc": "4D input file",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "base_name": {
                        "desc": "the rootname that all generated files will have",
                        "mandatory": false,
                        "field": "",
                        "default_value": "randomise",
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "design_mat": {
                        "desc": "design matrix file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "tcon": {
                        "desc": "t contrasts file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "fcon": {
                        "desc": "f contrasts file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "mask": {
                        "desc": "mask image",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "x_block_labels": {
                        "desc": "exchangeability block labels file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "demean": {
                        "desc": "demean data temporally before model fitting",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "one_sample_group_mean": {
                        "desc": "perform 1-sample group-mean test instead of generic permutation test",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "show_total_perms": {
                        "desc": "print out how many unique permutations would be generated and exit",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "show_info_parallel_mode": {
                        "desc": "print out information required for parallel mode and exit",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "vox_p_values": {
                        "desc": "output voxelwise (corrected and uncorrected) p-value images",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "tfce": {
                        "desc": "carry out Threshold-Free Cluster Enhancement",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "tfce2D": {
                        "desc": "carry out Threshold-Free Cluster Enhancement with 2D optimisation",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "f_only": {
                        "desc": "calculate f-statistics only",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "raw_stats_imgs": {
                        "desc": "output raw ( unpermuted ) statistic images",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "p_vec_n_dist_files": {
                        "desc": "output permutation vector and null distribution text files",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "num_perm": {
                        "desc": "number of permutations (default 5000, set to 0 for exhaustive)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "seed": {
                        "desc": "specific integer seed for random number generator",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "var_smooth": {
                        "desc": "use variance smoothing (std is in mm)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "c_thresh": {
                        "desc": "carry out cluster-based thresholding",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "cm_thresh": {
                        "desc": "carry out cluster-mass-based thresholding",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "f_c_thresh": {
                        "desc": "carry out f cluster thresholding",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "f_cm_thresh": {
                        "desc": "carry out f cluster-mass thresholding",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "tfce_H": {
                        "desc": "TFCE height parameter (default=2)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "tfce_E": {
                        "desc": "TFCE extent parameter (default=0.5)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "tfce_C": {
                        "desc": "TFCE connectivity (6 or 26; default=6)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "output_type": {
                        "desc": "FSL output type",
                        "mandatory": false,
                        "field": "",
                        "default_value": "NIFTI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "NIFTI_PAIR",
                                "NIFTI_GZ",
                                "NIFTI_PAIR_GZ",
                                "GIFTI"
                            ]
                        ]
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "tstat_files": {
                        "desc": "t contrast raw statistic",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "fstat_files": {
                        "desc": "f contrast raw statistic",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "t_p_files": {
                        "desc": "f contrast uncorrected p values files",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "f_p_files": {
                        "desc": "f contrast uncorrected p values files",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "t_corrected_p_files": {
                        "desc": "t contrast FWE (Family-wise error) corrected p values files",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "f_corrected_p_files": {
                        "desc": "f contrast FWE (Family-wise error) corrected p values files",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "SMM": {
            "desc": "",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "spatial_data_file": {
                        "desc": "statistics spatial map",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "mask": {
                        "desc": "mask file",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "no_deactivation_class": {
                        "desc": "enforces no deactivation class",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "output_type": {
                        "desc": "FSL output type",
                        "mandatory": false,
                        "field": "",
                        "default_value": "NIFTI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "NIFTI_PAIR",
                                "NIFTI_GZ",
                                "NIFTI_PAIR_GZ",
                                "GIFTI"
                            ]
                        ]
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "null_p_map": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "activation_p_map": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "deactivation_p_map": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "SmoothEstimate": {
            "desc": "Estimates the smoothness of an image",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "dof": {
                        "desc": "number of degrees of freedom",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [
                            "zstat_file"
                        ],
                        "requires": []
                    },
                    "mask_file": {
                        "desc": "brain mask volume",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "residual_fit_file": {
                        "desc": "residual-fit image file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": [
                            "dof"
                        ]
                    },
                    "zstat_file": {
                        "desc": "zstat image file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [
                            "dof"
                        ],
                        "requires": []
                    },
                    "output_type": {
                        "desc": "FSL output type",
                        "mandatory": false,
                        "field": "",
                        "default_value": "NIFTI",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "NIFTI",
                                "NIFTI_PAIR",
                                "NIFTI_GZ",
                                "NIFTI_PAIR_GZ",
                                "GIFTI"
                            ]
                        ]
                    },
                    "args": {
                        "desc": "Additional parameters to the command",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "environ": {
                        "desc": "Environment variables",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "dlh": {
                        "desc": "smoothness estimate sqrt(det(Lambda))",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "volume": {
                        "desc": "number of voxels in mask",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "resels": {
                        "desc": "volume of resel, in voxels, defined as FWHM_x * FWHM_y * FWHM_z",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        }
    },
    "SPM_Preprocessing": {
        "ApplyDeformations": {
            "desc": "",
            "name": "defs",
            "partof": [],
            "features": {
                "input": {
                    "in_files": {
                        "desc": "",
                        "mandatory": true,
                        "field": "fnames",
                        "default_value": null,
                        "type": "Files",
                        "excludes": [],
                        "requires": []
                    },
                    "deformation_field": {
                        "desc": "",
                        "mandatory": true,
                        "field": "comp{1}.def",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "reference_volume": {
                        "desc": "",
                        "mandatory": true,
                        "field": "comp{2}.id.space",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "interp": {
                        "desc": "degree of b-spline used for interpolation",
                        "mandatory": false,
                        "field": "interp",
                        "default_value": 0,
                        "type": "Integer",
                        "excludes": [],
                        "requires": [],
                        "value": null,
                        "low": 0,
                        "high": 7
                    }
                },
                "output": {
                    "out_files": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "ApplyVDM": {
            "desc": "Use the fieldmap toolbox from spm to apply the voxel displacement map (VDM) to some epi files.",
            "name": "fieldmap",
            "partof": [],
            "features": {
                "input": {
                    "in_files": {
                        "desc": "list of filenames to apply the vdm to",
                        "mandatory": true,
                        "field": "data.scans",
                        "default_value": null,
                        "type": "Files",
                        "excludes": [],
                        "requires": []
                    },
                    "vdmfile": {
                        "desc": "Voxel displacement map to use",
                        "mandatory": true,
                        "field": "data.vdmfile",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "distortion_direction": {
                        "desc": "phase encode direction input data have been acquired with",
                        "mandatory": false,
                        "field": "roptions.pedir",
                        "default_value": 2,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "write_which": {
                        "desc": "If the first value is non-zero, reslice all images. If the second value is non-zero, reslice a mean image.",
                        "mandatory": false,
                        "field": "roptions.which",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "interpolation": {
                        "desc": "degree of b-spline used for interpolation",
                        "mandatory": false,
                        "field": "roptions.rinterp",
                        "default_value": 4,
                        "type": "Integer",
                        "excludes": [],
                        "requires": [],
                        "value": null,
                        "low": 0,
                        "high": 7
                    },
                    "write_wrap": {
                        "desc": "Check if interpolation should wrap in [x,y,z]",
                        "mandatory": false,
                        "field": "roptions.wrap",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "write_mask": {
                        "desc": "True/False mask time series images",
                        "mandatory": false,
                        "field": "roptions.mask",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "out_prefix": {
                        "desc": "fieldmap corrected output prefix",
                        "mandatory": false,
                        "field": "roptions.prefix",
                        "default_value": "u",
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "out_files": {
                        "desc": "These will be the fieldmap corrected files.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "mean_image": {
                        "desc": "Mean image",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "Coregister": {
            "desc": "Use spm_coreg for estimating cross-modality rigid body alignment",
            "name": "coreg",
            "partof": [],
            "features": {
                "input": {
                    "target": {
                        "desc": "reference file to register to",
                        "mandatory": true,
                        "field": "ref",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "source": {
                        "desc": "file to register to target",
                        "mandatory": true,
                        "field": "source",
                        "default_value": null,
                        "type": "Files",
                        "excludes": [],
                        "requires": []
                    },
                    "jobtype": {
                        "desc": "one of: estimate, write, estwrite",
                        "mandatory": false,
                        "field": "",
                        "default_value": "estwrite",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "estwrite",
                                "estimate",
                                "write"
                            ]
                        ]
                    },
                    "apply_to_files": {
                        "desc": "files to apply transformation to",
                        "mandatory": false,
                        "field": "other",
                        "default_value": null,
                        "type": "Files",
                        "excludes": [],
                        "requires": []
                    },
                    "cost_function": {
                        "desc": "cost function, one of:\n                    'mi' - Mutual Information,\n                    'nmi' - Normalised Mutual Information,\n                    'ecc' - Entropy Correlation Coefficient,\n                    'ncc' - Normalised Cross Correlation",
                        "mandatory": false,
                        "field": "eoptions.cost_fun",
                        "default_value": "mi",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "mi",
                                "nmi",
                                "ecc",
                                "ncc"
                            ]
                        ]
                    },
                    "fwhm": {
                        "desc": "gaussian smoothing kernel width (mm)",
                        "mandatory": false,
                        "field": "eoptions.fwhm",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "separation": {
                        "desc": "sampling separation in mm",
                        "mandatory": false,
                        "field": "eoptions.sep",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "tolerance": {
                        "desc": "acceptable tolerance for each of 12 params",
                        "mandatory": false,
                        "field": "eoptions.tol",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "write_interp": {
                        "desc": "degree of b-spline used for interpolation",
                        "mandatory": false,
                        "field": "roptions.interp",
                        "default_value": 0,
                        "type": "Integer",
                        "excludes": [],
                        "requires": [],
                        "value": null,
                        "low": 0,
                        "high": 7
                    },
                    "write_wrap": {
                        "desc": "Check if interpolation should wrap in [x,y,z]",
                        "mandatory": false,
                        "field": "roptions.wrap",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "write_mask": {
                        "desc": "True/False mask output image",
                        "mandatory": false,
                        "field": "roptions.mask",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "out_prefix": {
                        "desc": "coregistered output prefix",
                        "mandatory": false,
                        "field": "roptions.prefix",
                        "default_value": "r",
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "coregistered_source": {
                        "desc": "Coregistered source files",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "coregistered_files": {
                        "desc": "Coregistered other files",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "CreateWarped": {
            "desc": "Apply a flow field estimated by DARTEL to create warped images",
            "name": "dartel",
            "partof": [],
            "features": {
                "input": {
                    "image_files": {
                        "desc": "A list of files to be warped",
                        "mandatory": true,
                        "field": "crt_warped.images",
                        "default_value": null,
                        "type": "Files",
                        "excludes": [],
                        "requires": []
                    },
                    "flowfield_files": {
                        "desc": "DARTEL flow fields u_rc1*",
                        "mandatory": true,
                        "field": "crt_warped.flowfields",
                        "default_value": null,
                        "type": "Files",
                        "excludes": [],
                        "requires": []
                    },
                    "iterations": {
                        "desc": "The number of iterations: log2(number of time steps)",
                        "mandatory": false,
                        "field": "crt_warped.K",
                        "default_value": 0,
                        "type": "Integer",
                        "excludes": [],
                        "requires": [],
                        "value": null,
                        "low": 0,
                        "high": 9
                    },
                    "interp": {
                        "desc": "degree of b-spline used for interpolation",
                        "mandatory": false,
                        "field": "crt_warped.interp",
                        "default_value": 0,
                        "type": "Integer",
                        "excludes": [],
                        "requires": [],
                        "value": null,
                        "low": 0,
                        "high": 7
                    },
                    "modulate": {
                        "desc": "Modulate images",
                        "mandatory": false,
                        "field": "crt_warped.jactransf",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "warped_files": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "DARTEL": {
            "desc": "Use spm DARTEL to create a template and flow fields",
            "name": "dartel",
            "partof": [],
            "features": {
                "input": {
                    "image_files": {
                        "desc": "A list of files to be segmented",
                        "mandatory": true,
                        "field": "warp.images",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "template_prefix": {
                        "desc": "Prefix for template",
                        "mandatory": false,
                        "field": "warp.settings.template",
                        "default_value": "Template",
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "regularization_form": {
                        "desc": "Form of regularization energy term",
                        "mandatory": false,
                        "field": "warp.settings.rform",
                        "default_value": "Linear",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "Linear",
                                "Membrane",
                                "Bending"
                            ]
                        ]
                    },
                    "iteration_parameters": {
                        "desc": "List of tuples for each iteration\n\n  * Inner iterations\n  * Regularization parameters\n  * Time points for deformation model\n  * smoothing parameter\n\n",
                        "mandatory": false,
                        "field": "warp.settings.param",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "optimization_parameters": {
                        "desc": "Optimization settings a tuple:\n\n  * LM regularization\n  * cycles of multigrid solver\n  * relaxation iterations\n\n",
                        "mandatory": false,
                        "field": "warp.settings.optim",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "final_template_file": {
                        "desc": "final DARTEL template",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "template_files": {
                        "desc": "Templates from different stages of iteration",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "dartel_flow_fields": {
                        "desc": "DARTEL flow fields",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "DARTELNorm2MNI": {
            "desc": "Use spm DARTEL to normalize data to MNI space",
            "name": "dartel",
            "partof": [],
            "features": {
                "input": {
                    "template_file": {
                        "desc": "DARTEL template",
                        "mandatory": true,
                        "field": "mni_norm.template",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "flowfield_files": {
                        "desc": "DARTEL flow fields u_rc1*",
                        "mandatory": true,
                        "field": "mni_norm.data.subjs.flowfields",
                        "default_value": null,
                        "type": "Files",
                        "excludes": [],
                        "requires": []
                    },
                    "apply_to_files": {
                        "desc": "Files to apply the transform to",
                        "mandatory": true,
                        "field": "mni_norm.data.subjs.images",
                        "default_value": null,
                        "type": "Files",
                        "excludes": [],
                        "requires": []
                    },
                    "voxel_size": {
                        "desc": "Voxel sizes for output file",
                        "mandatory": false,
                        "field": "mni_norm.vox",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "bounding_box": {
                        "desc": "Voxel sizes for output file",
                        "mandatory": false,
                        "field": "mni_norm.bb",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "modulate": {
                        "desc": "Modulate out images - no modulation preserves concentrations",
                        "mandatory": false,
                        "field": "mni_norm.preserve",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "fwhm": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported"
                    }
                },
                "output": {
                    "normalized_files": {
                        "desc": "Normalized files in MNI space",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "normalization_parameter_file": {
                        "desc": "Transform parameters to MNI space",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "FieldMap": {
            "desc": "Use the fieldmap toolbox from spm to calculate the voxel displacement map (VDM).",
            "name": "fieldmap",
            "partof": [],
            "features": {
                "input": {
                    "jobtype": {
                        "desc": "Must be 'calculatevdm'; to apply VDM, use the ApplyVDM interface.",
                        "mandatory": false,
                        "field": "",
                        "default_value": "calculatevdm",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "calculatevdm"
                            ]
                        ]
                    },
                    "phase_file": {
                        "desc": "presubstracted phase file",
                        "mandatory": true,
                        "field": "subj.data.presubphasemag.phase",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "magnitude_file": {
                        "desc": "presubstracted magnitude file",
                        "mandatory": true,
                        "field": "subj.data.presubphasemag.magnitude",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "echo_times": {
                        "desc": "short and long echo times",
                        "mandatory": true,
                        "field": "subj.defaults.defaultsval.et",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "maskbrain": {
                        "desc": "masking or no masking of the brain",
                        "mandatory": false,
                        "field": "subj.defaults.defaultsval.maskbrain",
                        "default_value": true,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "blip_direction": {
                        "desc": "polarity of the phase-encode blips",
                        "mandatory": true,
                        "field": "subj.defaults.defaultsval.blipdir",
                        "default_value": 1,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                1,
                                -1
                            ]
                        ]
                    },
                    "total_readout_time": {
                        "desc": "total EPI readout time",
                        "mandatory": true,
                        "field": "subj.defaults.defaultsval.tert",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "epifm": {
                        "desc": "epi-based field map",
                        "mandatory": false,
                        "field": "subj.defaults.defaultsval.epifm",
                        "default_value": false,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "jacobian_modulation": {
                        "desc": "jacobian modulation",
                        "mandatory": false,
                        "field": "subj.defaults.defaultsval.ajm",
                        "default_value": false,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "method": {
                        "desc": "One of: Mark3D, Mark2D, Huttonish",
                        "mandatory": false,
                        "field": "subj.defaults.defaultsval.uflags.method",
                        "default_value": "Mark3D",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "Mark3D",
                                "Mark2D",
                                "Huttonish"
                            ]
                        ]
                    },
                    "unwarp_fwhm": {
                        "desc": "gaussian smoothing kernel width",
                        "mandatory": false,
                        "field": "subj.defaults.defaultsval.uflags.fwhm",
                        "default_value": 10,
                        "type": "Integer",
                        "excludes": [],
                        "requires": [],
                        "value": null,
                        "low": 0,
                        "high": null
                    },
                    "pad": {
                        "desc": "padding kernel width",
                        "mandatory": false,
                        "field": "subj.defaults.defaultsval.uflags.pad",
                        "default_value": 0,
                        "type": "Integer",
                        "excludes": [],
                        "requires": [],
                        "value": null,
                        "low": 0,
                        "high": null
                    },
                    "ws": {
                        "desc": "weighted smoothing",
                        "mandatory": false,
                        "field": "subj.defaults.defaultsval.uflags.ws",
                        "default_value": true,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "template": {
                        "desc": "template image for brain masking",
                        "mandatory": false,
                        "field": "subj.defaults.defaultsval.mflags.template",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "mask_fwhm": {
                        "desc": "gaussian smoothing kernel width",
                        "mandatory": false,
                        "field": "subj.defaults.defaultsval.mflags.fwhm",
                        "default_value": 5,
                        "type": "Integer",
                        "excludes": [],
                        "requires": [],
                        "value": null,
                        "low": 0,
                        "high": null
                    },
                    "nerode": {
                        "desc": "number of erosions",
                        "mandatory": false,
                        "field": "subj.defaults.defaultsval.mflags.nerode",
                        "default_value": 2,
                        "type": "Integer",
                        "excludes": [],
                        "requires": [],
                        "value": null,
                        "low": 0,
                        "high": null
                    },
                    "ndilate": {
                        "desc": "number of erosions",
                        "mandatory": false,
                        "field": "subj.defaults.defaultsval.mflags.ndilate",
                        "default_value": 4,
                        "type": "Integer",
                        "excludes": [],
                        "requires": [],
                        "value": null,
                        "low": 0,
                        "high": null
                    },
                    "thresh": {
                        "desc": "threshold used to create brain mask from segmented data",
                        "mandatory": false,
                        "field": "subj.defaults.defaultsval.mflags.thresh",
                        "default_value": 0.5,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "reg": {
                        "desc": "regularization value used in the segmentation",
                        "mandatory": false,
                        "field": "subj.defaults.defaultsval.mflags.reg",
                        "default_value": 0.02,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "epi_file": {
                        "desc": "EPI to unwarp",
                        "mandatory": true,
                        "field": "subj.session.epi",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "matchvdm": {
                        "desc": "match VDM to EPI",
                        "mandatory": false,
                        "field": "subj.matchvdm",
                        "default_value": true,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "sessname": {
                        "desc": "VDM filename extension",
                        "mandatory": false,
                        "field": "subj.sessname",
                        "default_value": "_run-",
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "writeunwarped": {
                        "desc": "write unwarped EPI",
                        "mandatory": false,
                        "field": "subj.writeunwarped",
                        "default_value": false,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "anat_file": {
                        "desc": "anatomical image for comparison",
                        "mandatory": false,
                        "field": "subj.anat",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "matchanat": {
                        "desc": "match anatomical image to EPI",
                        "mandatory": false,
                        "field": "subj.matchanat",
                        "default_value": true,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "vdm": {
                        "desc": "voxel difference map",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "MultiChannelNewSegment": {
            "desc": "Use spm_preproc8 (New Segment) to separate structural images into",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "channels": {
                        "desc": "A list of tuples (one per each channel) with the following fields:\n            - a list of channel files (only 1rst channel files will be segmented)\n            - a tuple with the following channel-specific info fields:\n              - bias reguralisation (0-10)\n              - FWHM of Gaussian smoothness of bias\n              - which maps to save (Field, Corrected) - a tuple of two boolean values",
                        "mandatory": false,
                        "field": "channel",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "tissues": {
                        "desc": "A list of tuples (one per tissue) with the following fields:\n            - tissue probability map (4D), 1-based index to frame\n            - number of gaussians\n            - which maps to save [Native, DARTEL] - a tuple of two boolean values\n            - which maps to save [Unmodulated, Modulated] - a tuple of two boolean values",
                        "mandatory": false,
                        "field": "tissue",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "affine_regularization": {
                        "desc": "mni, eastern, subj, none ",
                        "mandatory": false,
                        "field": "warp.affreg",
                        "default_value": "mni",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "mni",
                                "eastern",
                                "subj",
                                "none"
                            ]
                        ]
                    },
                    "warping_regularization": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported"
                    },
                    "sampling_distance": {
                        "desc": "Sampling distance on data for parameter estimation",
                        "mandatory": false,
                        "field": "warp.samp",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "write_deformation_fields": {
                        "desc": "Which deformation fields to write:[Inverse, Forward]",
                        "mandatory": false,
                        "field": "warp.write",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "native_class_images": {
                        "desc": "native space probability maps",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "dartel_input_images": {
                        "desc": "dartel imported class images",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "normalized_class_images": {
                        "desc": "normalized class images",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "modulated_class_images": {
                        "desc": "modulated+normalized class images",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "transformation_mat": {
                        "desc": "Normalization transformation",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "bias_corrected_images": {
                        "desc": "bias corrected images",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "bias_field_images": {
                        "desc": "bias field images",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "forward_deformation_field": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "inverse_deformation_field": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "NewSegment": {
            "desc": "Use spm_preproc8 (New Segment) to separate structural images into",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "channel_files": {
                        "desc": "A list of files to be segmented",
                        "mandatory": true,
                        "field": "channel",
                        "default_value": null,
                        "type": "Files",
                        "excludes": [],
                        "requires": []
                    },
                    "channel_info": {
                        "desc": "A tuple with the following fields:\n            - bias reguralisation (0-10)\n            - FWHM of Gaussian smoothness of bias\n            - which maps to save (Field, Corrected) - a tuple of two boolean values",
                        "mandatory": false,
                        "field": "channel",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "tissues": {
                        "desc": "A list of tuples (one per tissue) with the following fields:\n            - tissue probability map (4D), 1-based index to frame\n            - number of gaussians\n            - which maps to save [Native, DARTEL] - a tuple of two boolean values\n            - which maps to save [Unmodulated, Modulated] - a tuple of two boolean values",
                        "mandatory": false,
                        "field": "tissue",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "affine_regularization": {
                        "desc": "mni, eastern, subj, none ",
                        "mandatory": false,
                        "field": "warp.affreg",
                        "default_value": "mni",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "mni",
                                "eastern",
                                "subj",
                                "none"
                            ]
                        ]
                    },
                    "warping_regularization": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported"
                    },
                    "sampling_distance": {
                        "desc": "Sampling distance on data for parameter estimation",
                        "mandatory": false,
                        "field": "warp.samp",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "write_deformation_fields": {
                        "desc": "Which deformation fields to write:[Inverse, Forward]",
                        "mandatory": false,
                        "field": "warp.write",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "native_class_images": {
                        "desc": "native space probability maps",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "dartel_input_images": {
                        "desc": "dartel imported class images",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "normalized_class_images": {
                        "desc": "normalized class images",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "modulated_class_images": {
                        "desc": "modulated+normalized class images",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "transformation_mat": {
                        "desc": "Normalization transformation",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "bias_corrected_images": {
                        "desc": "bias corrected images",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "bias_field_images": {
                        "desc": "bias field images",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "forward_deformation_field": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "inverse_deformation_field": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "Normalize": {
            "desc": "use spm_normalise for warping an image to a template",
            "name": "normalise",
            "partof": [],
            "features": {
                "input": {
                    "template": {
                        "desc": "template file to normalize to",
                        "mandatory": true,
                        "field": "eoptions.template",
                        "default_value": null,
                        "type": "File",
                        "excludes": [
                            "parameter_file"
                        ],
                        "requires": []
                    },
                    "source": {
                        "desc": "file to normalize to template",
                        "mandatory": true,
                        "field": "subj.source",
                        "default_value": null,
                        "type": "Files",
                        "excludes": [
                            "parameter_file"
                        ],
                        "requires": []
                    },
                    "jobtype": {
                        "desc": "Estimate, Write or do both",
                        "mandatory": false,
                        "field": "",
                        "default_value": "estwrite",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "estwrite",
                                "est",
                                "write"
                            ]
                        ]
                    },
                    "apply_to_files": {
                        "desc": "files to apply transformation to",
                        "mandatory": false,
                        "field": "subj.resample",
                        "default_value": null,
                        "type": "Files",
                        "excludes": [],
                        "requires": []
                    },
                    "parameter_file": {
                        "desc": "normalization parameter file*_sn.mat",
                        "mandatory": true,
                        "field": "subj.matname",
                        "default_value": null,
                        "type": "File",
                        "excludes": [
                            "source",
                            "template"
                        ],
                        "requires": []
                    },
                    "source_weight": {
                        "desc": "name of weighting image for source",
                        "mandatory": false,
                        "field": "subj.wtsrc",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "template_weight": {
                        "desc": "name of weighting image for template",
                        "mandatory": false,
                        "field": "eoptions.weight",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "source_image_smoothing": {
                        "desc": "source smoothing",
                        "mandatory": false,
                        "field": "eoptions.smosrc",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "template_image_smoothing": {
                        "desc": "template smoothing",
                        "mandatory": false,
                        "field": "eoptions.smoref",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "affine_regularization_type": {
                        "desc": "mni, size, none",
                        "mandatory": false,
                        "field": "eoptions.regtype",
                        "default_value": "mni",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "mni",
                                "size",
                                "none"
                            ]
                        ]
                    },
                    "DCT_period_cutoff": {
                        "desc": "Cutoff of for DCT bases",
                        "mandatory": false,
                        "field": "eoptions.cutoff",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "nonlinear_iterations": {
                        "desc": "Number of iterations of nonlinear warping",
                        "mandatory": false,
                        "field": "eoptions.nits",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "nonlinear_regularization": {
                        "desc": "the amount of the regularization for the nonlinear part of the normalization",
                        "mandatory": false,
                        "field": "eoptions.reg",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "write_preserve": {
                        "desc": "True/False warped images are modulated",
                        "mandatory": false,
                        "field": "roptions.preserve",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "write_bounding_box": {
                        "desc": "3x2-element list of lists",
                        "mandatory": false,
                        "field": "roptions.bb",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "write_voxel_sizes": {
                        "desc": "3-element list",
                        "mandatory": false,
                        "field": "roptions.vox",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "write_interp": {
                        "desc": "degree of b-spline used for interpolation",
                        "mandatory": false,
                        "field": "roptions.interp",
                        "default_value": 0,
                        "type": "Integer",
                        "excludes": [],
                        "requires": [],
                        "value": null,
                        "low": 0,
                        "high": 7
                    },
                    "write_wrap": {
                        "desc": "Check if interpolation should wrap in [x,y,z] - list of bools",
                        "mandatory": false,
                        "field": "roptions.wrap",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "out_prefix": {
                        "desc": "normalized output prefix",
                        "mandatory": false,
                        "field": "roptions.prefix",
                        "default_value": "w",
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "normalization_parameters": {
                        "desc": "MAT files containing the normalization parameters",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "normalized_source": {
                        "desc": "Normalized source files",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "normalized_files": {
                        "desc": "Normalized other files",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "Normalize12": {
            "desc": "uses SPM12's new Normalise routine for warping an image to a template.",
            "name": "normalise",
            "partof": [],
            "features": {
                "input": {
                    "image_to_align": {
                        "desc": "file to estimate normalization parameters with",
                        "mandatory": true,
                        "field": "subj.vol",
                        "default_value": null,
                        "type": "File",
                        "excludes": [
                            "deformation_file"
                        ],
                        "requires": []
                    },
                    "apply_to_files": {
                        "desc": "files to apply transformation to",
                        "mandatory": false,
                        "field": "subj.resample",
                        "default_value": null,
                        "type": "Files",
                        "excludes": [],
                        "requires": []
                    },
                    "deformation_file": {
                        "desc": "file y_*.nii containing 3 deformation fields for the deformation in x, y and z dimension",
                        "mandatory": true,
                        "field": "subj.def",
                        "default_value": null,
                        "type": "File",
                        "excludes": [
                            "image_to_align",
                            "tpm"
                        ],
                        "requires": []
                    },
                    "jobtype": {
                        "desc": "Estimate, Write or do Both",
                        "mandatory": false,
                        "field": "",
                        "default_value": "estwrite",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "estwrite",
                                "est",
                                "write"
                            ]
                        ]
                    },
                    "bias_regularization": {
                        "desc": "no(0) - extremely heavy (10)",
                        "mandatory": false,
                        "field": "eoptions.biasreg",
                        "default_value": 0,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                0,
                                1e-05,
                                0.0001,
                                0.001,
                                0.01,
                                0.1,
                                1,
                                10
                            ]
                        ]
                    },
                    "bias_fwhm": {
                        "desc": "FWHM of Gaussian smoothness of bias",
                        "mandatory": false,
                        "field": "eoptions.biasfwhm",
                        "default_value": 30,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                30,
                                40,
                                50,
                                60,
                                70,
                                80,
                                90,
                                100,
                                110,
                                120,
                                130,
                                140,
                                150,
                                "Inf"
                            ]
                        ]
                    },
                    "tpm": {
                        "desc": "template in form of tissue probablitiy maps to normalize to",
                        "mandatory": false,
                        "field": "eoptions.tpm",
                        "default_value": null,
                        "type": "File",
                        "excludes": [
                            "deformation_file"
                        ],
                        "requires": []
                    },
                    "affine_regularization_type": {
                        "desc": "mni, size, none",
                        "mandatory": false,
                        "field": "eoptions.affreg",
                        "default_value": "mni",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "mni",
                                "size",
                                "none"
                            ]
                        ]
                    },
                    "warping_regularization": {
                        "desc": "controls balance between parameters and data",
                        "mandatory": false,
                        "field": "eoptions.reg",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "smoothness": {
                        "desc": "value (in mm) to smooth the data before normalization",
                        "mandatory": false,
                        "field": "eoptions.fwhm",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "sampling_distance": {
                        "desc": "Sampling distance on data for parameter estimation",
                        "mandatory": false,
                        "field": "eoptions.samp",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "write_bounding_box": {
                        "desc": "3x2-element list of lists representing the bounding box (in mm) to be written",
                        "mandatory": false,
                        "field": "woptions.bb",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "write_voxel_sizes": {
                        "desc": "3-element list representing the voxel sizes (in mm) of the written normalised images",
                        "mandatory": false,
                        "field": "woptions.vox",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "write_interp": {
                        "desc": "degree of b-spline used for interpolation",
                        "mandatory": false,
                        "field": "woptions.interp",
                        "default_value": 0,
                        "type": "Integer",
                        "excludes": [],
                        "requires": [],
                        "value": null,
                        "low": 0,
                        "high": 7
                    },
                    "out_prefix": {
                        "desc": "Normalized output prefix",
                        "mandatory": false,
                        "field": "woptions.prefix",
                        "default_value": "w",
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "deformation_field": {
                        "desc": "NIfTI file containing 3 deformation fields for the deformation in x, y and z dimension",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "normalized_image": {
                        "desc": "Normalized file that needed to be aligned",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "normalized_files": {
                        "desc": "Normalized other files",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "Realign": {
            "desc": "Use spm_realign for estimating within modality rigid body alignment",
            "name": "realign",
            "partof": [],
            "features": {
                "input": {
                    "in_files": {
                        "desc": "list of filenames to realign",
                        "mandatory": true,
                        "field": "data",
                        "default_value": null,
                        "type": "Files",
                        "excludes": [],
                        "requires": []
                    },
                    "jobtype": {
                        "desc": "one of: estimate, write, estwrite",
                        "mandatory": false,
                        "field": "",
                        "default_value": "estwrite",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "estwrite",
                                "estimate",
                                "write"
                            ]
                        ]
                    },
                    "quality": {
                        "desc": "0.1 = fast, 1.0 = precise",
                        "mandatory": false,
                        "field": "eoptions.quality",
                        "default_value": 0.0,
                        "type": "Float",
                        "excludes": [],
                        "requires": [],
                        "value": null,
                        "low": 0.0,
                        "high": 1.0
                    },
                    "fwhm": {
                        "desc": "gaussian smoothing kernel width",
                        "mandatory": false,
                        "field": "eoptions.fwhm",
                        "default_value": 0.0,
                        "type": "Float",
                        "excludes": [],
                        "requires": [],
                        "value": null,
                        "low": 0.0,
                        "high": null
                    },
                    "separation": {
                        "desc": "sampling separation in mm",
                        "mandatory": false,
                        "field": "eoptions.sep",
                        "default_value": 0.0,
                        "type": "Float",
                        "excludes": [],
                        "requires": [],
                        "value": null,
                        "low": 0.0,
                        "high": null
                    },
                    "register_to_mean": {
                        "desc": "Indicate whether realignment is done to the mean image",
                        "mandatory": false,
                        "field": "eoptions.rtm",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "weight_img": {
                        "desc": "filename of weighting image",
                        "mandatory": false,
                        "field": "eoptions.weight",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "interp": {
                        "desc": "degree of b-spline used for interpolation",
                        "mandatory": false,
                        "field": "eoptions.interp",
                        "default_value": 0,
                        "type": "Integer",
                        "excludes": [],
                        "requires": [],
                        "value": null,
                        "low": 0,
                        "high": 7
                    },
                    "wrap": {
                        "desc": "Check if interpolation should wrap in [x,y,z]",
                        "mandatory": false,
                        "field": "eoptions.wrap",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "write_which": {
                        "desc": "determines which images to reslice",
                        "mandatory": false,
                        "field": "roptions.which",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "write_interp": {
                        "desc": "degree of b-spline used for interpolation",
                        "mandatory": false,
                        "field": "roptions.interp",
                        "default_value": 0,
                        "type": "Integer",
                        "excludes": [],
                        "requires": [],
                        "value": null,
                        "low": 0,
                        "high": 7
                    },
                    "write_wrap": {
                        "desc": "Check if interpolation should wrap in [x,y,z]",
                        "mandatory": false,
                        "field": "roptions.wrap",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "write_mask": {
                        "desc": "True/False mask output image",
                        "mandatory": false,
                        "field": "roptions.mask",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "out_prefix": {
                        "desc": "realigned output prefix",
                        "mandatory": false,
                        "field": "roptions.prefix",
                        "default_value": "r",
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "mean_image": {
                        "desc": "Mean image file from the realignment",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "modified_in_files": {
                        "desc": "Copies of all files passed to in_files. Headers will have been modified to align all images with the first, or optionally to first do that, extract a mean image, and re-align to that mean image.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "realigned_files": {
                        "desc": "If jobtype is write or estwrite, these will be the resliced files. Otherwise, they will be copies of in_files that have had their headers rewritten.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "realignment_parameters": {
                        "desc": "Estimated translation and rotation parameters",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "RealignUnwarp": {
            "desc": "Use spm_uw_estimate for estimating within subject registration and unwarping",
            "name": "realignunwarp",
            "partof": [],
            "features": {
                "input": {
                    "in_files": {
                        "desc": "list of filenames to realign and unwarp",
                        "mandatory": true,
                        "field": "data.scans",
                        "default_value": null,
                        "type": "Files",
                        "excludes": [],
                        "requires": []
                    },
                    "phase_map": {
                        "desc": "Voxel displacement map to use in unwarping. Unlike SPM standard behaviour, the same map will be used for all sessions",
                        "mandatory": false,
                        "field": "data.pmscan",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "quality": {
                        "desc": "0.1 = fast, 1.0 = precise",
                        "mandatory": false,
                        "field": "eoptions.quality",
                        "default_value": 0.0,
                        "type": "Float",
                        "excludes": [],
                        "requires": [],
                        "value": null,
                        "low": 0.0,
                        "high": 1.0
                    },
                    "fwhm": {
                        "desc": "gaussian smoothing kernel width",
                        "mandatory": false,
                        "field": "eoptions.fwhm",
                        "default_value": 0.0,
                        "type": "Float",
                        "excludes": [],
                        "requires": [],
                        "value": null,
                        "low": 0.0,
                        "high": null
                    },
                    "separation": {
                        "desc": "sampling separation in mm",
                        "mandatory": false,
                        "field": "eoptions.sep",
                        "default_value": 0.0,
                        "type": "Float",
                        "excludes": [],
                        "requires": [],
                        "value": null,
                        "low": 0.0,
                        "high": null
                    },
                    "register_to_mean": {
                        "desc": "Indicate whether realignment is done to the mean image",
                        "mandatory": false,
                        "field": "eoptions.rtm",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "weight_img": {
                        "desc": "filename of weighting image",
                        "mandatory": false,
                        "field": "eoptions.weight",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "interp": {
                        "desc": "degree of b-spline used for interpolation",
                        "mandatory": false,
                        "field": "eoptions.einterp",
                        "default_value": 0,
                        "type": "Integer",
                        "excludes": [],
                        "requires": [],
                        "value": null,
                        "low": 0,
                        "high": 7
                    },
                    "wrap": {
                        "desc": "Check if interpolation should wrap in [x,y,z]",
                        "mandatory": false,
                        "field": "eoptions.ewrap",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "est_basis_func": {
                        "desc": "Number of basis functions to use for each dimension",
                        "mandatory": false,
                        "field": "uweoptions.basfcn",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "est_reg_order": {
                        "desc": "This parameter determines how to balance the compromise between likelihood maximization and smoothness maximization of the estimated field.",
                        "mandatory": false,
                        "field": "uweoptions.regorder",
                        "default_value": 0,
                        "type": "Integer",
                        "excludes": [],
                        "requires": [],
                        "value": null,
                        "low": 0,
                        "high": 3
                    },
                    "est_reg_factor": {
                        "desc": "Regularisation factor. Default: 100000 (medium).",
                        "mandatory": false,
                        "field": "uweoptions.lambda",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "est_jacobian_deformations": {
                        "desc": "Jacobian deformations. In theory a good idea to include them,  in practice a bad idea. Default: No.",
                        "mandatory": false,
                        "field": "uweoptions.jm",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "est_first_order_effects": {
                        "desc": "First order effects should only depend on pitch and roll, i.e. [4 5]",
                        "mandatory": false,
                        "field": "uweoptions.fot",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "est_second_order_effects": {
                        "desc": "List of second order terms to model second derivatives of.",
                        "mandatory": false,
                        "field": "uweoptions.sot",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "est_unwarp_fwhm": {
                        "desc": "gaussian smoothing kernel width for unwarp",
                        "mandatory": false,
                        "field": "uweoptions.uwfwhm",
                        "default_value": 0.0,
                        "type": "Float",
                        "excludes": [],
                        "requires": [],
                        "value": null,
                        "low": 0.0,
                        "high": null
                    },
                    "est_re_est_mov_par": {
                        "desc": "Re-estimate movement parameters at each unwarping iteration.",
                        "mandatory": false,
                        "field": "uweoptions.rem",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "est_num_of_iterations": {
                        "desc": "Number of iterations.",
                        "mandatory": false,
                        "field": "uweoptions.noi",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "est_taylor_expansion_point": {
                        "desc": "Point in position space to perform Taylor-expansion around.",
                        "mandatory": false,
                        "field": "uweoptions.expround",
                        "default_value": "Average",
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    },
                    "reslice_which": {
                        "desc": "determines which images to reslice",
                        "mandatory": false,
                        "field": "uwroptions.uwwhich",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "reslice_interp": {
                        "desc": "degree of b-spline used for interpolation",
                        "mandatory": false,
                        "field": "uwroptions.rinterp",
                        "default_value": 0,
                        "type": "Integer",
                        "excludes": [],
                        "requires": [],
                        "value": null,
                        "low": 0,
                        "high": 7
                    },
                    "reslice_wrap": {
                        "desc": "Check if interpolation should wrap in [x,y,z]",
                        "mandatory": false,
                        "field": "uwroptions.wrap",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "reslice_mask": {
                        "desc": "True/False mask output image",
                        "mandatory": false,
                        "field": "uwroptions.mask",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "out_prefix": {
                        "desc": "realigned and unwarped output prefix",
                        "mandatory": false,
                        "field": "uwroptions.prefix",
                        "default_value": "u",
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "mean_image": {
                        "desc": "Mean image file from the realignment & unwarping",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "modified_in_files": {
                        "desc": "Copies of all files passed to in_files. Headers will have been modified to align all images with the first, or optionally to first do that, extract a mean image, and re-align to that mean image.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "realigned_unwarped_files": {
                        "desc": "Realigned and unwarped files written to disc.",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "realignment_parameters": {
                        "desc": "Estimated translation and rotation parameters",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "Segment": {
            "desc": "use spm_segment to separate structural images into different",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "data": {
                        "desc": "one scan per subject",
                        "mandatory": true,
                        "field": "data",
                        "default_value": null,
                        "type": "Files",
                        "excludes": [],
                        "requires": []
                    },
                    "gm_output_type": {
                        "desc": "Options to produce grey matter images: c1*.img, wc1*.img and mwc1*.img.\n            None: [False,False,False],\n            Native Space: [False,False,True],\n            Unmodulated Normalised: [False,True,False],\n            Modulated Normalised: [True,False,False],\n            Native + Unmodulated Normalised: [False,True,True],\n            Native + Modulated Normalised: [True,False,True],\n            Native + Modulated + Unmodulated: [True,True,True],\n            Modulated + Unmodulated Normalised: [True,True,False]",
                        "mandatory": false,
                        "field": "output.GM",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "wm_output_type": {
                        "desc": "\n            Options to produce white matter images: c2*.img, wc2*.img and mwc2*.img.\n            None: [False,False,False],\n            Native Space: [False,False,True],\n            Unmodulated Normalised: [False,True,False],\n            Modulated Normalised: [True,False,False],\n            Native + Unmodulated Normalised: [False,True,True],\n            Native + Modulated Normalised: [True,False,True],\n            Native + Modulated + Unmodulated: [True,True,True],\n            Modulated + Unmodulated Normalised: [True,True,False]",
                        "mandatory": false,
                        "field": "output.WM",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "csf_output_type": {
                        "desc": "\n            Options to produce CSF images: c3*.img, wc3*.img and mwc3*.img.\n            None: [False,False,False],\n            Native Space: [False,False,True],\n            Unmodulated Normalised: [False,True,False],\n            Modulated Normalised: [True,False,False],\n            Native + Unmodulated Normalised: [False,True,True],\n            Native + Modulated Normalised: [True,False,True],\n            Native + Modulated + Unmodulated: [True,True,True],\n            Modulated + Unmodulated Normalised: [True,True,False]",
                        "mandatory": false,
                        "field": "output.CSF",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "save_bias_corrected": {
                        "desc": "True/False produce a bias corrected image",
                        "mandatory": false,
                        "field": "output.biascor",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "clean_masks": {
                        "desc": "clean using estimated brain mask ('no','light','thorough')",
                        "mandatory": false,
                        "field": "output.cleanup",
                        "default_value": "no",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "no",
                                "light",
                                "thorough"
                            ]
                        ]
                    },
                    "tissue_prob_maps": {
                        "desc": "list of gray, white & csf prob. (opt,)",
                        "mandatory": false,
                        "field": "opts.tpm",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "gaussians_per_class": {
                        "desc": "num Gaussians capture intensity distribution",
                        "mandatory": false,
                        "field": "opts.ngaus",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "affine_regularization": {
                        "desc": "Possible options: \"mni\", \"eastern\", \"subj\", \"none\" (no reguralisation), \"\" (no affine registration)",
                        "mandatory": false,
                        "field": "opts.regtype",
                        "default_value": "mni",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "mni",
                                "eastern",
                                "subj",
                                "none",
                                ""
                            ]
                        ]
                    },
                    "warping_regularization": {
                        "desc": "Controls balance between parameters and data",
                        "mandatory": false,
                        "field": "opts.warpreg",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "warp_frequency_cutoff": {
                        "desc": "Cutoff of DCT bases",
                        "mandatory": false,
                        "field": "opts.warpco",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "bias_regularization": {
                        "desc": "no(0) - extremely heavy (10)",
                        "mandatory": false,
                        "field": "opts.biasreg",
                        "default_value": 0,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                0,
                                1e-05,
                                0.0001,
                                0.001,
                                0.01,
                                0.1,
                                1,
                                10
                            ]
                        ]
                    },
                    "bias_fwhm": {
                        "desc": "FWHM of Gaussian smoothness of bias",
                        "mandatory": false,
                        "field": "opts.biasfwhm",
                        "default_value": 30,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                30,
                                40,
                                50,
                                60,
                                70,
                                80,
                                90,
                                100,
                                110,
                                120,
                                130,
                                "Inf"
                            ]
                        ]
                    },
                    "sampling_distance": {
                        "desc": "Sampling distance on data for parameter estimation",
                        "mandatory": false,
                        "field": "opts.samp",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "mask_image": {
                        "desc": "Binary image to restrict parameter estimation ",
                        "mandatory": false,
                        "field": "opts.msk",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "native_gm_image": {
                        "desc": "native space grey probability map",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "normalized_gm_image": {
                        "desc": "normalized grey probability map",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "modulated_gm_image": {
                        "desc": "modulated, normalized grey probability map",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "native_wm_image": {
                        "desc": "native space white probability map",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "normalized_wm_image": {
                        "desc": "normalized white probability map",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "modulated_wm_image": {
                        "desc": "modulated, normalized white probability map",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "native_csf_image": {
                        "desc": "native space csf probability map",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "normalized_csf_image": {
                        "desc": "normalized csf probability map",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "modulated_csf_image": {
                        "desc": "modulated, normalized csf probability map",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "modulated_input_image": {
                        "desc": "bias-corrected version of input image",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "bias_corrected_image": {
                        "desc": "bias-corrected version of input image",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "transformation_mat": {
                        "desc": "Normalization transformation",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "inverse_transformation_mat": {
                        "desc": "Inverse normalization info",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "SliceTiming": {
            "desc": "Use spm to perform slice timing correction.",
            "name": "st",
            "partof": [],
            "features": {
                "input": {
                    "in_files": {
                        "desc": "list of filenames to apply slice timing",
                        "mandatory": true,
                        "field": "scans",
                        "default_value": null,
                        "type": "Files",
                        "excludes": [],
                        "requires": []
                    },
                    "num_slices": {
                        "desc": "number of slices in a volume",
                        "mandatory": true,
                        "field": "nslices",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "time_repetition": {
                        "desc": "time between volume acquisitions (start to start time)",
                        "mandatory": true,
                        "field": "tr",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "time_acquisition": {
                        "desc": "time of volume acquisition. usually calculated as TR-(TR/num_slices)",
                        "mandatory": true,
                        "field": "ta",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "slice_order": {
                        "desc": "1-based order or onset (in ms) in which slices are acquired",
                        "mandatory": true,
                        "field": "so",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "ref_slice": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported"
                    },
                    "out_prefix": {
                        "desc": "slicetimed output prefix",
                        "mandatory": false,
                        "field": "prefix",
                        "default_value": "a",
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "timecorrected_files": {
                        "desc": "slice time corrected files",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "Smooth": {
            "desc": "Use spm_smooth for 3D Gaussian smoothing of image volumes.",
            "name": "smooth",
            "partof": [],
            "features": {
                "input": {
                    "in_files": {
                        "desc": "list of files to smooth",
                        "mandatory": true,
                        "field": "data",
                        "default_value": null,
                        "type": "Files",
                        "excludes": [],
                        "requires": []
                    },
                    "fwhm": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported"
                    },
                    "data_type": {
                        "desc": "Data type of the output images",
                        "mandatory": false,
                        "field": "dtype",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "implicit_masking": {
                        "desc": "A mask implied by a particular voxel value",
                        "mandatory": false,
                        "field": "im",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "out_prefix": {
                        "desc": "smoothed output prefix",
                        "mandatory": false,
                        "field": "prefix",
                        "default_value": "s",
                        "type": "String",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "smoothed_files": {
                        "desc": "smoothed files",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "VBMSegment": {
            "desc": "Use VBM8 toolbox to separate structural images into different",
            "name": "vbm8",
            "partof": [],
            "features": {
                "input": {
                    "in_files": {
                        "desc": "A list of files to be segmented",
                        "mandatory": true,
                        "field": "estwrite.data",
                        "default_value": null,
                        "type": "Files",
                        "excludes": [],
                        "requires": []
                    },
                    "tissues": {
                        "desc": "tissue probability map",
                        "mandatory": false,
                        "field": "estwrite.tpm",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "gaussians_per_class": {
                        "desc": "number of gaussians for each tissue class",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "bias_regularization": {
                        "desc": "no(0) - extremely heavy (10)",
                        "mandatory": false,
                        "field": "estwrite.opts.biasreg",
                        "default_value": 0.0001,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                0,
                                1e-05,
                                0.0001,
                                0.001,
                                0.01,
                                0.1,
                                1,
                                10
                            ]
                        ]
                    },
                    "bias_fwhm": {
                        "desc": "FWHM of Gaussian smoothness of bias",
                        "mandatory": false,
                        "field": "estwrite.opts.biasfwhm",
                        "default_value": 60,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                30,
                                40,
                                50,
                                60,
                                70,
                                80,
                                90,
                                100,
                                110,
                                120,
                                130,
                                "Inf"
                            ]
                        ]
                    },
                    "sampling_distance": {
                        "desc": "Sampling distance on data for parameter estimation",
                        "mandatory": false,
                        "field": "estwrite.opts.samp",
                        "default_value": 3,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "warping_regularization": {
                        "desc": "Controls balance between parameters and data",
                        "mandatory": false,
                        "field": "estwrite.opts.warpreg",
                        "default_value": 4,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "spatial_normalization": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": "high",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "high",
                                "low"
                            ]
                        ]
                    },
                    "dartel_template": {
                        "desc": "",
                        "mandatory": false,
                        "field": "estwrite.extopts.dartelwarp.normhigh.darteltpm",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "use_sanlm_denoising_filter": {
                        "desc": "0=No denoising, 1=denoising,2=denoising multi-threaded",
                        "mandatory": false,
                        "field": "estwrite.extopts.sanlm",
                        "default_value": 2,
                        "type": "Integer",
                        "excludes": [],
                        "requires": [],
                        "value": null,
                        "low": 0,
                        "high": 2
                    },
                    "mrf_weighting": {
                        "desc": "",
                        "mandatory": false,
                        "field": "estwrite.extopts.mrf",
                        "default_value": 0.15,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "cleanup_partitions": {
                        "desc": "0=None,1=light,2=thorough",
                        "mandatory": false,
                        "field": "estwrite.extopts.cleanup",
                        "default_value": 1,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "display_results": {
                        "desc": "",
                        "mandatory": false,
                        "field": "estwrite.extopts.print",
                        "default_value": true,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "gm_native": {
                        "desc": "",
                        "mandatory": false,
                        "field": "estwrite.output.GM.native",
                        "default_value": false,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "gm_normalized": {
                        "desc": "",
                        "mandatory": false,
                        "field": "estwrite.output.GM.warped",
                        "default_value": false,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "gm_modulated_normalized": {
                        "desc": "0=none,1=affine+non-linear(SPM8 default),2=non-linear only",
                        "mandatory": false,
                        "field": "estwrite.output.GM.modulated",
                        "default_value": 2,
                        "type": "Integer",
                        "excludes": [],
                        "requires": [],
                        "value": null,
                        "low": 0,
                        "high": 2
                    },
                    "gm_dartel": {
                        "desc": "0=None,1=rigid(SPM8 default),2=affine",
                        "mandatory": false,
                        "field": "estwrite.output.GM.dartel",
                        "default_value": 0,
                        "type": "Integer",
                        "excludes": [],
                        "requires": [],
                        "value": null,
                        "low": 0,
                        "high": 2
                    },
                    "wm_native": {
                        "desc": "",
                        "mandatory": false,
                        "field": "estwrite.output.WM.native",
                        "default_value": false,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "wm_normalized": {
                        "desc": "",
                        "mandatory": false,
                        "field": "estwrite.output.WM.warped",
                        "default_value": false,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "wm_modulated_normalized": {
                        "desc": "0=none,1=affine+non-linear(SPM8 default),2=non-linear only",
                        "mandatory": false,
                        "field": "estwrite.output.WM.modulated",
                        "default_value": 2,
                        "type": "Integer",
                        "excludes": [],
                        "requires": [],
                        "value": null,
                        "low": 0,
                        "high": 2
                    },
                    "wm_dartel": {
                        "desc": "0=None,1=rigid(SPM8 default),2=affine",
                        "mandatory": false,
                        "field": "estwrite.output.WM.dartel",
                        "default_value": 0,
                        "type": "Integer",
                        "excludes": [],
                        "requires": [],
                        "value": null,
                        "low": 0,
                        "high": 2
                    },
                    "csf_native": {
                        "desc": "",
                        "mandatory": false,
                        "field": "estwrite.output.CSF.native",
                        "default_value": false,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "csf_normalized": {
                        "desc": "",
                        "mandatory": false,
                        "field": "estwrite.output.CSF.warped",
                        "default_value": false,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "csf_modulated_normalized": {
                        "desc": "0=none,1=affine+non-linear(SPM8 default),2=non-linear only",
                        "mandatory": false,
                        "field": "estwrite.output.CSF.modulated",
                        "default_value": 2,
                        "type": "Integer",
                        "excludes": [],
                        "requires": [],
                        "value": null,
                        "low": 0,
                        "high": 2
                    },
                    "csf_dartel": {
                        "desc": "0=None,1=rigid(SPM8 default),2=affine",
                        "mandatory": false,
                        "field": "estwrite.output.CSF.dartel",
                        "default_value": 0,
                        "type": "Integer",
                        "excludes": [],
                        "requires": [],
                        "value": null,
                        "low": 0,
                        "high": 2
                    },
                    "bias_corrected_native": {
                        "desc": "",
                        "mandatory": false,
                        "field": "estwrite.output.bias.native",
                        "default_value": false,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "bias_corrected_normalized": {
                        "desc": "",
                        "mandatory": false,
                        "field": "estwrite.output.bias.warped",
                        "default_value": true,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "bias_corrected_affine": {
                        "desc": "",
                        "mandatory": false,
                        "field": "estwrite.output.bias.affine",
                        "default_value": false,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "pve_label_native": {
                        "desc": "",
                        "mandatory": false,
                        "field": "estwrite.output.label.native",
                        "default_value": false,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "pve_label_normalized": {
                        "desc": "",
                        "mandatory": false,
                        "field": "estwrite.output.label.warped",
                        "default_value": false,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "pve_label_dartel": {
                        "desc": "0=None,1=rigid(SPM8 default),2=affine",
                        "mandatory": false,
                        "field": "estwrite.output.label.dartel",
                        "default_value": 0,
                        "type": "Integer",
                        "excludes": [],
                        "requires": [],
                        "value": null,
                        "low": 0,
                        "high": 2
                    },
                    "jacobian_determinant": {
                        "desc": "",
                        "mandatory": false,
                        "field": "estwrite.jacobian.warped",
                        "default_value": false,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "deformation_field": {
                        "desc": "forward and inverse field",
                        "mandatory": false,
                        "field": "estwrite.output.warps",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "native_class_images": {
                        "desc": "native space probability maps",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "dartel_input_images": {
                        "desc": "dartel imported class images",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "normalized_class_images": {
                        "desc": "normalized class images",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "modulated_class_images": {
                        "desc": "modulated+normalized class images",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "transformation_mat": {
                        "desc": "Normalization transformation",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "bias_corrected_images": {
                        "desc": "bias corrected images",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "normalized_bias_corrected_images": {
                        "desc": "bias corrected images",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "pve_label_native_images": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "pve_label_normalized_images": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "pve_label_registered_images": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "forward_deformation_field": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "inverse_deformation_field": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "jacobian_determinant_images": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        }
    },
    "SPM_Analysis": {
        "EstimateContrast": {
            "desc": "Use spm_contrasts to estimate contrasts of interest",
            "name": "con",
            "partof": [],
            "features": {
                "input": {
                    "spm_mat_file": {
                        "desc": "Absolute path to SPM.mat",
                        "mandatory": true,
                        "field": "spmmat",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "contrasts": {
                        "desc": "List of contrasts with each contrast being a list of the form:\n            [('name', 'stat', [condition list], [weight list], [session list])]\n            If session list is None or not provided, all sessions are used. For\n            F contrasts, the condition list should contain previously defined\n            T-contrasts.",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "beta_images": {
                        "desc": "Parameter estimates of the design matrix",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "Files",
                        "excludes": [],
                        "requires": []
                    },
                    "residual_image": {
                        "desc": "Mean-squared image of the residuals",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "use_derivs": {
                        "desc": "use derivatives for estimation",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "group_contrast"
                        ],
                        "requires": []
                    },
                    "group_contrast": {
                        "desc": "higher level contrast",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "use_derivs"
                        ],
                        "requires": []
                    }
                },
                "output": {
                    "con_images": {
                        "desc": "contrast images from a t-contrast",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "spmT_images": {
                        "desc": "stat images from a t-contrast",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "ess_images": {
                        "desc": "contrast images from an F-contrast",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "spmF_images": {
                        "desc": "stat images from an F-contrast",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "spm_mat_file": {
                        "desc": "Updated SPM mat file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "EstimateModel": {
            "desc": "Use spm_spm to estimate the parameters of a model",
            "name": "fmri_est",
            "partof": [],
            "features": {
                "input": {
                    "spm_mat_file": {
                        "desc": "Absolute path to SPM.mat",
                        "mandatory": true,
                        "field": "spmmat",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "estimation_method": {
                        "desc": "Dictionary of either Classical: 1, Bayesian: 1, or Bayesian2: 1 (dict)",
                        "mandatory": true,
                        "field": "method",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "write_residuals": {
                        "desc": "Write individual residual images",
                        "mandatory": false,
                        "field": "write_residuals",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "flags": {
                        "desc": "Additional arguments",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "mask_image": {
                        "desc": "binary mask to constrain estimation",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "beta_images": {
                        "desc": "design parameter estimates",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "residual_image": {
                        "desc": "Mean-squared image of the residuals",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "residual_images": {
                        "desc": "individual residual images (requires `write_residuals`",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "RPVimage": {
                        "desc": "Resels per voxel image",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "spm_mat_file": {
                        "desc": "Updated SPM mat file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "labels": {
                        "desc": "label file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "SDerror": {
                        "desc": "Images of the standard deviation of the error",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "ARcoef": {
                        "desc": "Images of the AR coefficient",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "Cbetas": {
                        "desc": "Images of the parameter posteriors",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "SDbetas": {
                        "desc": "Images of the standard deviation of parameter posteriors",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "con_images": {
                        "desc": "contrast images from a t-contrast (created if factor_info used in Level1Design)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "spmT_images": {
                        "desc": "stat images from a t-contrast(created if factor_info used in Level1Design)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "ess_images": {
                        "desc": "contrast images from an F-contrast(created if factor_info used in Level1Design)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "spmF_images": {
                        "desc": "stat images from an F-contrast(created if factor_info used in Level1Design)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "FactorialDesign": {
            "desc": "Base class for factorial designs",
            "name": "factorial_design",
            "partof": [],
            "features": {
                "input": {
                    "spm_mat_dir": {
                        "desc": "directory to store SPM.mat file (opt)",
                        "mandatory": false,
                        "field": "dir",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "covariates": {
                        "desc": "covariate dictionary {vector, name, interaction, centering}",
                        "mandatory": false,
                        "field": "cov",
                        "default_value": null,
                        "type": "Files",
                        "excludes": [],
                        "requires": []
                    },
                    "threshold_mask_none": {
                        "desc": "do not use threshold masking",
                        "mandatory": false,
                        "field": "masking.tm.tm_none",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "threshold_mask_absolute",
                            "threshold_mask_relative"
                        ],
                        "requires": []
                    },
                    "threshold_mask_absolute": {
                        "desc": "use an absolute threshold",
                        "mandatory": false,
                        "field": "masking.tm.tma.athresh",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [
                            "threshold_mask_none",
                            "threshold_mask_relative"
                        ],
                        "requires": []
                    },
                    "threshold_mask_relative": {
                        "desc": "threshold using a proportion of the global value",
                        "mandatory": false,
                        "field": "masking.tm.tmr.rthresh",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [
                            "threshold_mask_absolute",
                            "threshold_mask_none"
                        ],
                        "requires": []
                    },
                    "use_implicit_threshold": {
                        "desc": "use implicit mask NaNs or zeros to threshold",
                        "mandatory": false,
                        "field": "masking.im",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "explicit_mask_file": {
                        "desc": "use an implicit mask file to threshold",
                        "mandatory": false,
                        "field": "masking.em",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "global_calc_omit": {
                        "desc": "omit global calculation",
                        "mandatory": false,
                        "field": "globalc.g_omit",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "global_calc_mean",
                            "global_calc_values"
                        ],
                        "requires": []
                    },
                    "global_calc_mean": {
                        "desc": "use mean for global calculation",
                        "mandatory": false,
                        "field": "globalc.g_mean",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "global_calc_omit",
                            "global_calc_values"
                        ],
                        "requires": []
                    },
                    "global_calc_values": {
                        "desc": "omit global calculation",
                        "mandatory": false,
                        "field": "globalc.g_user.global_uval",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [
                            "global_calc_mean",
                            "global_calc_omit"
                        ],
                        "requires": []
                    },
                    "no_grand_mean_scaling": {
                        "desc": "do not perform grand mean scaling",
                        "mandatory": false,
                        "field": "globalm.gmsca.gmsca_no",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "global_normalization": {
                        "desc": "global normalization None-1, Proportional-2, ANCOVA-3",
                        "mandatory": false,
                        "field": "globalm.glonorm",
                        "default_value": 1,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                1,
                                2,
                                3
                            ]
                        ]
                    }
                },
                "output": {
                    "spm_mat_file": {
                        "desc": "SPM mat file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "Level1Design": {
            "desc": "Generate an SPM design matrix",
            "name": "fmri_spec",
            "partof": [],
            "features": {
                "input": {
                    "spm_mat_dir": {
                        "desc": "directory to store SPM.mat file (opt)",
                        "mandatory": false,
                        "field": "dir",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "timing_units": {
                        "desc": "units for specification of onsets",
                        "mandatory": true,
                        "field": "timing.units",
                        "default_value": "secs",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "secs",
                                "scans"
                            ]
                        ]
                    },
                    "interscan_interval": {
                        "desc": "Interscan interval in secs",
                        "mandatory": true,
                        "field": "timing.RT",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "microtime_resolution": {
                        "desc": "Number of time-bins per scan in secs (opt)",
                        "mandatory": false,
                        "field": "timing.fmri_t",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "microtime_onset": {
                        "desc": "The onset/time-bin in seconds for alignment (opt)",
                        "mandatory": false,
                        "field": "timing.fmri_t0",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "session_info": {
                        "desc": "Session specific information generated by ``modelgen.SpecifyModel``",
                        "mandatory": true,
                        "field": "sess",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "factor_info": {
                        "desc": "Factor specific information file (opt)",
                        "mandatory": false,
                        "field": "fact",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "bases": {
                        "desc": "Dictionary names of the basis function to parameters:\n\n    * hrf\n\n        * derivs -- (2-element list) Model  HRF  Derivatives. No derivatives: [0,0],\n          Time derivatives : [1,0], Time and Dispersion derivatives: [1,1]\n\n    * fourier, fourier_han, gamma, or fir:\n\n        * length -- (int) Post-stimulus window length (in seconds)\n        * order -- (int) Number of basis functions\n\n",
                        "mandatory": true,
                        "field": "bases",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "volterra_expansion_order": {
                        "desc": "Model interactions - no:1, yes:2",
                        "mandatory": false,
                        "field": "volt",
                        "default_value": 1,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                1,
                                2
                            ]
                        ]
                    },
                    "global_intensity_normalization": {
                        "desc": "Global intensity normalization - scaling or none",
                        "mandatory": false,
                        "field": "global",
                        "default_value": "none",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "none",
                                "scaling"
                            ]
                        ]
                    },
                    "mask_image": {
                        "desc": "Image  for  explicitly  masking the analysis",
                        "mandatory": false,
                        "field": "mask",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "mask_threshold": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported"
                    },
                    "model_serial_correlations": {
                        "desc": "Model serial correlations AR(1), FAST or none. FAST is available in SPM12",
                        "mandatory": false,
                        "field": "cvi",
                        "default_value": "AR(1)",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "AR(1)",
                                "FAST",
                                "none"
                            ]
                        ]
                    },
                    "flags": {
                        "desc": "Additional arguments to the job, e.g., a common SPM operation is to modify the default masking threshold (mthresh)",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "spm_mat_file": {
                        "desc": "SPM mat file",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "MultipleRegressionDesign": {
            "desc": "Create SPM design for multiple regression",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "in_files": {
                        "desc": "List of files",
                        "mandatory": true,
                        "field": "des.mreg.scans",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "include_intercept": {
                        "desc": "Include intercept in design",
                        "mandatory": false,
                        "field": "des.mreg.incint",
                        "default_value": true,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "user_covariates": {
                        "desc": "covariate dictionary {vector, name, centering}",
                        "mandatory": false,
                        "field": "des.mreg.mcov",
                        "default_value": null,
                        "type": "Files",
                        "excludes": [],
                        "requires": []
                    },
                    "spm_mat_dir": {
                        "desc": "directory to store SPM.mat file (opt)",
                        "mandatory": false,
                        "field": "dir",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "covariates": {
                        "desc": "covariate dictionary {vector, name, interaction, centering}",
                        "mandatory": false,
                        "field": "cov",
                        "default_value": null,
                        "type": "Files",
                        "excludes": [],
                        "requires": []
                    },
                    "threshold_mask_none": {
                        "desc": "do not use threshold masking",
                        "mandatory": false,
                        "field": "masking.tm.tm_none",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "threshold_mask_absolute",
                            "threshold_mask_relative"
                        ],
                        "requires": []
                    },
                    "threshold_mask_absolute": {
                        "desc": "use an absolute threshold",
                        "mandatory": false,
                        "field": "masking.tm.tma.athresh",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [
                            "threshold_mask_none",
                            "threshold_mask_relative"
                        ],
                        "requires": []
                    },
                    "threshold_mask_relative": {
                        "desc": "threshold using a proportion of the global value",
                        "mandatory": false,
                        "field": "masking.tm.tmr.rthresh",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [
                            "threshold_mask_absolute",
                            "threshold_mask_none"
                        ],
                        "requires": []
                    },
                    "use_implicit_threshold": {
                        "desc": "use implicit mask NaNs or zeros to threshold",
                        "mandatory": false,
                        "field": "masking.im",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "explicit_mask_file": {
                        "desc": "use an implicit mask file to threshold",
                        "mandatory": false,
                        "field": "masking.em",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "global_calc_omit": {
                        "desc": "omit global calculation",
                        "mandatory": false,
                        "field": "globalc.g_omit",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "global_calc_mean",
                            "global_calc_values"
                        ],
                        "requires": []
                    },
                    "global_calc_mean": {
                        "desc": "use mean for global calculation",
                        "mandatory": false,
                        "field": "globalc.g_mean",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "global_calc_omit",
                            "global_calc_values"
                        ],
                        "requires": []
                    },
                    "global_calc_values": {
                        "desc": "omit global calculation",
                        "mandatory": false,
                        "field": "globalc.g_user.global_uval",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [
                            "global_calc_mean",
                            "global_calc_omit"
                        ],
                        "requires": []
                    },
                    "no_grand_mean_scaling": {
                        "desc": "do not perform grand mean scaling",
                        "mandatory": false,
                        "field": "globalm.gmsca.gmsca_no",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "global_normalization": {
                        "desc": "global normalization None-1, Proportional-2, ANCOVA-3",
                        "mandatory": false,
                        "field": "globalm.glonorm",
                        "default_value": 1,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                1,
                                2,
                                3
                            ]
                        ]
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "OneSampleTTestDesign": {
            "desc": "Create SPM design for one sample t-test",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "in_files": {
                        "desc": "input files",
                        "mandatory": true,
                        "field": "des.t1.scans",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "spm_mat_dir": {
                        "desc": "directory to store SPM.mat file (opt)",
                        "mandatory": false,
                        "field": "dir",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "covariates": {
                        "desc": "covariate dictionary {vector, name, interaction, centering}",
                        "mandatory": false,
                        "field": "cov",
                        "default_value": null,
                        "type": "Files",
                        "excludes": [],
                        "requires": []
                    },
                    "threshold_mask_none": {
                        "desc": "do not use threshold masking",
                        "mandatory": false,
                        "field": "masking.tm.tm_none",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "threshold_mask_absolute",
                            "threshold_mask_relative"
                        ],
                        "requires": []
                    },
                    "threshold_mask_absolute": {
                        "desc": "use an absolute threshold",
                        "mandatory": false,
                        "field": "masking.tm.tma.athresh",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [
                            "threshold_mask_none",
                            "threshold_mask_relative"
                        ],
                        "requires": []
                    },
                    "threshold_mask_relative": {
                        "desc": "threshold using a proportion of the global value",
                        "mandatory": false,
                        "field": "masking.tm.tmr.rthresh",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [
                            "threshold_mask_absolute",
                            "threshold_mask_none"
                        ],
                        "requires": []
                    },
                    "use_implicit_threshold": {
                        "desc": "use implicit mask NaNs or zeros to threshold",
                        "mandatory": false,
                        "field": "masking.im",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "explicit_mask_file": {
                        "desc": "use an implicit mask file to threshold",
                        "mandatory": false,
                        "field": "masking.em",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "global_calc_omit": {
                        "desc": "omit global calculation",
                        "mandatory": false,
                        "field": "globalc.g_omit",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "global_calc_mean",
                            "global_calc_values"
                        ],
                        "requires": []
                    },
                    "global_calc_mean": {
                        "desc": "use mean for global calculation",
                        "mandatory": false,
                        "field": "globalc.g_mean",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "global_calc_omit",
                            "global_calc_values"
                        ],
                        "requires": []
                    },
                    "global_calc_values": {
                        "desc": "omit global calculation",
                        "mandatory": false,
                        "field": "globalc.g_user.global_uval",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [
                            "global_calc_mean",
                            "global_calc_omit"
                        ],
                        "requires": []
                    },
                    "no_grand_mean_scaling": {
                        "desc": "do not perform grand mean scaling",
                        "mandatory": false,
                        "field": "globalm.gmsca.gmsca_no",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "global_normalization": {
                        "desc": "global normalization None-1, Proportional-2, ANCOVA-3",
                        "mandatory": false,
                        "field": "globalm.glonorm",
                        "default_value": 1,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                1,
                                2,
                                3
                            ]
                        ]
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "PairedTTestDesign": {
            "desc": "Create SPM design for paired t-test",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "paired_files": {
                        "desc": "List of paired files",
                        "mandatory": true,
                        "field": "des.pt.pair",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "grand_mean_scaling": {
                        "desc": "Perform grand mean scaling",
                        "mandatory": false,
                        "field": "des.pt.gmsca",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "ancova": {
                        "desc": "Specify ancova-by-factor regressors",
                        "mandatory": false,
                        "field": "des.pt.ancova",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "spm_mat_dir": {
                        "desc": "directory to store SPM.mat file (opt)",
                        "mandatory": false,
                        "field": "dir",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "covariates": {
                        "desc": "covariate dictionary {vector, name, interaction, centering}",
                        "mandatory": false,
                        "field": "cov",
                        "default_value": null,
                        "type": "Files",
                        "excludes": [],
                        "requires": []
                    },
                    "threshold_mask_none": {
                        "desc": "do not use threshold masking",
                        "mandatory": false,
                        "field": "masking.tm.tm_none",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "threshold_mask_absolute",
                            "threshold_mask_relative"
                        ],
                        "requires": []
                    },
                    "threshold_mask_absolute": {
                        "desc": "use an absolute threshold",
                        "mandatory": false,
                        "field": "masking.tm.tma.athresh",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [
                            "threshold_mask_none",
                            "threshold_mask_relative"
                        ],
                        "requires": []
                    },
                    "threshold_mask_relative": {
                        "desc": "threshold using a proportion of the global value",
                        "mandatory": false,
                        "field": "masking.tm.tmr.rthresh",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [
                            "threshold_mask_absolute",
                            "threshold_mask_none"
                        ],
                        "requires": []
                    },
                    "use_implicit_threshold": {
                        "desc": "use implicit mask NaNs or zeros to threshold",
                        "mandatory": false,
                        "field": "masking.im",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "explicit_mask_file": {
                        "desc": "use an implicit mask file to threshold",
                        "mandatory": false,
                        "field": "masking.em",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "global_calc_omit": {
                        "desc": "omit global calculation",
                        "mandatory": false,
                        "field": "globalc.g_omit",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "global_calc_mean",
                            "global_calc_values"
                        ],
                        "requires": []
                    },
                    "global_calc_mean": {
                        "desc": "use mean for global calculation",
                        "mandatory": false,
                        "field": "globalc.g_mean",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "global_calc_omit",
                            "global_calc_values"
                        ],
                        "requires": []
                    },
                    "global_calc_values": {
                        "desc": "omit global calculation",
                        "mandatory": false,
                        "field": "globalc.g_user.global_uval",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [
                            "global_calc_mean",
                            "global_calc_omit"
                        ],
                        "requires": []
                    },
                    "no_grand_mean_scaling": {
                        "desc": "do not perform grand mean scaling",
                        "mandatory": false,
                        "field": "globalm.gmsca.gmsca_no",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "global_normalization": {
                        "desc": "global normalization None-1, Proportional-2, ANCOVA-3",
                        "mandatory": false,
                        "field": "globalm.glonorm",
                        "default_value": 1,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                1,
                                2,
                                3
                            ]
                        ]
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "Threshold": {
            "desc": "Topological FDR thresholding based on cluster extent/size. Smoothness is",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "spm_mat_file": {
                        "desc": "absolute path to SPM.mat",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "stat_image": {
                        "desc": "stat image",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "contrast_index": {
                        "desc": "which contrast in the SPM.mat to use",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "use_fwe_correction": {
                        "desc": "whether to use FWE (Bonferroni) correction for initial threshold (height_threshold_type has to be set to p-value)",
                        "mandatory": false,
                        "field": "",
                        "default_value": true,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "use_vox_fdr_correction": {
                        "desc": "whether to use voxel-based FDR correction for initial threshold (height_threshold_type has to be set to q-value)",
                        "mandatory": false,
                        "field": "",
                        "default_value": false,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "use_topo_fdr": {
                        "desc": "whether to use FDR over cluster extent probabilities",
                        "mandatory": false,
                        "field": "",
                        "default_value": true,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "height_threshold": {
                        "desc": "value for initial thresholding (defining clusters)",
                        "mandatory": false,
                        "field": "",
                        "default_value": 0.05,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "height_threshold_type": {
                        "desc": "Is the cluster forming threshold a stat value or p-value?",
                        "mandatory": false,
                        "field": "",
                        "default_value": "p-value",
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                "p-value",
                                "stat"
                            ]
                        ]
                    },
                    "extent_fdr_p_threshold": {
                        "desc": "p threshold on FDR corrected cluster size probabilities",
                        "mandatory": false,
                        "field": "",
                        "default_value": 0.05,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "extent_threshold": {
                        "desc": "Minimum cluster size in voxels",
                        "mandatory": false,
                        "field": "",
                        "default_value": 0,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "force_activation": {
                        "desc": "In case no clusters survive the topological inference step this will pick a culster with the highest sum of t-values. Use with care.",
                        "mandatory": false,
                        "field": "",
                        "default_value": false,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "thresholded_map": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "n_clusters": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "pre_topo_fdr_map": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "pre_topo_n_clusters": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "activation_forced": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "cluster_forming_thr": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "ThresholdStatistics": {
            "desc": "Given height and cluster size threshold calculate theoretical",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "spm_mat_file": {
                        "desc": "absolute path to SPM.mat",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "stat_image": {
                        "desc": "stat image",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "contrast_index": {
                        "desc": "which contrast in the SPM.mat to use",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    },
                    "height_threshold": {
                        "desc": "stat value for initial thresholding (defining clusters)",
                        "mandatory": true,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "extent_threshold": {
                        "desc": "Minimum cluster size in voxels",
                        "mandatory": false,
                        "field": "",
                        "default_value": 0,
                        "type": "Integer",
                        "excludes": [],
                        "requires": []
                    }
                },
                "output": {
                    "voxelwise_P_Bonf": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "voxelwise_P_RF": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "voxelwise_P_uncor": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "voxelwise_P_FDR": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "clusterwise_P_RF": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    },
                    "clusterwise_P_FDR": {
                        "desc": "",
                        "mandatory": false,
                        "field": "",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [],
                        "requires": []
                    }
                }
            },
            "excludes": [],
            "requires": []
        },
        "TwoSampleTTestDesign": {
            "desc": "Create SPM design for two sample t-test",
            "name": "",
            "partof": [],
            "features": {
                "input": {
                    "group1_files": {
                        "desc": "Group 1 input files",
                        "mandatory": true,
                        "field": "des.t2.scans1",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "group2_files": {
                        "desc": "Group 2 input files",
                        "mandatory": true,
                        "field": "des.t2.scans2",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "dependent": {
                        "desc": "Are the measurements dependent between levels",
                        "mandatory": false,
                        "field": "des.t2.dept",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "unequal_variance": {
                        "desc": "Are the variances equal or unequal between groups",
                        "mandatory": false,
                        "field": "des.t2.variance",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "spm_mat_dir": {
                        "desc": "directory to store SPM.mat file (opt)",
                        "mandatory": false,
                        "field": "dir",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": []
                    },
                    "covariates": {
                        "desc": "covariate dictionary {vector, name, interaction, centering}",
                        "mandatory": false,
                        "field": "cov",
                        "default_value": null,
                        "type": "Files",
                        "excludes": [],
                        "requires": []
                    },
                    "threshold_mask_none": {
                        "desc": "do not use threshold masking",
                        "mandatory": false,
                        "field": "masking.tm.tm_none",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "threshold_mask_absolute",
                            "threshold_mask_relative"
                        ],
                        "requires": []
                    },
                    "threshold_mask_absolute": {
                        "desc": "use an absolute threshold",
                        "mandatory": false,
                        "field": "masking.tm.tma.athresh",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [
                            "threshold_mask_none",
                            "threshold_mask_relative"
                        ],
                        "requires": []
                    },
                    "threshold_mask_relative": {
                        "desc": "threshold using a proportion of the global value",
                        "mandatory": false,
                        "field": "masking.tm.tmr.rthresh",
                        "default_value": null,
                        "type": "Float",
                        "excludes": [
                            "threshold_mask_absolute",
                            "threshold_mask_none"
                        ],
                        "requires": []
                    },
                    "use_implicit_threshold": {
                        "desc": "use implicit mask NaNs or zeros to threshold",
                        "mandatory": false,
                        "field": "masking.im",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "explicit_mask_file": {
                        "desc": "use an implicit mask file to threshold",
                        "mandatory": false,
                        "field": "masking.em",
                        "default_value": null,
                        "type": "File",
                        "excludes": [],
                        "requires": []
                    },
                    "global_calc_omit": {
                        "desc": "omit global calculation",
                        "mandatory": false,
                        "field": "globalc.g_omit",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "global_calc_mean",
                            "global_calc_values"
                        ],
                        "requires": []
                    },
                    "global_calc_mean": {
                        "desc": "use mean for global calculation",
                        "mandatory": false,
                        "field": "globalc.g_mean",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [
                            "global_calc_omit",
                            "global_calc_values"
                        ],
                        "requires": []
                    },
                    "global_calc_values": {
                        "desc": "omit global calculation",
                        "mandatory": false,
                        "field": "globalc.g_user.global_uval",
                        "default_value": null,
                        "type": "Unsupported",
                        "excludes": [
                            "global_calc_mean",
                            "global_calc_omit"
                        ],
                        "requires": []
                    },
                    "no_grand_mean_scaling": {
                        "desc": "do not perform grand mean scaling",
                        "mandatory": false,
                        "field": "globalm.gmsca.gmsca_no",
                        "default_value": null,
                        "type": "Boolean",
                        "excludes": [],
                        "requires": []
                    },
                    "global_normalization": {
                        "desc": "global normalization None-1, Proportional-2, ANCOVA-3",
                        "mandatory": false,
                        "field": "globalm.glonorm",
                        "default_value": 1,
                        "type": "Unsupported",
                        "excludes": [],
                        "requires": [],
                        "oneof": [
                            [
                                1,
                                2,
                                3
                            ]
                        ]
                    }
                }
            },
            "excludes": [],
            "requires": []
        }
    }
}