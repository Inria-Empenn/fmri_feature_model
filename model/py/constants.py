"""
Autogenerated from NiPype
"""


class AFNI:
    class AlignEpiAnatPy:
        class Input:
            in_file = 'in_file'
            anat = 'anat'
            epi_base = 'epi_base'
            anat2epi = 'anat2epi'
            epi2anat = 'epi2anat'
            save_skullstrip = 'save_skullstrip'
            suffix = 'suffix'
            epi_strip = 'epi_strip'
            volreg = 'volreg'
            tshift = 'tshift'
            outputtype = 'outputtype'
            py27_path = 'py27_path'
            args = 'args'
            environ = 'environ'

        class Output:
            anat_al_orig = 'anat_al_orig'
            epi_al_orig = 'epi_al_orig'
            epi_tlrc_al = 'epi_tlrc_al'
            anat_al_mat = 'anat_al_mat'
            epi_al_mat = 'epi_al_mat'
            epi_vr_al_mat = 'epi_vr_al_mat'
            epi_reg_al_mat = 'epi_reg_al_mat'
            epi_al_tlrc_mat = 'epi_al_tlrc_mat'
            epi_vr_motion = 'epi_vr_motion'
            skullstrip = 'skullstrip'

    class Allineate:
        class Input:
            in_file = 'in_file'
            reference = 'reference'
            out_file = 'out_file'
            out_param_file = 'out_param_file'
            in_param_file = 'in_param_file'
            out_matrix = 'out_matrix'
            in_matrix = 'in_matrix'
            overwrite = 'overwrite'
            allcostx = 'allcostx'
            cost = 'cost'
            interpolation = 'interpolation'
            final_interpolation = 'final_interpolation'
            nmatch = 'nmatch'
            no_pad = 'no_pad'
            zclip = 'zclip'
            convergence = 'convergence'
            usetemp = 'usetemp'
            check = 'check'
            one_pass = 'one_pass'
            two_pass = 'two_pass'
            two_blur = 'two_blur'
            two_first = 'two_first'
            two_best = 'two_best'
            fine_blur = 'fine_blur'
            center_of_mass = 'center_of_mass'
            autoweight = 'autoweight'
            automask = 'automask'
            autobox = 'autobox'
            nomask = 'nomask'
            weight_file = 'weight_file'
            weight = 'weight'
            out_weight_file = 'out_weight_file'
            source_mask = 'source_mask'
            source_automask = 'source_automask'
            warp_type = 'warp_type'
            warpfreeze = 'warpfreeze'
            replacebase = 'replacebase'
            replacemeth = 'replacemeth'
            epi = 'epi'
            maxrot = 'maxrot'
            maxshf = 'maxshf'
            maxscl = 'maxscl'
            maxshr = 'maxshr'
            master = 'master'
            newgrid = 'newgrid'
            nwarp = 'nwarp'
            nwarp_fixmot = 'nwarp_fixmot'
            nwarp_fixdep = 'nwarp_fixdep'
            verbose = 'verbose'
            quiet = 'quiet'
            num_threads = 'num_threads'
            outputtype = 'outputtype'
            args = 'args'
            environ = 'environ'

        class Output:
            out_file = 'out_file'
            out_matrix = 'out_matrix'
            out_param_file = 'out_param_file'
            out_weight_file = 'out_weight_file'
            allcostx = 'allcostx'

    class AutoTLRC:
        class Input:
            outputtype = 'outputtype'
            in_file = 'in_file'
            base = 'base'
            no_ss = 'no_ss'
            args = 'args'
            environ = 'environ'

        class Output:
            out_file = 'out_file'

    class AutoTcorrelate:
        class Input:
            in_file = 'in_file'
            polort = 'polort'
            eta2 = 'eta2'
            mask = 'mask'
            mask_only_targets = 'mask_only_targets'
            mask_source = 'mask_source'
            out_file = 'out_file'
            num_threads = 'num_threads'
            outputtype = 'outputtype'
            args = 'args'
            environ = 'environ'

        class Output:
            out_file = 'out_file'

    class Automask:
        class Input:
            in_file = 'in_file'
            out_file = 'out_file'
            brain_file = 'brain_file'
            clfrac = 'clfrac'
            dilate = 'dilate'
            erode = 'erode'
            num_threads = 'num_threads'
            outputtype = 'outputtype'
            args = 'args'
            environ = 'environ'

        class Output:
            out_file = 'out_file'
            brain_file = 'brain_file'

    class Bandpass:
        class Input:
            in_file = 'in_file'
            out_file = 'out_file'
            lowpass = 'lowpass'
            highpass = 'highpass'
            mask = 'mask'
            despike = 'despike'
            orthogonalize_file = 'orthogonalize_file'
            orthogonalize_dset = 'orthogonalize_dset'
            no_detrend = 'no_detrend'
            tr = 'tr'
            nfft = 'nfft'
            normalize = 'normalize'
            automask = 'automask'
            blur = 'blur'
            localPV = 'localPV'
            notrans = 'notrans'
            num_threads = 'num_threads'
            outputtype = 'outputtype'
            args = 'args'
            environ = 'environ'

        class Output:
            out_file = 'out_file'

    class BlurInMask:
        class Input:
            in_file = 'in_file'
            out_file = 'out_file'
            mask = 'mask'
            multimask = 'multimask'
            automask = 'automask'
            fwhm = 'fwhm'
            preserve = 'preserve'
            float_out = 'float_out'
            options = 'options'
            num_threads = 'num_threads'
            outputtype = 'outputtype'
            args = 'args'
            environ = 'environ'

        class Output:
            out_file = 'out_file'

    class BlurToFWHM:
        class Input:
            in_file = 'in_file'
            automask = 'automask'
            fwhm = 'fwhm'
            fwhmxy = 'fwhmxy'
            blurmaster = 'blurmaster'
            mask = 'mask'
            num_threads = 'num_threads'
            outputtype = 'outputtype'
            out_file = 'out_file'
            args = 'args'
            environ = 'environ'

        class Output:
            out_file = 'out_file'

    class ClipLevel:
        class Input:
            in_file = 'in_file'
            mfrac = 'mfrac'
            doall = 'doall'
            grad = 'grad'
            args = 'args'
            environ = 'environ'

        class Output:
            clip_val = 'clip_val'

    class DegreeCentrality:
        class Input:
            in_file = 'in_file'
            sparsity = 'sparsity'
            oned_file = 'oned_file'
            mask = 'mask'
            thresh = 'thresh'
            polort = 'polort'
            autoclip = 'autoclip'
            automask = 'automask'
            num_threads = 'num_threads'
            outputtype = 'outputtype'
            out_file = 'out_file'
            args = 'args'
            environ = 'environ'

        class Output:
            oned_file = 'oned_file'
            out_file = 'out_file'

    class Despike:
        class Input:
            in_file = 'in_file'
            out_file = 'out_file'
            num_threads = 'num_threads'
            outputtype = 'outputtype'
            args = 'args'
            environ = 'environ'

        class Output:
            out_file = 'out_file'

    class Detrend:
        class Input:
            in_file = 'in_file'
            out_file = 'out_file'
            num_threads = 'num_threads'
            outputtype = 'outputtype'
            args = 'args'
            environ = 'environ'

        class Output:
            out_file = 'out_file'

    class ECM:
        class Input:
            in_file = 'in_file'
            sparsity = 'sparsity'
            full = 'full'
            fecm = 'fecm'
            shift = 'shift'
            scale = 'scale'
            eps = 'eps'
            max_iter = 'max_iter'
            memory = 'memory'
            mask = 'mask'
            thresh = 'thresh'
            polort = 'polort'
            autoclip = 'autoclip'
            automask = 'automask'
            num_threads = 'num_threads'
            outputtype = 'outputtype'
            out_file = 'out_file'
            args = 'args'
            environ = 'environ'

        class Output:
            out_file = 'out_file'

    class Fim:
        class Input:
            in_file = 'in_file'
            out_file = 'out_file'
            ideal_file = 'ideal_file'
            fim_thr = 'fim_thr'
            out = 'out'
            num_threads = 'num_threads'
            outputtype = 'outputtype'
            args = 'args'
            environ = 'environ'

        class Output:
            out_file = 'out_file'

    class Fourier:
        class Input:
            in_file = 'in_file'
            out_file = 'out_file'
            lowpass = 'lowpass'
            highpass = 'highpass'
            retrend = 'retrend'
            num_threads = 'num_threads'
            outputtype = 'outputtype'
            args = 'args'
            environ = 'environ'

        class Output:
            out_file = 'out_file'

    class Hist:
        class Input:
            in_file = 'in_file'
            out_file = 'out_file'
            showhist = 'showhist'
            out_show = 'out_show'
            mask = 'mask'
            nbin = 'nbin'
            max_value = 'max_value'
            min_value = 'min_value'
            bin_width = 'bin_width'
            args = 'args'
            environ = 'environ'

        class Output:
            out_file = 'out_file'
            out_show = 'out_show'

    class LFCD:
        class Input:
            in_file = 'in_file'
            mask = 'mask'
            thresh = 'thresh'
            polort = 'polort'
            autoclip = 'autoclip'
            automask = 'automask'
            num_threads = 'num_threads'
            outputtype = 'outputtype'
            out_file = 'out_file'
            args = 'args'
            environ = 'environ'

        class Output:
            out_file = 'out_file'

    class Maskave:
        class Input:
            in_file = 'in_file'
            out_file = 'out_file'
            mask = 'mask'
            quiet = 'quiet'
            num_threads = 'num_threads'
            outputtype = 'outputtype'
            args = 'args'
            environ = 'environ'

        class Output:
            out_file = 'out_file'

    class Means:
        class Input:
            in_file_a = 'in_file_a'
            in_file_b = 'in_file_b'
            datum = 'datum'
            out_file = 'out_file'
            scale = 'scale'
            non_zero = 'non_zero'
            std_dev = 'std_dev'
            sqr = 'sqr'
            summ = 'summ'
            count = 'count'
            mask_inter = 'mask_inter'
            mask_union = 'mask_union'
            num_threads = 'num_threads'
            outputtype = 'outputtype'
            args = 'args'
            environ = 'environ'

        class Output:
            out_file = 'out_file'

    class NetCorr:
        class Input:
            in_file = 'in_file'
            in_rois = 'in_rois'
            mask = 'mask'
            weight_ts = 'weight_ts'
            fish_z = 'fish_z'
            part_corr = 'part_corr'
            ts_out = 'ts_out'
            ts_label = 'ts_label'
            ts_indiv = 'ts_indiv'
            ts_wb_corr = 'ts_wb_corr'
            ts_wb_Z = 'ts_wb_Z'
            ts_wb_strlabel = 'ts_wb_strlabel'
            nifti = 'nifti'
            output_mask_nonnull = 'output_mask_nonnull'
            push_thru_many_zeros = 'push_thru_many_zeros'
            ignore_LT = 'ignore_LT'
            out_file = 'out_file'
            num_threads = 'num_threads'
            outputtype = 'outputtype'
            args = 'args'
            environ = 'environ'

        class Output:
            out_corr_matrix = 'out_corr_matrix'
            out_corr_maps = 'out_corr_maps'

    class OutlierCount:
        class Input:
            in_file = 'in_file'
            mask = 'mask'
            qthr = 'qthr'
            autoclip = 'autoclip'
            automask = 'automask'
            fraction = 'fraction'
            interval = 'interval'
            save_outliers = 'save_outliers'
            outliers_file = 'outliers_file'
            polort = 'polort'
            legendre = 'legendre'
            out_file = 'out_file'
            args = 'args'
            environ = 'environ'

        class Output:
            out_outliers = 'out_outliers'
            out_file = 'out_file'

    class QualityIndex:
        class Input:
            in_file = 'in_file'
            mask = 'mask'
            spearman = 'spearman'
            quadrant = 'quadrant'
            autoclip = 'autoclip'
            automask = 'automask'
            clip = 'clip'
            interval = 'interval'
            out_file = 'out_file'
            args = 'args'
            environ = 'environ'

        class Output:
            out_file = 'out_file'

    class Qwarp:
        class Input:
            in_file = 'in_file'
            base_file = 'base_file'
            out_file = 'out_file'
            resample = 'resample'
            allineate = 'allineate'
            allineate_opts = 'allineate_opts'
            nowarp = 'nowarp'
            iwarp = 'iwarp'
            pear = 'pear'
            noneg = 'noneg'
            nopenalty = 'nopenalty'
            penfac = 'penfac'
            noweight = 'noweight'
            weight = 'weight'
            wball = 'wball'
            bandpass = 'bandpass'
            wmask = 'wmask'
            out_weight_file = 'out_weight_file'
            blur = 'blur'
            pblur = 'pblur'
            emask = 'emask'
            noXdis = 'noXdis'
            noYdis = 'noYdis'
            noZdis = 'noZdis'
            iniwarp = 'iniwarp'
            inilev = 'inilev'
            minpatch = 'minpatch'
            maxlev = 'maxlev'
            gridlist = 'gridlist'
            allsave = 'allsave'
            duplo = 'duplo'
            workhard = 'workhard'
            Qfinal = 'Qfinal'
            Qonly = 'Qonly'
            plusminus = 'plusminus'
            nopad = 'nopad'
            nopadWARP = 'nopadWARP'
            expad = 'expad'
            ballopt = 'ballopt'
            baxopt = 'baxopt'
            verb = 'verb'
            quiet = 'quiet'
            overwrite = 'overwrite'
            lpc = 'lpc'
            lpa = 'lpa'
            hel = 'hel'
            mi = 'mi'
            nmi = 'nmi'
            num_threads = 'num_threads'
            outputtype = 'outputtype'
            args = 'args'
            environ = 'environ'

        class Output:
            warped_source = 'warped_source'
            warped_base = 'warped_base'
            source_warp = 'source_warp'
            base_warp = 'base_warp'
            weights = 'weights'

    class QwarpPlusMinus:
        class Input:
            source_file = 'source_file'
            out_file = 'out_file'
            plusminus = 'plusminus'
            in_file = 'in_file'
            base_file = 'base_file'
            resample = 'resample'
            allineate = 'allineate'
            allineate_opts = 'allineate_opts'
            nowarp = 'nowarp'
            iwarp = 'iwarp'
            pear = 'pear'
            noneg = 'noneg'
            nopenalty = 'nopenalty'
            penfac = 'penfac'
            noweight = 'noweight'
            weight = 'weight'
            wball = 'wball'
            bandpass = 'bandpass'
            wmask = 'wmask'
            out_weight_file = 'out_weight_file'
            blur = 'blur'
            pblur = 'pblur'
            emask = 'emask'
            noXdis = 'noXdis'
            noYdis = 'noYdis'
            noZdis = 'noZdis'
            iniwarp = 'iniwarp'
            inilev = 'inilev'
            minpatch = 'minpatch'
            maxlev = 'maxlev'
            gridlist = 'gridlist'
            allsave = 'allsave'
            duplo = 'duplo'
            workhard = 'workhard'
            Qfinal = 'Qfinal'
            Qonly = 'Qonly'
            nopad = 'nopad'
            nopadWARP = 'nopadWARP'
            expad = 'expad'
            ballopt = 'ballopt'
            baxopt = 'baxopt'
            verb = 'verb'
            quiet = 'quiet'
            overwrite = 'overwrite'
            lpc = 'lpc'
            lpa = 'lpa'
            hel = 'hel'
            mi = 'mi'
            nmi = 'nmi'
            num_threads = 'num_threads'
            outputtype = 'outputtype'
            args = 'args'
            environ = 'environ'

    class ROIStats:
        class Input:
            in_file = 'in_file'
            mask = 'mask'
            mask_file = 'mask_file'
            mask_f2short = 'mask_f2short'
            num_roi = 'num_roi'
            zerofill = 'zerofill'
            roisel = 'roisel'
            debug = 'debug'
            quiet = 'quiet'
            nomeanout = 'nomeanout'
            nobriklab = 'nobriklab'
            format1D = 'format1D'
            format1DR = 'format1DR'
            stat = 'stat'
            out_file = 'out_file'
            args = 'args'
            environ = 'environ'

        class Output:
            out_file = 'out_file'

    class Retroicor:
        class Input:
            in_file = 'in_file'
            out_file = 'out_file'
            card = 'card'
            resp = 'resp'
            threshold = 'threshold'
            order = 'order'
            cardphase = 'cardphase'
            respphase = 'respphase'
            num_threads = 'num_threads'
            outputtype = 'outputtype'
            args = 'args'
            environ = 'environ'

        class Output:
            out_file = 'out_file'

    class Seg:
        class Input:
            in_file = 'in_file'
            mask = 'mask'
            blur_meth = 'blur_meth'
            bias_fwhm = 'bias_fwhm'
            classes = 'classes'
            bmrf = 'bmrf'
            bias_classes = 'bias_classes'
            prefix = 'prefix'
            mixfrac = 'mixfrac'
            mixfloor = 'mixfloor'
            main_N = 'main_N'
            args = 'args'
            environ = 'environ'

        class Output:
            out_file = 'out_file'

    class SkullStrip:
        class Input:
            in_file = 'in_file'
            out_file = 'out_file'
            num_threads = 'num_threads'
            outputtype = 'outputtype'
            args = 'args'
            environ = 'environ'

        class Output:
            out_file = 'out_file'

    class TCorr1D:
        class Input:
            xset = 'xset'
            y_1d = 'y_1d'
            out_file = 'out_file'
            pearson = 'pearson'
            spearman = 'spearman'
            quadrant = 'quadrant'
            ktaub = 'ktaub'
            num_threads = 'num_threads'
            outputtype = 'outputtype'
            args = 'args'
            environ = 'environ'

        class Output:
            out_file = 'out_file'

    class TCorrMap:
        class Input:
            in_file = 'in_file'
            seeds = 'seeds'
            mask = 'mask'
            automask = 'automask'
            polort = 'polort'
            bandpass = 'bandpass'
            regress_out_timeseries = 'regress_out_timeseries'
            blur_fwhm = 'blur_fwhm'
            seeds_width = 'seeds_width'
            mean_file = 'mean_file'
            zmean = 'zmean'
            qmean = 'qmean'
            pmean = 'pmean'
            thresholds = 'thresholds'
            absolute_threshold = 'absolute_threshold'
            var_absolute_threshold = 'var_absolute_threshold'
            var_absolute_threshold_normalize = 'var_absolute_threshold_normalize'
            correlation_maps = 'correlation_maps'
            correlation_maps_masked = 'correlation_maps_masked'
            expr = 'expr'
            average_expr = 'average_expr'
            average_expr_nonzero = 'average_expr_nonzero'
            sum_expr = 'sum_expr'
            histogram_bin_numbers = 'histogram_bin_numbers'
            histogram = 'histogram'
            num_threads = 'num_threads'
            outputtype = 'outputtype'
            out_file = 'out_file'
            args = 'args'
            environ = 'environ'

        class Output:
            mean_file = 'mean_file'
            zmean = 'zmean'
            qmean = 'qmean'
            pmean = 'pmean'
            absolute_threshold = 'absolute_threshold'
            var_absolute_threshold = 'var_absolute_threshold'
            var_absolute_threshold_normalize = 'var_absolute_threshold_normalize'
            correlation_maps = 'correlation_maps'
            correlation_maps_masked = 'correlation_maps_masked'
            average_expr = 'average_expr'
            average_expr_nonzero = 'average_expr_nonzero'
            sum_expr = 'sum_expr'
            histogram = 'histogram'

    class TCorrelate:
        class Input:
            xset = 'xset'
            yset = 'yset'
            out_file = 'out_file'
            pearson = 'pearson'
            polort = 'polort'
            num_threads = 'num_threads'
            outputtype = 'outputtype'
            args = 'args'
            environ = 'environ'

        class Output:
            out_file = 'out_file'

    class TNorm:
        class Input:
            in_file = 'in_file'
            out_file = 'out_file'
            norm2 = 'norm2'
            normR = 'normR'
            norm1 = 'norm1'
            normx = 'normx'
            polort = 'polort'
            L1fit = 'L1fit'
            num_threads = 'num_threads'
            outputtype = 'outputtype'
            args = 'args'
            environ = 'environ'

        class Output:
            out_file = 'out_file'

    class TProject:
        class Input:
            in_file = 'in_file'
            out_file = 'out_file'
            censor = 'censor'
            censortr = 'censortr'
            cenmode = 'cenmode'
            concat = 'concat'
            noblock = 'noblock'
            ort = 'ort'
            polort = 'polort'
            dsort = 'dsort'
            bandpass = 'bandpass'
            stopband = 'stopband'
            TR = 'TR'
            mask = 'mask'
            automask = 'automask'
            blur = 'blur'
            norm = 'norm'
            num_threads = 'num_threads'
            outputtype = 'outputtype'
            args = 'args'
            environ = 'environ'

        class Output:
            out_file = 'out_file'

    class TShift:
        class Input:
            in_file = 'in_file'
            out_file = 'out_file'
            tr = 'tr'
            tzero = 'tzero'
            tslice = 'tslice'
            ignore = 'ignore'
            interp = 'interp'
            tpattern = 'tpattern'
            slice_timing = 'slice_timing'
            slice_encoding_direction = 'slice_encoding_direction'
            rlt = 'rlt'
            rltplus = 'rltplus'
            num_threads = 'num_threads'
            outputtype = 'outputtype'
            args = 'args'
            environ = 'environ'

        class Output:
            timing_file = 'timing_file'
            out_file = 'out_file'

    class TSmooth:
        class Input:
            in_file = 'in_file'
            out_file = 'out_file'
            datum = 'datum'
            lin = 'lin'
            med = 'med'
            osf = 'osf'
            lin3 = 'lin3'
            hamming = 'hamming'
            blackman = 'blackman'
            custom = 'custom'
            adaptive = 'adaptive'
            num_threads = 'num_threads'
            outputtype = 'outputtype'
            args = 'args'
            environ = 'environ'

        class Output:
            out_file = 'out_file'

    class Volreg:
        class Input:
            in_file = 'in_file'
            in_weight_volume = 'in_weight_volume'
            out_file = 'out_file'
            basefile = 'basefile'
            zpad = 'zpad'
            md1d_file = 'md1d_file'
            oned_file = 'oned_file'
            verbose = 'verbose'
            timeshift = 'timeshift'
            copyorigin = 'copyorigin'
            oned_matrix_save = 'oned_matrix_save'
            interp = 'interp'
            num_threads = 'num_threads'
            outputtype = 'outputtype'
            args = 'args'
            environ = 'environ'

        class Output:
            out_file = 'out_file'
            md1d_file = 'md1d_file'
            oned_file = 'oned_file'
            oned_matrix_save = 'oned_matrix_save'

    class Warp:
        class Input:
            in_file = 'in_file'
            out_file = 'out_file'
            tta2mni = 'tta2mni'
            mni2tta = 'mni2tta'
            matparent = 'matparent'
            oblique_parent = 'oblique_parent'
            deoblique = 'deoblique'
            interp = 'interp'
            gridset = 'gridset'
            newgrid = 'newgrid'
            zpad = 'zpad'
            verbose = 'verbose'
            save_warp = 'save_warp'
            num_threads = 'num_threads'
            outputtype = 'outputtype'
            args = 'args'
            environ = 'environ'

        class Output:
            out_file = 'out_file'
            warp_file = 'warp_file'

    class Deconvolve:
        class Input:
            in_files = 'in_files'
            sat = 'sat'
            trans = 'trans'
            noblock = 'noblock'
            force_TR = 'force_TR'
            input1D = 'input1D'
            TR_1D = 'TR_1D'
            legendre = 'legendre'
            nolegendre = 'nolegendre'
            nodmbase = 'nodmbase'
            dmbase = 'dmbase'
            svd = 'svd'
            nosvd = 'nosvd'
            rmsmin = 'rmsmin'
            nocond = 'nocond'
            singvals = 'singvals'
            goforit = 'goforit'
            allzero_OK = 'allzero_OK'
            dname = 'dname'
            mask = 'mask'
            automask = 'automask'
            STATmask = 'STATmask'
            censor = 'censor'
            polort = 'polort'
            ortvec = 'ortvec'
            x1D = 'x1D'
            x1D_stop = 'x1D_stop'
            cbucket = 'cbucket'
            out_file = 'out_file'
            num_threads = 'num_threads'
            fout = 'fout'
            rout = 'rout'
            tout = 'tout'
            vout = 'vout'
            nofdr = 'nofdr'
            global_times = 'global_times'
            local_times = 'local_times'
            num_stimts = 'num_stimts'
            stim_times = 'stim_times'
            stim_label = 'stim_label'
            stim_times_subtract = 'stim_times_subtract'
            num_glt = 'num_glt'
            gltsym = 'gltsym'
            glt_label = 'glt_label'
            outputtype = 'outputtype'
            args = 'args'
            environ = 'environ'

        class Output:
            out_file = 'out_file'
            reml_script = 'reml_script'
            x1D = 'x1D'
            cbucket = 'cbucket'

    class Remlfit:
        class Input:
            in_files = 'in_files'
            matrix = 'matrix'
            polort = 'polort'
            matim = 'matim'
            mask = 'mask'
            automask = 'automask'
            STATmask = 'STATmask'
            addbase = 'addbase'
            slibase = 'slibase'
            slibase_sm = 'slibase_sm'
            usetemp = 'usetemp'
            nodmbase = 'nodmbase'
            dsort = 'dsort'
            dsort_nods = 'dsort_nods'
            fout = 'fout'
            rout = 'rout'
            tout = 'tout'
            nofdr = 'nofdr'
            nobout = 'nobout'
            gltsym = 'gltsym'
            out_file = 'out_file'
            var_file = 'var_file'
            rbeta_file = 'rbeta_file'
            glt_file = 'glt_file'
            fitts_file = 'fitts_file'
            errts_file = 'errts_file'
            wherr_file = 'wherr_file'
            quiet = 'quiet'
            verb = 'verb'
            goforit = 'goforit'
            ovar = 'ovar'
            obeta = 'obeta'
            obuck = 'obuck'
            oglt = 'oglt'
            ofitts = 'ofitts'
            oerrts = 'oerrts'
            num_threads = 'num_threads'
            outputtype = 'outputtype'
            args = 'args'
            environ = 'environ'

        class Output:
            out_file = 'out_file'
            var_file = 'var_file'
            rbeta_file = 'rbeta_file'
            glt_file = 'glt_file'
            fitts_file = 'fitts_file'
            errts_file = 'errts_file'
            wherr_file = 'wherr_file'
            ovar = 'ovar'
            obeta = 'obeta'
            obuck = 'obuck'
            oglt = 'oglt'
            ofitts = 'ofitts'
            oerrts = 'oerrts'

    class Synthesize:
        class Input:
            cbucket = 'cbucket'
            matrix = 'matrix'
            select = 'select'
            out_file = 'out_file'
            dry_run = 'dry_run'
            TR = 'TR'
            cenfill = 'cenfill'
            num_threads = 'num_threads'
            outputtype = 'outputtype'
            args = 'args'
            environ = 'environ'

        class Output:
            out_file = 'out_file'


"""
Autogenerated from NiPype
"""


class FSL:
    class ApplyWarp:
        class Input:
            in_file = 'in_file'
            out_file = 'out_file'
            ref_file = 'ref_file'
            field_file = 'field_file'
            abswarp = 'abswarp'
            relwarp = 'relwarp'
            datatype = 'datatype'
            supersample = 'supersample'
            superlevel = 'superlevel'
            premat = 'premat'
            postmat = 'postmat'
            mask_file = 'mask_file'
            interp = 'interp'
            output_type = 'output_type'
            args = 'args'
            environ = 'environ'

        class Output:
            out_file = 'out_file'

    class ApplyXFM:
        class Input:
            apply_xfm = 'apply_xfm'
            in_file = 'in_file'
            reference = 'reference'
            out_file = 'out_file'
            out_matrix_file = 'out_matrix_file'
            out_log = 'out_log'
            in_matrix_file = 'in_matrix_file'
            apply_isoxfm = 'apply_isoxfm'
            datatype = 'datatype'
            cost = 'cost'
            cost_func = 'cost_func'
            uses_qform = 'uses_qform'
            display_init = 'display_init'
            angle_rep = 'angle_rep'
            interp = 'interp'
            sinc_width = 'sinc_width'
            sinc_window = 'sinc_window'
            bins = 'bins'
            dof = 'dof'
            no_resample = 'no_resample'
            force_scaling = 'force_scaling'
            min_sampling = 'min_sampling'
            padding_size = 'padding_size'
            searchr_x = 'searchr_x'
            searchr_y = 'searchr_y'
            searchr_z = 'searchr_z'
            no_search = 'no_search'
            coarse_search = 'coarse_search'
            fine_search = 'fine_search'
            schedule = 'schedule'
            ref_weight = 'ref_weight'
            in_weight = 'in_weight'
            no_clamp = 'no_clamp'
            no_resample_blur = 'no_resample_blur'
            rigid2D = 'rigid2D'
            save_log = 'save_log'
            verbose = 'verbose'
            bgvalue = 'bgvalue'
            wm_seg = 'wm_seg'
            wmcoords = 'wmcoords'
            wmnorms = 'wmnorms'
            fieldmap = 'fieldmap'
            fieldmapmask = 'fieldmapmask'
            pedir = 'pedir'
            echospacing = 'echospacing'
            bbrtype = 'bbrtype'
            bbrslope = 'bbrslope'
            output_type = 'output_type'
            args = 'args'
            environ = 'environ'

    class BET:
        class Input:
            in_file = 'in_file'
            out_file = 'out_file'
            outline = 'outline'
            mask = 'mask'
            skull = 'skull'
            no_output = 'no_output'
            frac = 'frac'
            vertical_gradient = 'vertical_gradient'
            radius = 'radius'
            center = 'center'
            threshold = 'threshold'
            mesh = 'mesh'
            robust = 'robust'
            padding = 'padding'
            remove_eyes = 'remove_eyes'
            surfaces = 'surfaces'
            t2_guided = 't2_guided'
            functional = 'functional'
            reduce_bias = 'reduce_bias'
            output_type = 'output_type'
            args = 'args'
            environ = 'environ'

        class Output:
            out_file = 'out_file'
            mask_file = 'mask_file'
            outline_file = 'outline_file'
            meshfile = 'meshfile'
            inskull_mask_file = 'inskull_mask_file'
            inskull_mesh_file = 'inskull_mesh_file'
            outskull_mask_file = 'outskull_mask_file'
            outskull_mesh_file = 'outskull_mesh_file'
            outskin_mask_file = 'outskin_mask_file'
            outskin_mesh_file = 'outskin_mesh_file'
            skull_mask_file = 'skull_mask_file'
            skull_file = 'skull_file'

    class FAST:
        class Input:
            in_files = 'in_files'
            out_basename = 'out_basename'
            number_classes = 'number_classes'
            output_biasfield = 'output_biasfield'
            output_biascorrected = 'output_biascorrected'
            img_type = 'img_type'
            bias_iters = 'bias_iters'
            bias_lowpass = 'bias_lowpass'
            init_seg_smooth = 'init_seg_smooth'
            segments = 'segments'
            init_transform = 'init_transform'
            other_priors = 'other_priors'
            no_pve = 'no_pve'
            no_bias = 'no_bias'
            use_priors = 'use_priors'
            segment_iters = 'segment_iters'
            mixel_smooth = 'mixel_smooth'
            iters_afterbias = 'iters_afterbias'
            hyper = 'hyper'
            verbose = 'verbose'
            manual_seg = 'manual_seg'
            probability_maps = 'probability_maps'
            output_type = 'output_type'
            args = 'args'
            environ = 'environ'

        class Output:
            tissue_class_map = 'tissue_class_map'
            tissue_class_files = 'tissue_class_files'
            restored_image = 'restored_image'
            mixeltype = 'mixeltype'
            partial_volume_map = 'partial_volume_map'
            partial_volume_files = 'partial_volume_files'
            bias_field = 'bias_field'
            probability_maps = 'probability_maps'

    class FIRST:
        class Input:
            in_file = 'in_file'
            out_file = 'out_file'
            verbose = 'verbose'
            brain_extracted = 'brain_extracted'
            no_cleanup = 'no_cleanup'
            method = 'method'
            method_as_numerical_threshold = 'method_as_numerical_threshold'
            list_of_specific_structures = 'list_of_specific_structures'
            affine_file = 'affine_file'
            output_type = 'output_type'
            args = 'args'
            environ = 'environ'

        class Output:
            vtk_surfaces = 'vtk_surfaces'
            bvars = 'bvars'
            original_segmentations = 'original_segmentations'
            segmentation_file = 'segmentation_file'

    class FLIRT:
        class Input:
            in_file = 'in_file'
            reference = 'reference'
            out_file = 'out_file'
            out_matrix_file = 'out_matrix_file'
            out_log = 'out_log'
            in_matrix_file = 'in_matrix_file'
            apply_xfm = 'apply_xfm'
            apply_isoxfm = 'apply_isoxfm'
            datatype = 'datatype'
            cost = 'cost'
            cost_func = 'cost_func'
            uses_qform = 'uses_qform'
            display_init = 'display_init'
            angle_rep = 'angle_rep'
            interp = 'interp'
            sinc_width = 'sinc_width'
            sinc_window = 'sinc_window'
            bins = 'bins'
            dof = 'dof'
            no_resample = 'no_resample'
            force_scaling = 'force_scaling'
            min_sampling = 'min_sampling'
            padding_size = 'padding_size'
            searchr_x = 'searchr_x'
            searchr_y = 'searchr_y'
            searchr_z = 'searchr_z'
            no_search = 'no_search'
            coarse_search = 'coarse_search'
            fine_search = 'fine_search'
            schedule = 'schedule'
            ref_weight = 'ref_weight'
            in_weight = 'in_weight'
            no_clamp = 'no_clamp'
            no_resample_blur = 'no_resample_blur'
            rigid2D = 'rigid2D'
            save_log = 'save_log'
            verbose = 'verbose'
            bgvalue = 'bgvalue'
            wm_seg = 'wm_seg'
            wmcoords = 'wmcoords'
            wmnorms = 'wmnorms'
            fieldmap = 'fieldmap'
            fieldmapmask = 'fieldmapmask'
            pedir = 'pedir'
            echospacing = 'echospacing'
            bbrtype = 'bbrtype'
            bbrslope = 'bbrslope'
            output_type = 'output_type'
            args = 'args'
            environ = 'environ'

        class Output:
            out_file = 'out_file'
            out_matrix_file = 'out_matrix_file'
            out_log = 'out_log'

    class FNIRT:
        class Input:
            ref_file = 'ref_file'
            in_file = 'in_file'
            affine_file = 'affine_file'
            inwarp_file = 'inwarp_file'
            in_intensitymap_file = 'in_intensitymap_file'
            fieldcoeff_file = 'fieldcoeff_file'
            warped_file = 'warped_file'
            field_file = 'field_file'
            jacobian_file = 'jacobian_file'
            modulatedref_file = 'modulatedref_file'
            out_intensitymap_file = 'out_intensitymap_file'
            log_file = 'log_file'
            config_file = 'config_file'
            refmask_file = 'refmask_file'
            inmask_file = 'inmask_file'
            skip_refmask = 'skip_refmask'
            skip_inmask = 'skip_inmask'
            apply_refmask = 'apply_refmask'
            apply_inmask = 'apply_inmask'
            skip_implicit_ref_masking = 'skip_implicit_ref_masking'
            skip_implicit_in_masking = 'skip_implicit_in_masking'
            refmask_val = 'refmask_val'
            inmask_val = 'inmask_val'
            max_nonlin_iter = 'max_nonlin_iter'
            subsampling_scheme = 'subsampling_scheme'
            warp_resolution = 'warp_resolution'
            spline_order = 'spline_order'
            in_fwhm = 'in_fwhm'
            ref_fwhm = 'ref_fwhm'
            regularization_model = 'regularization_model'
            regularization_lambda = 'regularization_lambda'
            skip_lambda_ssq = 'skip_lambda_ssq'
            jacobian_range = 'jacobian_range'
            derive_from_ref = 'derive_from_ref'
            intensity_mapping_model = 'intensity_mapping_model'
            intensity_mapping_order = 'intensity_mapping_order'
            biasfield_resolution = 'biasfield_resolution'
            bias_regularization_lambda = 'bias_regularization_lambda'
            skip_intensity_mapping = 'skip_intensity_mapping'
            apply_intensity_mapping = 'apply_intensity_mapping'
            hessian_precision = 'hessian_precision'
            output_type = 'output_type'
            args = 'args'
            environ = 'environ'

        class Output:
            fieldcoeff_file = 'fieldcoeff_file'
            warped_file = 'warped_file'
            field_file = 'field_file'
            jacobian_file = 'jacobian_file'
            modulatedref_file = 'modulatedref_file'
            out_intensitymap_file = 'out_intensitymap_file'
            log_file = 'log_file'

    class FUGUE:
        class Input:
            in_file = 'in_file'
            shift_in_file = 'shift_in_file'
            phasemap_in_file = 'phasemap_in_file'
            fmap_in_file = 'fmap_in_file'
            unwarped_file = 'unwarped_file'
            warped_file = 'warped_file'
            forward_warping = 'forward_warping'
            dwell_to_asym_ratio = 'dwell_to_asym_ratio'
            dwell_time = 'dwell_time'
            asym_se_time = 'asym_se_time'
            median_2dfilter = 'median_2dfilter'
            despike_2dfilter = 'despike_2dfilter'
            no_gap_fill = 'no_gap_fill'
            no_extend = 'no_extend'
            smooth2d = 'smooth2d'
            smooth3d = 'smooth3d'
            poly_order = 'poly_order'
            fourier_order = 'fourier_order'
            pava = 'pava'
            despike_threshold = 'despike_threshold'
            unwarp_direction = 'unwarp_direction'
            phase_conjugate = 'phase_conjugate'
            icorr = 'icorr'
            icorr_only = 'icorr_only'
            mask_file = 'mask_file'
            nokspace = 'nokspace'
            save_shift = 'save_shift'
            shift_out_file = 'shift_out_file'
            save_unmasked_shift = 'save_unmasked_shift'
            save_fmap = 'save_fmap'
            fmap_out_file = 'fmap_out_file'
            save_unmasked_fmap = 'save_unmasked_fmap'
            output_type = 'output_type'
            args = 'args'
            environ = 'environ'

        class Output:
            unwarped_file = 'unwarped_file'
            warped_file = 'warped_file'
            shift_out_file = 'shift_out_file'
            fmap_out_file = 'fmap_out_file'

    class MCFLIRT:
        class Input:
            in_file = 'in_file'
            out_file = 'out_file'
            cost = 'cost'
            bins = 'bins'
            dof = 'dof'
            ref_vol = 'ref_vol'
            scaling = 'scaling'
            smooth = 'smooth'
            rotation = 'rotation'
            stages = 'stages'
            init = 'init'
            interpolation = 'interpolation'
            use_gradient = 'use_gradient'
            use_contour = 'use_contour'
            mean_vol = 'mean_vol'
            stats_imgs = 'stats_imgs'
            save_mats = 'save_mats'
            save_plots = 'save_plots'
            save_rms = 'save_rms'
            ref_file = 'ref_file'
            output_type = 'output_type'
            args = 'args'
            environ = 'environ'

        class Output:
            out_file = 'out_file'
            variance_img = 'variance_img'
            std_img = 'std_img'
            mean_img = 'mean_img'
            par_file = 'par_file'
            mat_file = 'mat_file'
            rms_files = 'rms_files'

    class PRELUDE:
        class Input:
            complex_phase_file = 'complex_phase_file'
            magnitude_file = 'magnitude_file'
            phase_file = 'phase_file'
            unwrapped_phase_file = 'unwrapped_phase_file'
            num_partitions = 'num_partitions'
            labelprocess2d = 'labelprocess2d'
            process2d = 'process2d'
            process3d = 'process3d'
            threshold = 'threshold'
            mask_file = 'mask_file'
            start = 'start'
            end = 'end'
            savemask_file = 'savemask_file'
            rawphase_file = 'rawphase_file'
            label_file = 'label_file'
            removeramps = 'removeramps'
            output_type = 'output_type'
            args = 'args'
            environ = 'environ'

        class Output:
            unwrapped_phase_file = 'unwrapped_phase_file'

    class SUSAN:
        class Input:
            in_file = 'in_file'
            brightness_threshold = 'brightness_threshold'
            fwhm = 'fwhm'
            dimension = 'dimension'
            use_median = 'use_median'
            usans = 'usans'
            out_file = 'out_file'
            output_type = 'output_type'
            args = 'args'
            environ = 'environ'

        class Output:
            smoothed_file = 'smoothed_file'

    class SliceTimer:
        class Input:
            in_file = 'in_file'
            out_file = 'out_file'
            index_dir = 'index_dir'
            time_repetition = 'time_repetition'
            slice_direction = 'slice_direction'
            interleaved = 'interleaved'
            custom_timings = 'custom_timings'
            global_shift = 'global_shift'
            custom_order = 'custom_order'
            output_type = 'output_type'
            args = 'args'
            environ = 'environ'

        class Output:
            slice_time_corrected_file = 'slice_time_corrected_file'

    class Cluster:
        class Input:
            in_file = 'in_file'
            threshold = 'threshold'
            out_index_file = 'out_index_file'
            out_threshold_file = 'out_threshold_file'
            out_localmax_txt_file = 'out_localmax_txt_file'
            out_localmax_vol_file = 'out_localmax_vol_file'
            out_size_file = 'out_size_file'
            out_max_file = 'out_max_file'
            out_mean_file = 'out_mean_file'
            out_pval_file = 'out_pval_file'
            pthreshold = 'pthreshold'
            peak_distance = 'peak_distance'
            cope_file = 'cope_file'
            volume = 'volume'
            dlh = 'dlh'
            fractional = 'fractional'
            connectivity = 'connectivity'
            use_mm = 'use_mm'
            find_min = 'find_min'
            no_table = 'no_table'
            minclustersize = 'minclustersize'
            xfm_file = 'xfm_file'
            std_space_file = 'std_space_file'
            num_maxima = 'num_maxima'
            warpfield_file = 'warpfield_file'
            output_type = 'output_type'
            args = 'args'
            environ = 'environ'

        class Output:
            index_file = 'index_file'
            threshold_file = 'threshold_file'
            localmax_txt_file = 'localmax_txt_file'
            localmax_vol_file = 'localmax_vol_file'
            size_file = 'size_file'
            max_file = 'max_file'
            mean_file = 'mean_file'
            pval_file = 'pval_file'

    class ContrastMgr:
        class Input:
            tcon_file = 'tcon_file'
            fcon_file = 'fcon_file'
            param_estimates = 'param_estimates'
            corrections = 'corrections'
            dof_file = 'dof_file'
            sigmasquareds = 'sigmasquareds'
            contrast_num = 'contrast_num'
            suffix = 'suffix'
            output_type = 'output_type'
            args = 'args'
            environ = 'environ'

        class Output:
            copes = 'copes'
            varcopes = 'varcopes'
            zstats = 'zstats'
            tstats = 'tstats'
            fstats = 'fstats'
            zfstats = 'zfstats'
            neffs = 'neffs'

    class DualRegression:
        class Input:
            in_files = 'in_files'
            group_IC_maps_4D = 'group_IC_maps_4D'
            des_norm = 'des_norm'
            one_sample_group_mean = 'one_sample_group_mean'
            design_file = 'design_file'
            con_file = 'con_file'
            n_perm = 'n_perm'
            out_dir = 'out_dir'
            output_type = 'output_type'
            args = 'args'
            environ = 'environ'

        class Output:
            out_dir = 'out_dir'

    class FEAT:
        class Input:
            fsf_file = 'fsf_file'
            output_type = 'output_type'
            args = 'args'
            environ = 'environ'

        class Output:
            feat_dir = 'feat_dir'

    class FEATModel:
        class Input:
            fsf_file = 'fsf_file'
            ev_files = 'ev_files'
            output_type = 'output_type'
            args = 'args'
            environ = 'environ'

        class Output:
            design_file = 'design_file'
            design_image = 'design_image'
            design_cov = 'design_cov'
            con_file = 'con_file'
            fcon_file = 'fcon_file'

    class FEATRegister:
        class Input:
            feat_dirs = 'feat_dirs'
            reg_image = 'reg_image'
            reg_dof = 'reg_dof'

        class Output:
            fsf_file = 'fsf_file'

    class FILMGLS:
        class Input:
            in_file = 'in_file'
            design_file = 'design_file'
            threshold = 'threshold'
            smooth_autocorr = 'smooth_autocorr'
            mask_size = 'mask_size'
            brightness_threshold = 'brightness_threshold'
            full_data = 'full_data'
            autocorr_estimate_only = 'autocorr_estimate_only'
            fit_armodel = 'fit_armodel'
            tukey_window = 'tukey_window'
            multitaper_product = 'multitaper_product'
            use_pava = 'use_pava'
            autocorr_noestimate = 'autocorr_noestimate'
            output_pwdata = 'output_pwdata'
            results_dir = 'results_dir'
            output_type = 'output_type'
            args = 'args'
            environ = 'environ'

        class Output:
            param_estimates = 'param_estimates'
            residual4d = 'residual4d'
            dof_file = 'dof_file'
            sigmasquareds = 'sigmasquareds'
            results_dir = 'results_dir'
            corrections = 'corrections'
            thresholdac = 'thresholdac'
            logfile = 'logfile'

    class FLAMEO:
        class Input:
            cope_file = 'cope_file'
            var_cope_file = 'var_cope_file'
            dof_var_cope_file = 'dof_var_cope_file'
            mask_file = 'mask_file'
            design_file = 'design_file'
            t_con_file = 't_con_file'
            f_con_file = 'f_con_file'
            cov_split_file = 'cov_split_file'
            run_mode = 'run_mode'
            n_jumps = 'n_jumps'
            burnin = 'burnin'
            sample_every = 'sample_every'
            fix_mean = 'fix_mean'
            infer_outliers = 'infer_outliers'
            no_pe_outputs = 'no_pe_outputs'
            sigma_dofs = 'sigma_dofs'
            outlier_iter = 'outlier_iter'
            log_dir = 'log_dir'
            output_type = 'output_type'
            args = 'args'
            environ = 'environ'

        class Output:
            pes = 'pes'
            res4d = 'res4d'
            copes = 'copes'
            var_copes = 'var_copes'
            zstats = 'zstats'
            tstats = 'tstats'
            zfstats = 'zfstats'
            fstats = 'fstats'
            mrefvars = 'mrefvars'
            tdof = 'tdof'
            weights = 'weights'
            stats_dir = 'stats_dir'

    class GLM:
        class Input:
            in_file = 'in_file'
            out_file = 'out_file'
            design = 'design'
            contrasts = 'contrasts'
            mask = 'mask'
            dof = 'dof'
            des_norm = 'des_norm'
            dat_norm = 'dat_norm'
            var_norm = 'var_norm'
            demean = 'demean'
            out_cope = 'out_cope'
            out_z_name = 'out_z_name'
            out_t_name = 'out_t_name'
            out_p_name = 'out_p_name'
            out_f_name = 'out_f_name'
            out_pf_name = 'out_pf_name'
            out_res_name = 'out_res_name'
            out_varcb_name = 'out_varcb_name'
            out_sigsq_name = 'out_sigsq_name'
            out_data_name = 'out_data_name'
            out_vnscales_name = 'out_vnscales_name'
            output_type = 'output_type'
            args = 'args'
            environ = 'environ'

        class Output:
            out_file = 'out_file'
            out_cope = 'out_cope'
            out_z = 'out_z'
            out_t = 'out_t'
            out_p = 'out_p'
            out_f = 'out_f'
            out_pf = 'out_pf'
            out_res = 'out_res'
            out_varcb = 'out_varcb'
            out_sigsq = 'out_sigsq'
            out_data = 'out_data'
            out_vnscales = 'out_vnscales'

    class L2Model:
        class Input:
            num_copes = 'num_copes'

        class Output:
            design_mat = 'design_mat'
            design_con = 'design_con'
            design_grp = 'design_grp'

    class Level1Design:
        class Input:
            interscan_interval = 'interscan_interval'
            session_info = 'session_info'
            bases = 'bases'
            orthogonalization = 'orthogonalization'
            model_serial_correlations = 'model_serial_correlations'
            contrasts = 'contrasts'

        class Output:
            fsf_files = 'fsf_files'
            ev_files = 'ev_files'

    class MELODIC:
        class Input:
            in_files = 'in_files'
            out_dir = 'out_dir'
            mask = 'mask'
            no_mask = 'no_mask'
            update_mask = 'update_mask'
            no_bet = 'no_bet'
            bg_threshold = 'bg_threshold'
            dim = 'dim'
            dim_est = 'dim_est'
            sep_whiten = 'sep_whiten'
            sep_vn = 'sep_vn'
            migp = 'migp'
            migpN = 'migpN'
            migp_shuffle = 'migp_shuffle'
            migp_factor = 'migp_factor'
            num_ICs = 'num_ICs'
            approach = 'approach'
            non_linearity = 'non_linearity'
            var_norm = 'var_norm'
            pbsc = 'pbsc'
            cov_weight = 'cov_weight'
            epsilon = 'epsilon'
            epsilonS = 'epsilonS'
            maxit = 'maxit'
            max_restart = 'max_restart'
            mm_thresh = 'mm_thresh'
            no_mm = 'no_mm'
            ICs = 'ICs'
            mix = 'mix'
            smode = 'smode'
            rem_cmp = 'rem_cmp'
            report = 'report'
            bg_image = 'bg_image'
            tr_sec = 'tr_sec'
            log_power = 'log_power'
            t_des = 't_des'
            t_con = 't_con'
            s_des = 's_des'
            s_con = 's_con'
            out_all = 'out_all'
            out_unmix = 'out_unmix'
            out_stats = 'out_stats'
            out_pca = 'out_pca'
            out_white = 'out_white'
            out_orig = 'out_orig'
            out_mean = 'out_mean'
            report_maps = 'report_maps'
            remove_deriv = 'remove_deriv'
            output_type = 'output_type'
            args = 'args'
            environ = 'environ'

        class Output:
            out_dir = 'out_dir'
            report_dir = 'report_dir'

    class MultipleRegressDesign:
        class Input:
            contrasts = 'contrasts'
            regressors = 'regressors'
            groups = 'groups'

        class Output:
            design_mat = 'design_mat'
            design_con = 'design_con'
            design_fts = 'design_fts'
            design_grp = 'design_grp'

    class Randomise:
        class Input:
            in_file = 'in_file'
            base_name = 'base_name'
            design_mat = 'design_mat'
            tcon = 'tcon'
            fcon = 'fcon'
            mask = 'mask'
            x_block_labels = 'x_block_labels'
            demean = 'demean'
            one_sample_group_mean = 'one_sample_group_mean'
            show_total_perms = 'show_total_perms'
            show_info_parallel_mode = 'show_info_parallel_mode'
            vox_p_values = 'vox_p_values'
            tfce = 'tfce'
            tfce2D = 'tfce2D'
            f_only = 'f_only'
            raw_stats_imgs = 'raw_stats_imgs'
            p_vec_n_dist_files = 'p_vec_n_dist_files'
            num_perm = 'num_perm'
            seed = 'seed'
            var_smooth = 'var_smooth'
            c_thresh = 'c_thresh'
            cm_thresh = 'cm_thresh'
            f_c_thresh = 'f_c_thresh'
            f_cm_thresh = 'f_cm_thresh'
            tfce_H = 'tfce_H'
            tfce_E = 'tfce_E'
            tfce_C = 'tfce_C'
            output_type = 'output_type'
            args = 'args'
            environ = 'environ'

        class Output:
            tstat_files = 'tstat_files'
            fstat_files = 'fstat_files'
            t_p_files = 't_p_files'
            f_p_files = 'f_p_files'
            t_corrected_p_files = 't_corrected_p_files'
            f_corrected_p_files = 'f_corrected_p_files'

    class SMM:
        class Input:
            spatial_data_file = 'spatial_data_file'
            mask = 'mask'
            no_deactivation_class = 'no_deactivation_class'
            output_type = 'output_type'
            args = 'args'
            environ = 'environ'

        class Output:
            null_p_map = 'null_p_map'
            activation_p_map = 'activation_p_map'
            deactivation_p_map = 'deactivation_p_map'

    class SmoothEstimate:
        class Input:
            dof = 'dof'
            mask_file = 'mask_file'
            residual_fit_file = 'residual_fit_file'
            zstat_file = 'zstat_file'
            output_type = 'output_type'
            args = 'args'
            environ = 'environ'

        class Output:
            dlh = 'dlh'
            volume = 'volume'
            resels = 'resels'


"""
Autogenerated from NiPype
"""


class SPM:
    class ApplyDeformations:
        class Input:
            in_files = 'in_files'
            deformation_field = 'deformation_field'
            reference_volume = 'reference_volume'
            interp = 'interp'

        class Output:
            out_files = 'out_files'

    class ApplyVDM:
        class Input:
            in_files = 'in_files'
            vdmfile = 'vdmfile'
            distortion_direction = 'distortion_direction'
            write_which = 'write_which'
            interpolation = 'interpolation'
            write_wrap = 'write_wrap'
            write_mask = 'write_mask'
            out_prefix = 'out_prefix'

        class Output:
            out_files = 'out_files'
            mean_image = 'mean_image'

    class Coregister:
        class Input:
            target = 'target'
            source = 'source'
            jobtype = 'jobtype'
            apply_to_files = 'apply_to_files'
            cost_function = 'cost_function'
            fwhm = 'fwhm'
            separation = 'separation'
            tolerance = 'tolerance'
            write_interp = 'write_interp'
            write_wrap = 'write_wrap'
            write_mask = 'write_mask'
            out_prefix = 'out_prefix'

        class Output:
            coregistered_source = 'coregistered_source'
            coregistered_files = 'coregistered_files'

    class CreateWarped:
        class Input:
            image_files = 'image_files'
            flowfield_files = 'flowfield_files'
            iterations = 'iterations'
            interp = 'interp'
            modulate = 'modulate'

        class Output:
            warped_files = 'warped_files'

    class DARTEL:
        class Input:
            image_files = 'image_files'
            template_prefix = 'template_prefix'
            regularization_form = 'regularization_form'
            iteration_parameters = 'iteration_parameters'
            optimization_parameters = 'optimization_parameters'

        class Output:
            final_template_file = 'final_template_file'
            template_files = 'template_files'
            dartel_flow_fields = 'dartel_flow_fields'

    class DARTELNorm2MNI:
        class Input:
            template_file = 'template_file'
            flowfield_files = 'flowfield_files'
            apply_to_files = 'apply_to_files'
            voxel_size = 'voxel_size'
            bounding_box = 'bounding_box'
            modulate = 'modulate'
            fwhm = 'fwhm'

        class Output:
            normalized_files = 'normalized_files'
            normalization_parameter_file = 'normalization_parameter_file'

    class FieldMap:
        class Input:
            jobtype = 'jobtype'
            phase_file = 'phase_file'
            magnitude_file = 'magnitude_file'
            echo_times = 'echo_times'
            maskbrain = 'maskbrain'
            blip_direction = 'blip_direction'
            total_readout_time = 'total_readout_time'
            epifm = 'epifm'
            jacobian_modulation = 'jacobian_modulation'
            method = 'method'
            unwarp_fwhm = 'unwarp_fwhm'
            pad = 'pad'
            ws = 'ws'
            template = 'template'
            mask_fwhm = 'mask_fwhm'
            nerode = 'nerode'
            ndilate = 'ndilate'
            thresh = 'thresh'
            reg = 'reg'
            epi_file = 'epi_file'
            matchvdm = 'matchvdm'
            sessname = 'sessname'
            writeunwarped = 'writeunwarped'
            anat_file = 'anat_file'
            matchanat = 'matchanat'

        class Output:
            vdm = 'vdm'

    class MultiChannelNewSegment:
        class Input:
            channels = 'channels'
            tissues = 'tissues'
            affine_regularization = 'affine_regularization'
            warping_regularization = 'warping_regularization'
            sampling_distance = 'sampling_distance'
            write_deformation_fields = 'write_deformation_fields'

        class Output:
            native_class_images = 'native_class_images'
            dartel_input_images = 'dartel_input_images'
            normalized_class_images = 'normalized_class_images'
            modulated_class_images = 'modulated_class_images'
            transformation_mat = 'transformation_mat'
            bias_corrected_images = 'bias_corrected_images'
            bias_field_images = 'bias_field_images'
            forward_deformation_field = 'forward_deformation_field'
            inverse_deformation_field = 'inverse_deformation_field'

    class NewSegment:
        class Input:
            channel_files = 'channel_files'
            channel_info = 'channel_info'
            tissues = 'tissues'
            affine_regularization = 'affine_regularization'
            warping_regularization = 'warping_regularization'
            sampling_distance = 'sampling_distance'
            write_deformation_fields = 'write_deformation_fields'

        class Output:
            native_class_images = 'native_class_images'
            dartel_input_images = 'dartel_input_images'
            normalized_class_images = 'normalized_class_images'
            modulated_class_images = 'modulated_class_images'
            transformation_mat = 'transformation_mat'
            bias_corrected_images = 'bias_corrected_images'
            bias_field_images = 'bias_field_images'
            forward_deformation_field = 'forward_deformation_field'
            inverse_deformation_field = 'inverse_deformation_field'

    class Normalize:
        class Input:
            template = 'template'
            source = 'source'
            jobtype = 'jobtype'
            apply_to_files = 'apply_to_files'
            parameter_file = 'parameter_file'
            source_weight = 'source_weight'
            template_weight = 'template_weight'
            source_image_smoothing = 'source_image_smoothing'
            template_image_smoothing = 'template_image_smoothing'
            affine_regularization_type = 'affine_regularization_type'
            DCT_period_cutoff = 'DCT_period_cutoff'
            nonlinear_iterations = 'nonlinear_iterations'
            nonlinear_regularization = 'nonlinear_regularization'
            write_preserve = 'write_preserve'
            write_bounding_box = 'write_bounding_box'
            write_voxel_sizes = 'write_voxel_sizes'
            write_interp = 'write_interp'
            write_wrap = 'write_wrap'
            out_prefix = 'out_prefix'

        class Output:
            normalization_parameters = 'normalization_parameters'
            normalized_source = 'normalized_source'
            normalized_files = 'normalized_files'

    class Normalize12:
        class Input:
            image_to_align = 'image_to_align'
            apply_to_files = 'apply_to_files'
            deformation_file = 'deformation_file'
            jobtype = 'jobtype'
            bias_regularization = 'bias_regularization'
            bias_fwhm = 'bias_fwhm'
            tpm = 'tpm'
            affine_regularization_type = 'affine_regularization_type'
            warping_regularization = 'warping_regularization'
            smoothness = 'smoothness'
            sampling_distance = 'sampling_distance'
            write_bounding_box = 'write_bounding_box'
            write_voxel_sizes = 'write_voxel_sizes'
            write_interp = 'write_interp'
            out_prefix = 'out_prefix'

        class Output:
            deformation_field = 'deformation_field'
            normalized_image = 'normalized_image'
            normalized_files = 'normalized_files'

    class Realign:
        class Input:
            in_files = 'in_files'
            jobtype = 'jobtype'
            quality = 'quality'
            fwhm = 'fwhm'
            separation = 'separation'
            register_to_mean = 'register_to_mean'
            weight_img = 'weight_img'
            interp = 'interp'
            wrap = 'wrap'
            write_which = 'write_which'
            write_interp = 'write_interp'
            write_wrap = 'write_wrap'
            write_mask = 'write_mask'
            out_prefix = 'out_prefix'

        class Output:
            mean_image = 'mean_image'
            modified_in_files = 'modified_in_files'
            realigned_files = 'realigned_files'
            realignment_parameters = 'realignment_parameters'

    class RealignUnwarp:
        class Input:
            in_files = 'in_files'
            phase_map = 'phase_map'
            quality = 'quality'
            fwhm = 'fwhm'
            separation = 'separation'
            register_to_mean = 'register_to_mean'
            weight_img = 'weight_img'
            interp = 'interp'
            wrap = 'wrap'
            est_basis_func = 'est_basis_func'
            est_reg_order = 'est_reg_order'
            est_reg_factor = 'est_reg_factor'
            est_jacobian_deformations = 'est_jacobian_deformations'
            est_first_order_effects = 'est_first_order_effects'
            est_second_order_effects = 'est_second_order_effects'
            est_unwarp_fwhm = 'est_unwarp_fwhm'
            est_re_est_mov_par = 'est_re_est_mov_par'
            est_num_of_iterations = 'est_num_of_iterations'
            est_taylor_expansion_point = 'est_taylor_expansion_point'
            reslice_which = 'reslice_which'
            reslice_interp = 'reslice_interp'
            reslice_wrap = 'reslice_wrap'
            reslice_mask = 'reslice_mask'
            out_prefix = 'out_prefix'

        class Output:
            mean_image = 'mean_image'
            modified_in_files = 'modified_in_files'
            realigned_unwarped_files = 'realigned_unwarped_files'
            realignment_parameters = 'realignment_parameters'

    class Segment:
        class Input:
            data = 'data'
            gm_output_type = 'gm_output_type'
            wm_output_type = 'wm_output_type'
            csf_output_type = 'csf_output_type'
            save_bias_corrected = 'save_bias_corrected'
            clean_masks = 'clean_masks'
            tissue_prob_maps = 'tissue_prob_maps'
            gaussians_per_class = 'gaussians_per_class'
            affine_regularization = 'affine_regularization'
            warping_regularization = 'warping_regularization'
            warp_frequency_cutoff = 'warp_frequency_cutoff'
            bias_regularization = 'bias_regularization'
            bias_fwhm = 'bias_fwhm'
            sampling_distance = 'sampling_distance'
            mask_image = 'mask_image'

        class Output:
            native_gm_image = 'native_gm_image'
            normalized_gm_image = 'normalized_gm_image'
            modulated_gm_image = 'modulated_gm_image'
            native_wm_image = 'native_wm_image'
            normalized_wm_image = 'normalized_wm_image'
            modulated_wm_image = 'modulated_wm_image'
            native_csf_image = 'native_csf_image'
            normalized_csf_image = 'normalized_csf_image'
            modulated_csf_image = 'modulated_csf_image'
            modulated_input_image = 'modulated_input_image'
            bias_corrected_image = 'bias_corrected_image'
            transformation_mat = 'transformation_mat'
            inverse_transformation_mat = 'inverse_transformation_mat'

    class SliceTiming:
        class Input:
            in_files = 'in_files'
            num_slices = 'num_slices'
            time_repetition = 'time_repetition'
            time_acquisition = 'time_acquisition'
            slice_order = 'slice_order'
            ref_slice = 'ref_slice'
            out_prefix = 'out_prefix'

        class Output:
            timecorrected_files = 'timecorrected_files'

    class Smooth:
        class Input:
            in_files = 'in_files'
            fwhm = 'fwhm'
            data_type = 'data_type'
            implicit_masking = 'implicit_masking'
            out_prefix = 'out_prefix'

        class Output:
            smoothed_files = 'smoothed_files'

    class VBMSegment:
        class Input:
            in_files = 'in_files'
            tissues = 'tissues'
            gaussians_per_class = 'gaussians_per_class'
            bias_regularization = 'bias_regularization'
            bias_fwhm = 'bias_fwhm'
            sampling_distance = 'sampling_distance'
            warping_regularization = 'warping_regularization'
            spatial_normalization = 'spatial_normalization'
            dartel_template = 'dartel_template'
            use_sanlm_denoising_filter = 'use_sanlm_denoising_filter'
            mrf_weighting = 'mrf_weighting'
            cleanup_partitions = 'cleanup_partitions'
            display_results = 'display_results'
            gm_native = 'gm_native'
            gm_normalized = 'gm_normalized'
            gm_modulated_normalized = 'gm_modulated_normalized'
            gm_dartel = 'gm_dartel'
            wm_native = 'wm_native'
            wm_normalized = 'wm_normalized'
            wm_modulated_normalized = 'wm_modulated_normalized'
            wm_dartel = 'wm_dartel'
            csf_native = 'csf_native'
            csf_normalized = 'csf_normalized'
            csf_modulated_normalized = 'csf_modulated_normalized'
            csf_dartel = 'csf_dartel'
            bias_corrected_native = 'bias_corrected_native'
            bias_corrected_normalized = 'bias_corrected_normalized'
            bias_corrected_affine = 'bias_corrected_affine'
            pve_label_native = 'pve_label_native'
            pve_label_normalized = 'pve_label_normalized'
            pve_label_dartel = 'pve_label_dartel'
            jacobian_determinant = 'jacobian_determinant'
            deformation_field = 'deformation_field'

        class Output:
            native_class_images = 'native_class_images'
            dartel_input_images = 'dartel_input_images'
            normalized_class_images = 'normalized_class_images'
            modulated_class_images = 'modulated_class_images'
            transformation_mat = 'transformation_mat'
            bias_corrected_images = 'bias_corrected_images'
            normalized_bias_corrected_images = 'normalized_bias_corrected_images'
            pve_label_native_images = 'pve_label_native_images'
            pve_label_normalized_images = 'pve_label_normalized_images'
            pve_label_registered_images = 'pve_label_registered_images'
            forward_deformation_field = 'forward_deformation_field'
            inverse_deformation_field = 'inverse_deformation_field'
            jacobian_determinant_images = 'jacobian_determinant_images'

    class EstimateContrast:
        class Input:
            spm_mat_file = 'spm_mat_file'
            contrasts = 'contrasts'
            beta_images = 'beta_images'
            residual_image = 'residual_image'
            use_derivs = 'use_derivs'
            group_contrast = 'group_contrast'

        class Output:
            con_images = 'con_images'
            spmT_images = 'spmT_images'
            ess_images = 'ess_images'
            spmF_images = 'spmF_images'
            spm_mat_file = 'spm_mat_file'

    class EstimateModel:
        class Input:
            spm_mat_file = 'spm_mat_file'
            estimation_method = 'estimation_method'
            write_residuals = 'write_residuals'
            flags = 'flags'

        class Output:
            mask_image = 'mask_image'
            beta_images = 'beta_images'
            residual_image = 'residual_image'
            residual_images = 'residual_images'
            RPVimage = 'RPVimage'
            spm_mat_file = 'spm_mat_file'
            labels = 'labels'
            SDerror = 'SDerror'
            ARcoef = 'ARcoef'
            Cbetas = 'Cbetas'
            SDbetas = 'SDbetas'
            con_images = 'con_images'
            spmT_images = 'spmT_images'
            ess_images = 'ess_images'
            spmF_images = 'spmF_images'

    class FactorialDesign:
        class Input:
            spm_mat_dir = 'spm_mat_dir'
            covariates = 'covariates'
            threshold_mask_none = 'threshold_mask_none'
            threshold_mask_absolute = 'threshold_mask_absolute'
            threshold_mask_relative = 'threshold_mask_relative'
            use_implicit_threshold = 'use_implicit_threshold'
            explicit_mask_file = 'explicit_mask_file'
            global_calc_omit = 'global_calc_omit'
            global_calc_mean = 'global_calc_mean'
            global_calc_values = 'global_calc_values'
            no_grand_mean_scaling = 'no_grand_mean_scaling'
            global_normalization = 'global_normalization'

        class Output:
            spm_mat_file = 'spm_mat_file'

    class Level1Design:
        class Input:
            spm_mat_dir = 'spm_mat_dir'
            timing_units = 'timing_units'
            interscan_interval = 'interscan_interval'
            microtime_resolution = 'microtime_resolution'
            microtime_onset = 'microtime_onset'
            session_info = 'session_info'
            factor_info = 'factor_info'
            bases = 'bases'
            volterra_expansion_order = 'volterra_expansion_order'
            global_intensity_normalization = 'global_intensity_normalization'
            mask_image = 'mask_image'
            mask_threshold = 'mask_threshold'
            model_serial_correlations = 'model_serial_correlations'
            flags = 'flags'

        class Output:
            spm_mat_file = 'spm_mat_file'

    class MultipleRegressionDesign:
        class Input:
            in_files = 'in_files'
            include_intercept = 'include_intercept'
            user_covariates = 'user_covariates'
            spm_mat_dir = 'spm_mat_dir'
            covariates = 'covariates'
            threshold_mask_none = 'threshold_mask_none'
            threshold_mask_absolute = 'threshold_mask_absolute'
            threshold_mask_relative = 'threshold_mask_relative'
            use_implicit_threshold = 'use_implicit_threshold'
            explicit_mask_file = 'explicit_mask_file'
            global_calc_omit = 'global_calc_omit'
            global_calc_mean = 'global_calc_mean'
            global_calc_values = 'global_calc_values'
            no_grand_mean_scaling = 'no_grand_mean_scaling'
            global_normalization = 'global_normalization'

    class OneSampleTTestDesign:
        class Input:
            in_files = 'in_files'
            spm_mat_dir = 'spm_mat_dir'
            covariates = 'covariates'
            threshold_mask_none = 'threshold_mask_none'
            threshold_mask_absolute = 'threshold_mask_absolute'
            threshold_mask_relative = 'threshold_mask_relative'
            use_implicit_threshold = 'use_implicit_threshold'
            explicit_mask_file = 'explicit_mask_file'
            global_calc_omit = 'global_calc_omit'
            global_calc_mean = 'global_calc_mean'
            global_calc_values = 'global_calc_values'
            no_grand_mean_scaling = 'no_grand_mean_scaling'
            global_normalization = 'global_normalization'

    class PairedTTestDesign:
        class Input:
            paired_files = 'paired_files'
            grand_mean_scaling = 'grand_mean_scaling'
            ancova = 'ancova'
            spm_mat_dir = 'spm_mat_dir'
            covariates = 'covariates'
            threshold_mask_none = 'threshold_mask_none'
            threshold_mask_absolute = 'threshold_mask_absolute'
            threshold_mask_relative = 'threshold_mask_relative'
            use_implicit_threshold = 'use_implicit_threshold'
            explicit_mask_file = 'explicit_mask_file'
            global_calc_omit = 'global_calc_omit'
            global_calc_mean = 'global_calc_mean'
            global_calc_values = 'global_calc_values'
            no_grand_mean_scaling = 'no_grand_mean_scaling'
            global_normalization = 'global_normalization'

    class Threshold:
        class Input:
            spm_mat_file = 'spm_mat_file'
            stat_image = 'stat_image'
            contrast_index = 'contrast_index'
            use_fwe_correction = 'use_fwe_correction'
            use_vox_fdr_correction = 'use_vox_fdr_correction'
            use_topo_fdr = 'use_topo_fdr'
            height_threshold = 'height_threshold'
            height_threshold_type = 'height_threshold_type'
            extent_fdr_p_threshold = 'extent_fdr_p_threshold'
            extent_threshold = 'extent_threshold'
            force_activation = 'force_activation'

        class Output:
            thresholded_map = 'thresholded_map'
            n_clusters = 'n_clusters'
            pre_topo_fdr_map = 'pre_topo_fdr_map'
            pre_topo_n_clusters = 'pre_topo_n_clusters'
            activation_forced = 'activation_forced'
            cluster_forming_thr = 'cluster_forming_thr'

    class ThresholdStatistics:
        class Input:
            spm_mat_file = 'spm_mat_file'
            stat_image = 'stat_image'
            contrast_index = 'contrast_index'
            height_threshold = 'height_threshold'
            extent_threshold = 'extent_threshold'

        class Output:
            voxelwise_P_Bonf = 'voxelwise_P_Bonf'
            voxelwise_P_RF = 'voxelwise_P_RF'
            voxelwise_P_uncor = 'voxelwise_P_uncor'
            voxelwise_P_FDR = 'voxelwise_P_FDR'
            clusterwise_P_RF = 'clusterwise_P_RF'
            clusterwise_P_FDR = 'clusterwise_P_FDR'

    class TwoSampleTTestDesign:
        class Input:
            group1_files = 'group1_files'
            group2_files = 'group2_files'
            dependent = 'dependent'
            unequal_variance = 'unequal_variance'
            spm_mat_dir = 'spm_mat_dir'
            covariates = 'covariates'
            threshold_mask_none = 'threshold_mask_none'
            threshold_mask_absolute = 'threshold_mask_absolute'
            threshold_mask_relative = 'threshold_mask_relative'
            use_implicit_threshold = 'use_implicit_threshold'
            explicit_mask_file = 'explicit_mask_file'
            global_calc_omit = 'global_calc_omit'
            global_calc_mean = 'global_calc_mean'
            global_calc_values = 'global_calc_values'
            no_grand_mean_scaling = 'no_grand_mean_scaling'
            global_normalization = 'global_normalization'
